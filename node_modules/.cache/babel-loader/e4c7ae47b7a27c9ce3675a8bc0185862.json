{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/ButtonSwitch/ButtonSwitch.tsx\";\nimport React from 'react';\nimport { Box, Tab, Tabs } from '@material-ui/core';\nimport 'components/styles/ButtonSwitch.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonSwitch = _ref => {\n  let {\n    items = [],\n    height = 44,\n    padding = 5,\n    width = '100%',\n    value,\n    onChange\n  } = _ref;\n  const minHeight = height - padding * 2;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: width,\n    maxWidth: \"100%\",\n    display: \"inline-block\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"buttonSwitchContainer\",\n      padding: `${padding}px`,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        style: {\n          minHeight\n        },\n        value: value,\n        variant: \"fullWidth\",\n        onChange: (event, newValue) => {\n          onChange && onChange(newValue);\n        },\n        classes: {\n          indicator: 'indicator'\n        },\n        children: items.map((tab, index) => {\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            disableRipple: true,\n            label: Array.isArray(tab.label) ? tab.label.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)) : tab.label,\n            value: tab.value,\n            wrapped: true,\n            className: `tab ${value === tab.value ? 'tabActive' : 'tabInactive'}`,\n            style: {\n              minHeight: minHeight,\n              height: minHeight\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ButtonSwitch;\nexport default ButtonSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonSwitch\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/ButtonSwitch/ButtonSwitch.tsx"],"names":["React","Box","Tab","Tabs","ButtonSwitch","items","height","padding","width","value","onChange","minHeight","event","newValue","indicator","map","tab","index","Array","isArray","label","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,mBAA/B;AACA,OAAO,qCAAP;;;AAiBA,MAAMC,YAAyC,GAAG,QAO5C;AAAA,MAP6C;AACjDC,IAAAA,KAAK,GAAG,EADyC;AAEjDC,IAAAA,MAAM,GAAG,EAFwC;AAGjDC,IAAAA,OAAO,GAAG,CAHuC;AAIjDC,IAAAA,KAAK,GAAG,MAJyC;AAKjDC,IAAAA,KALiD;AAMjDC,IAAAA;AANiD,GAO7C;AACJ,QAAMC,SAAS,GAAGL,MAAM,GAAGC,OAAO,GAAG,CAArC;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAEC,KAAZ;AAAmB,IAAA,QAAQ,EAAC,MAA5B;AAAmC,IAAA,OAAO,EAAC,cAA3C;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,OAAO,EAAG,GAAED,OAAQ,IAA3D;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA;AAAF,SADT;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,QAAQ,EAAE,CAACG,KAAD,EAAQC,QAAR,KAAqB;AAC7BH,UAAAA,QAAQ,IAAIA,QAAQ,CAACG,QAAD,CAApB;AACD,SANH;AAOE,QAAA,OAAO,EAAE;AACPC,UAAAA,SAAS,EAAE;AADJ,SAPX;AAAA,kBAWGT,KAAK,CAACU,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,8BACE,QAAC,GAAD;AAEE,YAAA,aAAa,EAAE,IAFjB;AAGE,YAAA,KAAK,EACHC,KAAK,CAACC,OAAN,CAAcH,GAAG,CAACI,KAAlB,IACIJ,GAAG,CAACI,KAAJ,CAAUL,GAAV,CAAc,CAACM,IAAD,EAAOJ,KAAP,kBACZ;AAAA,wBAAmBI;AAAnB,eAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA,oBADF,CADJ,GAIID,GAAG,CAACI,KARZ;AAUE,YAAA,KAAK,EAAEJ,GAAG,CAACP,KAVb;AAWE,YAAA,OAAO,MAXT;AAYE,YAAA,SAAS,EAAG,OACVA,KAAK,KAAKO,GAAG,CAACP,KAAd,GAAsB,WAAtB,GAAoC,aACrC,EAdH;AAeE,YAAA,KAAK,EAAE;AACLE,cAAAA,SAAS,EAAEA,SADN;AAELL,cAAAA,MAAM,EAAEK;AAFH;AAfT,aACOM,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAsBD,SAvBA;AAXH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CApDD;;KAAMb,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Box, Tab, Tabs } from '@material-ui/core';\nimport 'components/styles/ButtonSwitch.scss';\n\ninterface Item {\n  label: React.ReactNode;\n  icon?: any;\n  value: string;\n}\n\ninterface ButtonSwitchProps {\n  items?: Item[];\n  value?: string;\n  onChange?: (value: string) => void;\n  height?: number;\n  padding?: number;\n  width?: number | string;\n}\n\nconst ButtonSwitch: React.FC<ButtonSwitchProps> = ({\n  items = [],\n  height = 44,\n  padding = 5,\n  width = '100%',\n  value,\n  onChange,\n}) => {\n  const minHeight = height - padding * 2;\n\n  return (\n    <Box width={width} maxWidth='100%' display='inline-block'>\n      <Box className='buttonSwitchContainer' padding={`${padding}px`}>\n        <Tabs\n          style={{ minHeight }}\n          value={value}\n          variant='fullWidth'\n          onChange={(event, newValue) => {\n            onChange && onChange(newValue);\n          }}\n          classes={{\n            indicator: 'indicator',\n          }}\n        >\n          {items.map((tab, index) => {\n            return (\n              <Tab\n                key={index}\n                disableRipple={true}\n                label={\n                  Array.isArray(tab.label)\n                    ? tab.label.map((item, index) => (\n                        <span key={index}>{item}</span>\n                      ))\n                    : tab.label\n                }\n                value={tab.value}\n                wrapped\n                className={`tab ${\n                  value === tab.value ? 'tabActive' : 'tabInactive'\n                }`}\n                style={{\n                  minHeight: minHeight,\n                  height: minHeight,\n                }}\n              />\n            );\n          })}\n        </Tabs>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ButtonSwitch;\n"]},"metadata":{},"sourceType":"module"}