{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/LandingPage/TradingInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { StakeQuickModal } from 'components';\nimport { useOldLairInfo, useTotalRewardsDistributed } from 'state/stake/hooks';\nimport { formatCompact, useLairDQUICKAPY } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { ChainId } from '@uniswap/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TradingInfo = _ref => {\n  _s();\n\n  let {\n    globalData\n  } = _ref;\n  const lairInfo = useOldLairInfo();\n  const [openStakeModal, setOpenStakeModal] = useState(false);\n  const dQUICKAPY = useLairDQUICKAPY(false, lairInfo); //TODO: Support Multichain\n\n  const totalRewardsUSD = useTotalRewardsDistributed(ChainId.MAINNET);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openStakeModal && /*#__PURE__*/_jsxDEV(StakeQuickModal, {\n      open: openStakeModal,\n      onClose: () => setOpenStakeModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"tradingSection\",\n      children: [globalData ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: Number(globalData.oneDayTxns).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: 100,\n        height: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-uppercase\",\n        children: t('24hTxs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"tradingSection\",\n      children: [globalData ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: formatCompact(globalData.oneDayVolumeUSD)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: 100,\n        height: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('24hTradingVol')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"tradingSection\",\n      children: [totalRewardsUSD ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: totalRewardsUSD.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: 100,\n        height: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('24hRewardsDistributed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"tradingSection\",\n      children: [globalData ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: Number(globalData.pairCount).toLocaleString(undefined, {\n          maximumFractionDigits: 0\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: 100,\n        height: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('totalTradingPairs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"tradingSection\",\n      pt: \"20px\",\n      children: [dQUICKAPY ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [dQUICKAPY.toLocaleString(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: 100,\n        height: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"dQUICK \", t('apy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => setOpenStakeModal(true),\n        children: [t('stake'), \" \", '>']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TradingInfo, \"lcH3xp2NOnLg62YykvGqpDwz63Y=\", false, function () {\n  return [useOldLairInfo, useLairDQUICKAPY, useTotalRewardsDistributed, useTranslation];\n});\n\n_c = TradingInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradingInfo\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/LandingPage/TradingInfo.tsx"],"names":["React","useState","Box","Skeleton","StakeQuickModal","useOldLairInfo","useTotalRewardsDistributed","formatCompact","useLairDQUICKAPY","useTranslation","ChainId","TradingInfo","globalData","lairInfo","openStakeModal","setOpenStakeModal","dQUICKAPY","totalRewardsUSD","MAINNET","t","Number","oneDayTxns","toLocaleString","oneDayVolumeUSD","pairCount","undefined","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { StakeQuickModal } from 'components';\nimport { useOldLairInfo, useTotalRewardsDistributed } from 'state/stake/hooks';\nimport { formatCompact, useLairDQUICKAPY } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { ChainId } from '@uniswap/sdk';\n\nexport const TradingInfo: React.FC<{ globalData: any }> = ({ globalData }) => {\n  const lairInfo = useOldLairInfo();\n  const [openStakeModal, setOpenStakeModal] = useState(false);\n\n  const dQUICKAPY = useLairDQUICKAPY(false, lairInfo);\n  //TODO: Support Multichain\n  const totalRewardsUSD = useTotalRewardsDistributed(ChainId.MAINNET);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {openStakeModal && (\n        <StakeQuickModal\n          open={openStakeModal}\n          onClose={() => setOpenStakeModal(false)}\n        />\n      )}\n      <Box className='tradingSection'>\n        {globalData ? (\n          <h3>{Number(globalData.oneDayTxns).toLocaleString()}</h3>\n        ) : (\n          <Skeleton variant='rect' width={100} height={45} />\n        )}\n        <p className='text-uppercase'>{t('24hTxs')}</p>\n      </Box>\n      <Box className='tradingSection'>\n        {globalData ? (\n          <Box display='flex'>\n            <h6>$</h6>\n            <h3>{formatCompact(globalData.oneDayVolumeUSD)}</h3>\n          </Box>\n        ) : (\n          <Skeleton variant='rect' width={100} height={45} />\n        )}\n        <p>{t('24hTradingVol')}</p>\n      </Box>\n      <Box className='tradingSection'>\n        {totalRewardsUSD ? (\n          <Box display='flex'>\n            <h6>$</h6>\n            <h3>{totalRewardsUSD.toLocaleString()}</h3>\n          </Box>\n        ) : (\n          <Skeleton variant='rect' width={100} height={45} />\n        )}\n        <p>{t('24hRewardsDistributed')}</p>\n      </Box>\n      <Box className='tradingSection'>\n        {globalData ? (\n          <h3>\n            {Number(globalData.pairCount).toLocaleString(undefined, {\n              maximumFractionDigits: 0,\n            })}\n          </h3>\n        ) : (\n          <Skeleton variant='rect' width={100} height={45} />\n        )}\n        <p>{t('totalTradingPairs')}</p>\n      </Box>\n      <Box className='tradingSection' pt='20px'>\n        {dQUICKAPY ? (\n          <h3>{dQUICKAPY.toLocaleString()}%</h3>\n        ) : (\n          <Skeleton variant='rect' width={100} height={45} />\n        )}\n        <p>dQUICK {t('apy')}</p>\n        <h4 onClick={() => setOpenStakeModal(true)}>\n          {t('stake')} {'>'}\n        </h4>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}