{"ast":null,"code":"import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk';\nimport { injected, walletconnect, walletlink, portis, arkaneconnect, safeApp } from '../connectors';\nimport MetamaskIcon from 'assets/images/metamask.png';\nimport BlockWalletIcon from \"assets/images/blockwalletIcon.svg\";\nimport cypherDIcon from 'assets/images/cypherDIcon.png';\nimport BitKeepIcon from 'assets/images/bitkeep.png';\nimport CoinbaseWalletIcon from \"assets/images/coinbaseWalletIcon.svg\";\nimport WalletConnectIcon from \"assets/images/walletConnectIcon.svg\";\nimport PortisIcon from 'assets/images/portisIcon.png';\nimport VenlyIcon from \"assets/images/venly.svg\";\nimport GnosisIcon from 'assets/images/gnosis_safe.png';\nconst WETH_ONLY = {\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET]],\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]]\n}; // TODO: Remove this constant when supporting multichain\n\nexport const MATIC_CHAIN = ChainId.MAINNET;\nexport let TxnType;\n\n(function (TxnType) {\n  TxnType[TxnType[\"SWAP\"] = 0] = \"SWAP\";\n  TxnType[TxnType[\"ADD\"] = 1] = \"ADD\";\n  TxnType[TxnType[\"REMOVE\"] = 2] = \"REMOVE\";\n})(TxnType || (TxnType = {}));\n\nexport const GlobalConst = {\n  blacklists: {\n    TOKEN_BLACKLIST: [null],\n    PAIR_BLACKLIST: [null]\n  },\n  addresses: {\n    ROUTER_ADDRESS: {\n      [ChainId.MAINNET]: '0xF03B6DAD0e06e6c542CF88596355f91922f69bA7',\n      [ChainId.TESTNET]: '0x8954AfA98594b838bda56FE4C12a09D7739D179b'\n    },\n    //'0x6207A65a8bbc87dD02C3109D2c74a6bCE4af1C8c';//\n    ZERO_ADDRESS: '0x0000000000000000000000000000000000000000',\n    LAIR_ADDRESS: '0xF03B6DAD0e06e6c542CF88596355f91922f69bA7',\n    NEW_LAIR_ADDRESS: '0xF03B6DAD0e06e6c542CF88596355f91922f69bA7',\n    QUICK_ADDRESS: '0x6FC4563460d5f45932C473334d5c1C5B4aEA0E01',\n    NEW_QUICK_ADDRESS: '0x5E245Ca4fc9Ce5D4D03E53F50E0cE681e9DCf4fD',\n    FACTORY_ADDRESS: '0x1e00cf5647108EdCB4f6e1EbC5805753db3dF63e',\n    GOVERNANCE_ADDRESS: '0xBCd969bDF37654aaE11D37817b13Da9F7e0374e5',\n    //TODO: MATIC\n    MERKLE_DISTRIBUTOR_ADDRESS: {\n      // TODO: specify merkle distributor for mainnet\n      [ChainId.MAINNET]: '0x4087F566796b46eEB01A38174c06E2f9924eAea8',\n      //TODO: MATIC\n      [ChainId.TESTNET]: undefined\n    },\n    QUICK_CONVERSION: '0xBCd969bDF37654aaE11D37817b13Da9F7e0374e5'\n  },\n  utils: {\n    QUICK_CONVERSION_RATE: 1000,\n    ONEDAYSECONDS: 60 * 60 * 24,\n    DQUICKFEE: 0.04,\n    DQUICKAPR_MULTIPLIER: 0.01,\n    ROWSPERPAGE: 10,\n    FEEPERCENT: 0.003,\n    BUNDLE_ID: '1',\n    PROPOSAL_LENGTH_IN_DAYS: 7,\n    // TODO this is only approximate, it's actually based on blocks\n    NetworkContextName: 'NETWORK',\n    INITIAL_ALLOWED_SLIPPAGE: 50,\n    // default allowed slippage, in bips\n    DEFAULT_DEADLINE_FROM_NOW: 60 * 20,\n    // 20 minutes, denominated in seconds\n    BIG_INT_ZERO: JSBI.BigInt(0),\n    ONE_BIPS: new Percent(JSBI.BigInt(1), JSBI.BigInt(10000)),\n    // one basis point\n    BIPS_BASE: JSBI.BigInt(10000),\n    // used to ensure the user doesn't send so much ETH so they end up with <.01\n    MIN_ETH: JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)),\n    // .01 ETH\n    BETTER_TRADE_LINK_THRESHOLD: new Percent(JSBI.BigInt(75), JSBI.BigInt(10000)),\n    // the Uniswap Default token list lives here\n    // we add '' to remove the possibility of nulls\n    DEFAULT_TOKEN_LIST_URL: process.env.REACT_APP_TOKEN_LIST_DEFAULT_URL + '',\n    DEFAULT_LP_FARMS_LIST_URL: process.env.REACT_APP_STAKING_LIST_DEFAULT_URL + '',\n    DEFAULT_DUAL_FARMS_LIST_URL: process.env.REACT_APP_DUAL_STAKING_LIST_DEFAULT_URL + '',\n    DEFAULT_SYRUP_LIST_URL: process.env.REACT_APP_SYRUP_LIST_DEFAULT_URL + '',\n    ANALYTICS_TOKENS_COUNT: 200,\n    ANALYTICS_PAIRS_COUNT: 400\n  },\n  analyticChart: {\n    ONE_MONTH_CHART: 1,\n    THREE_MONTH_CHART: 2,\n    SIX_MONTH_CHART: 3,\n    ONE_YEAR_CHART: 4,\n    ALL_CHART: 5,\n    CHART_COUNT: 60 //limit analytics chart items not more than 60\n\n  },\n  farmIndex: {\n    LPFARM_INDEX: 0,\n    DUALFARM_INDEX: 1\n  },\n  walletName: {\n    METAMASK: 'Metamask',\n    CYPHERD: 'CypherD',\n    BLOCKWALLET: 'BlockWallet',\n    BITKEEP: 'BitKeep',\n    INJECTED: 'Injected',\n    SAFE_APP: 'Gnosis Safe App',\n    ARKANE_CONNECT: 'Venly',\n    Portis: 'Portis',\n    WALLET_LINK: 'Coinbase Wallet',\n    WALLET_CONNECT: 'WalletConnect'\n  }\n};\nexport const SUPPORTED_WALLETS = {\n  CYPHERD: {\n    connector: injected,\n    name: GlobalConst.walletName.CYPHERD,\n    iconName: cypherDIcon,\n    description: 'CypherD browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  METAMASK: {\n    connector: injected,\n    name: GlobalConst.walletName.METAMASK,\n    iconName: MetamaskIcon,\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  BLOCKWALLET: {\n    connector: injected,\n    name: GlobalConst.walletName.BLOCKWALLET,\n    iconName: BlockWalletIcon,\n    description: 'BlockWallet browser extension.',\n    href: null,\n    color: '#1673ff'\n  },\n  BITKEEP: {\n    connector: injected,\n    name: GlobalConst.walletName.BITKEEP,\n    iconName: BitKeepIcon,\n    description: 'BitKeep browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  INJECTED: {\n    connector: injected,\n    name: GlobalConst.walletName.INJECTED,\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  SAFE_APP: {\n    connector: safeApp,\n    name: GlobalConst.walletName.SAFE_APP,\n    iconName: GnosisIcon,\n    description: 'Login using gnosis safe app',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  ARKANE_CONNECT: {\n    connector: arkaneconnect,\n    name: GlobalConst.walletName.ARKANE_CONNECT,\n    iconName: VenlyIcon,\n    description: 'Login using Venly hosted wallet.',\n    href: null,\n    color: '#4196FC'\n  },\n  Portis: {\n    connector: portis,\n    name: GlobalConst.walletName.Portis,\n    iconName: PortisIcon,\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: GlobalConst.walletName.WALLET_LINK,\n    iconName: CoinbaseWalletIcon,\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: GlobalConst.walletName.WALLET_CONNECT,\n    iconName: WalletConnectIcon,\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  }\n};\nexport const GlobalValue = {\n  percents: {\n    ALLOWED_PRICE_IMPACT_LOW: new Percent( // used for warning states\n    JSBI.BigInt(100), GlobalConst.utils.BIPS_BASE),\n    // 1%\n    ALLOWED_PRICE_IMPACT_MEDIUM: new Percent(JSBI.BigInt(300), GlobalConst.utils.BIPS_BASE),\n    // 3%\n    ALLOWED_PRICE_IMPACT_HIGH: new Percent(JSBI.BigInt(500), GlobalConst.utils.BIPS_BASE),\n    // 5%\n    PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: new Percent( // if the price slippage exceeds this number, force the user to type 'confirm' to execute\n    JSBI.BigInt(1000), GlobalConst.utils.BIPS_BASE),\n    // 10%\n    BLOCKED_PRICE_IMPACT_NON_EXPERT: new Percent( // for non expert mode disable swaps above this\n    JSBI.BigInt(1500), GlobalConst.utils.BIPS_BASE) // 15%\n\n  },\n  tokens: {\n    wwDOGE: WETH[ChainId.MAINNET],\n    COMMON: {\n      EMPTY: new Token(ChainId.MAINNET, '0x0000000000000000000000000000000000000000', 0, 'EMPTY', 'EMPTY'),\n      USDC: new Token(ChainId.MAINNET, '0x765277EebeCA2e31912C9946eAe1021199B39C61', 6, 'USDC', 'USDC'),\n      USDT: new Token(ChainId.MAINNET, '0x42fDB358e6a8526CD0ACaB47D72CaFFc6D95DD2f', 6, 'USDT', 'Tether USD'),\n      OLD_QUICK: new Token(ChainId.MAINNET, GlobalConst.addresses.QUICK_ADDRESS, 18, 'QUICK(OLD)', 'Quickswap(OLD)'),\n      NEW_QUICK: new Token(ChainId.MAINNET, GlobalConst.addresses.NEW_QUICK_ADDRESS, 18, 'QUICK(NEW)', 'QuickSwap(NEW)'),\n      OLD_DQUICK: new Token(ChainId.MAINNET, '0x42fDB358e6a8526CD0ACaB47D72CaFFc6D95DD2f', 18, 'dQUICK', 'Dragon QUICK'),\n      NEW_DQUICK: new Token(ChainId.MAINNET, '0x42fDB358e6a8526CD0ACaB47D72CaFFc6D95DD2f', 18, 'dQUICK', 'Dragon QUICK'),\n      WBTC: new Token(ChainId.MAINNET, '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f', 8, 'wBTC', 'Wrapped Bitcoin'),\n      DAI: new Token(ChainId.MAINNET, '0x639A647fbe20b6c8ac19E48E2de44ea792c62c5C', 18, 'DAI', 'Dai Stablecoin'),\n      ETHER: new Token(ChainId.MAINNET, '0xB44a9B6905aF7c801311e8F4E76932ee959c663C', 18, 'ETH', 'Ether'),\n      CXETH: new Token(ChainId.MAINNET, '0xB44a9B6905aF7c801311e8F4E76932ee959c663C', 18, 'cxETH', 'CelsiusX Wrapped ETH')\n    }\n  }\n};\nexport const GlobalData = {\n  bases: {\n    // used to construct intermediary pairs for trading\n    BASES_TO_CHECK_TRADES_AGAINST: { ...WETH_ONLY,\n      [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], GlobalValue.tokens.COMMON.USDC, GlobalValue.tokens.COMMON.USDT, GlobalValue.tokens.COMMON.OLD_QUICK, GlobalValue.tokens.COMMON.NEW_QUICK, GlobalValue.tokens.COMMON.ETHER, GlobalValue.tokens.COMMON.WBTC, GlobalValue.tokens.COMMON.DAI]\n    },\n    // Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these tokens.\n    CUSTOM_BASES: {\n      [ChainId.MAINNET]: undefined,\n      [ChainId.TESTNET]: undefined\n    },\n    // used for display in the default list when adding liquidity\n    SUGGESTED_BASES: { ...WETH_ONLY,\n      [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET]]\n    },\n    // used to construct the list of all pairs we consider by default in the frontend\n    BASES_TO_TRACK_LIQUIDITY_FOR: { ...WETH_ONLY,\n      [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], GlobalValue.tokens.COMMON.DAI, GlobalValue.tokens.COMMON.USDC, GlobalValue.tokens.COMMON.USDT, GlobalValue.tokens.COMMON.OLD_QUICK, GlobalValue.tokens.COMMON.NEW_QUICK, GlobalValue.tokens.COMMON.ETHER, GlobalValue.tokens.COMMON.WBTC]\n    }\n  },\n  pairs: {\n    PINNED_PAIRS: {\n      [ChainId.MAINNET]: [[GlobalValue.tokens.COMMON.USDC, GlobalValue.tokens.COMMON.USDT], [GlobalValue.tokens.COMMON.USDC, GlobalValue.tokens.COMMON.DAI], [GlobalValue.tokens.COMMON.ETHER, GlobalValue.tokens.COMMON.USDC], [GlobalValue.tokens.COMMON.WBTC, GlobalValue.tokens.COMMON.ETHER], [WETH[ChainId.MAINNET], GlobalValue.tokens.COMMON.USDT], [WETH[ChainId.MAINNET], GlobalValue.tokens.COMMON.USDC], [WETH[ChainId.MAINNET], GlobalValue.tokens.COMMON.ETHER], [GlobalValue.tokens.COMMON.ETHER, GlobalValue.tokens.COMMON.OLD_QUICK]],\n      [ChainId.TESTNET]: undefined\n    }\n  },\n  analytics: {\n    CHART_DURATIONS: [GlobalConst.analyticChart.ONE_MONTH_CHART, GlobalConst.analyticChart.THREE_MONTH_CHART, GlobalConst.analyticChart.SIX_MONTH_CHART, GlobalConst.analyticChart.ONE_YEAR_CHART, GlobalConst.analyticChart.ALL_CHART],\n    CHART_DURATION_TEXTS: ['1M', '3M', '6M', '1Y', 'All']\n  }\n}; // a list of tokens by chain","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WETH","injected","walletconnect","walletlink","portis","arkaneconnect","safeApp","MetamaskIcon","cypherDIcon","BitKeepIcon","PortisIcon","GnosisIcon","WETH_ONLY","TESTNET","MAINNET","MATIC_CHAIN","TxnType","GlobalConst","blacklists","TOKEN_BLACKLIST","PAIR_BLACKLIST","addresses","ROUTER_ADDRESS","ZERO_ADDRESS","LAIR_ADDRESS","NEW_LAIR_ADDRESS","QUICK_ADDRESS","NEW_QUICK_ADDRESS","FACTORY_ADDRESS","GOVERNANCE_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","undefined","QUICK_CONVERSION","utils","QUICK_CONVERSION_RATE","ONEDAYSECONDS","DQUICKFEE","DQUICKAPR_MULTIPLIER","ROWSPERPAGE","FEEPERCENT","BUNDLE_ID","PROPOSAL_LENGTH_IN_DAYS","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","BigInt","ONE_BIPS","BIPS_BASE","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD","DEFAULT_TOKEN_LIST_URL","process","env","REACT_APP_TOKEN_LIST_DEFAULT_URL","DEFAULT_LP_FARMS_LIST_URL","REACT_APP_STAKING_LIST_DEFAULT_URL","DEFAULT_DUAL_FARMS_LIST_URL","REACT_APP_DUAL_STAKING_LIST_DEFAULT_URL","DEFAULT_SYRUP_LIST_URL","REACT_APP_SYRUP_LIST_DEFAULT_URL","ANALYTICS_TOKENS_COUNT","ANALYTICS_PAIRS_COUNT","analyticChart","ONE_MONTH_CHART","THREE_MONTH_CHART","SIX_MONTH_CHART","ONE_YEAR_CHART","ALL_CHART","CHART_COUNT","farmIndex","LPFARM_INDEX","DUALFARM_INDEX","walletName","METAMASK","CYPHERD","BLOCKWALLET","BITKEEP","INJECTED","SAFE_APP","ARKANE_CONNECT","Portis","WALLET_LINK","WALLET_CONNECT","SUPPORTED_WALLETS","connector","name","iconName","description","href","color","BlockWalletIcon","primary","mobile","VenlyIcon","CoinbaseWalletIcon","WalletConnectIcon","GlobalValue","percents","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","tokens","wwDOGE","COMMON","EMPTY","USDC","USDT","OLD_QUICK","NEW_QUICK","OLD_DQUICK","NEW_DQUICK","WBTC","DAI","ETHER","CXETH","GlobalData","bases","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","pairs","PINNED_PAIRS","analytics","CHART_DURATIONS","CHART_DURATION_TEXTS"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk';\nimport { AbstractConnector } from '@web3-react/abstract-connector';\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  portis,\n  arkaneconnect,\n  safeApp,\n} from '../connectors';\nimport MetamaskIcon from 'assets/images/metamask.png';\nimport BlockWalletIcon from 'assets/images/blockwalletIcon.svg';\nimport cypherDIcon from 'assets/images/cypherDIcon.png';\nimport BitKeepIcon from 'assets/images/bitkeep.png';\nimport CoinbaseWalletIcon from 'assets/images/coinbaseWalletIcon.svg';\nimport WalletConnectIcon from 'assets/images/walletConnectIcon.svg';\nimport PortisIcon from 'assets/images/portisIcon.png';\nimport VenlyIcon from 'assets/images/venly.svg';\nimport GnosisIcon from 'assets/images/gnosis_safe.png';\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET]],\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n};\n\n// TODO: Remove this constant when supporting multichain\nexport const MATIC_CHAIN = ChainId.MAINNET;\n\nexport enum TxnType {\n  SWAP,\n  ADD,\n  REMOVE,\n}\n\nexport const GlobalConst = {\n  blacklists: {\n    TOKEN_BLACKLIST: [null],\n    PAIR_BLACKLIST: [null],\n  },\n  addresses: {\n    ROUTER_ADDRESS: {\n      [ChainId.MAINNET]: '0xF03B6DAD0e06e6c542CF88596355f91922f69bA7',\n      [ChainId.TESTNET]: '0x8954AfA98594b838bda56FE4C12a09D7739D179b',\n    }, //'0x6207A65a8bbc87dD02C3109D2c74a6bCE4af1C8c';//\n    ZERO_ADDRESS: '0x0000000000000000000000000000000000000000',\n    LAIR_ADDRESS: '0xF03B6DAD0e06e6c542CF88596355f91922f69bA7',\n    NEW_LAIR_ADDRESS: '0xF03B6DAD0e06e6c542CF88596355f91922f69bA7',\n    QUICK_ADDRESS: '0x6FC4563460d5f45932C473334d5c1C5B4aEA0E01',\n    NEW_QUICK_ADDRESS: '0x5E245Ca4fc9Ce5D4D03E53F50E0cE681e9DCf4fD',\n    FACTORY_ADDRESS: '0x1e00cf5647108EdCB4f6e1EbC5805753db3dF63e',\n    GOVERNANCE_ADDRESS: '0xBCd969bDF37654aaE11D37817b13Da9F7e0374e5', //TODO: MATIC\n    MERKLE_DISTRIBUTOR_ADDRESS: {\n      // TODO: specify merkle distributor for mainnet\n      [ChainId.MAINNET]: '0x4087F566796b46eEB01A38174c06E2f9924eAea8', //TODO: MATIC\n      [ChainId.TESTNET]: undefined,\n    },\n    QUICK_CONVERSION: '0xBCd969bDF37654aaE11D37817b13Da9F7e0374e5',\n  },\n  utils: {\n    QUICK_CONVERSION_RATE: 1000,\n    ONEDAYSECONDS: 60 * 60 * 24,\n    DQUICKFEE: 0.04,\n    DQUICKAPR_MULTIPLIER: 0.01,\n    ROWSPERPAGE: 10,\n    FEEPERCENT: 0.003,\n    BUNDLE_ID: '1',\n    PROPOSAL_LENGTH_IN_DAYS: 7, // TODO this is only approximate, it's actually based on blocks\n    NetworkContextName: 'NETWORK',\n    INITIAL_ALLOWED_SLIPPAGE: 50, // default allowed slippage, in bips\n    DEFAULT_DEADLINE_FROM_NOW: 60 * 20, // 20 minutes, denominated in seconds\n    BIG_INT_ZERO: JSBI.BigInt(0),\n    ONE_BIPS: new Percent(JSBI.BigInt(1), JSBI.BigInt(10000)), // one basis point\n    BIPS_BASE: JSBI.BigInt(10000),\n    // used to ensure the user doesn't send so much ETH so they end up with <.01\n    MIN_ETH: JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)), // .01 ETH\n    BETTER_TRADE_LINK_THRESHOLD: new Percent(\n      JSBI.BigInt(75),\n      JSBI.BigInt(10000),\n    ),\n    // the Uniswap Default token list lives here\n    // we add '' to remove the possibility of nulls\n    DEFAULT_TOKEN_LIST_URL: process.env.REACT_APP_TOKEN_LIST_DEFAULT_URL + '',\n    DEFAULT_LP_FARMS_LIST_URL:\n      process.env.REACT_APP_STAKING_LIST_DEFAULT_URL + '',\n    DEFAULT_DUAL_FARMS_LIST_URL:\n      process.env.REACT_APP_DUAL_STAKING_LIST_DEFAULT_URL + '',\n    DEFAULT_SYRUP_LIST_URL: process.env.REACT_APP_SYRUP_LIST_DEFAULT_URL + '',\n    ANALYTICS_TOKENS_COUNT: 200,\n    ANALYTICS_PAIRS_COUNT: 400,\n  },\n  analyticChart: {\n    ONE_MONTH_CHART: 1,\n    THREE_MONTH_CHART: 2,\n    SIX_MONTH_CHART: 3,\n    ONE_YEAR_CHART: 4,\n    ALL_CHART: 5,\n    CHART_COUNT: 60, //limit analytics chart items not more than 60\n  },\n  farmIndex: {\n    LPFARM_INDEX: 0,\n    DUALFARM_INDEX: 1,\n  },\n  walletName: {\n    METAMASK: 'Metamask',\n    CYPHERD: 'CypherD',\n    BLOCKWALLET: 'BlockWallet',\n    BITKEEP: 'BitKeep',\n    INJECTED: 'Injected',\n    SAFE_APP: 'Gnosis Safe App',\n    ARKANE_CONNECT: 'Venly',\n    Portis: 'Portis',\n    WALLET_LINK: 'Coinbase Wallet',\n    WALLET_CONNECT: 'WalletConnect',\n  },\n};\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  CYPHERD: {\n    connector: injected,\n    name: GlobalConst.walletName.CYPHERD,\n    iconName: cypherDIcon,\n    description: 'CypherD browser extension.',\n    href: null,\n    color: '#E8831D',\n  },\n  METAMASK: {\n    connector: injected,\n    name: GlobalConst.walletName.METAMASK,\n    iconName: MetamaskIcon,\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D',\n  },\n  BLOCKWALLET: {\n    connector: injected,\n    name: GlobalConst.walletName.BLOCKWALLET,\n    iconName: BlockWalletIcon,\n    description: 'BlockWallet browser extension.',\n    href: null,\n    color: '#1673ff',\n  },\n  BITKEEP: {\n    connector: injected,\n    name: GlobalConst.walletName.BITKEEP,\n    iconName: BitKeepIcon,\n    description: 'BitKeep browser extension.',\n    href: null,\n    color: '#E8831D',\n  },\n  INJECTED: {\n    connector: injected,\n    name: GlobalConst.walletName.INJECTED,\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true,\n  },\n  SAFE_APP: {\n    connector: safeApp,\n    name: GlobalConst.walletName.SAFE_APP,\n    iconName: GnosisIcon,\n    description: 'Login using gnosis safe app',\n    href: null,\n    color: '#4196FC',\n    mobile: true,\n  },\n  ARKANE_CONNECT: {\n    connector: arkaneconnect,\n    name: GlobalConst.walletName.ARKANE_CONNECT,\n    iconName: VenlyIcon,\n    description: 'Login using Venly hosted wallet.',\n    href: null,\n    color: '#4196FC',\n  },\n  Portis: {\n    connector: portis,\n    name: GlobalConst.walletName.Portis,\n    iconName: PortisIcon,\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true,\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: GlobalConst.walletName.WALLET_LINK,\n    iconName: CoinbaseWalletIcon,\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5',\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: GlobalConst.walletName.WALLET_CONNECT,\n    iconName: WalletConnectIcon,\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true,\n  },\n};\n\nexport const GlobalValue = {\n  percents: {\n    ALLOWED_PRICE_IMPACT_LOW: new Percent( // used for warning states\n      JSBI.BigInt(100),\n      GlobalConst.utils.BIPS_BASE,\n    ), // 1%\n    ALLOWED_PRICE_IMPACT_MEDIUM: new Percent(\n      JSBI.BigInt(300),\n      GlobalConst.utils.BIPS_BASE,\n    ), // 3%\n    ALLOWED_PRICE_IMPACT_HIGH: new Percent(\n      JSBI.BigInt(500),\n      GlobalConst.utils.BIPS_BASE,\n    ), // 5%\n    PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: new Percent( // if the price slippage exceeds this number, force the user to type 'confirm' to execute\n      JSBI.BigInt(1000),\n      GlobalConst.utils.BIPS_BASE,\n    ), // 10%\n    BLOCKED_PRICE_IMPACT_NON_EXPERT: new Percent( // for non expert mode disable swaps above this\n      JSBI.BigInt(1500),\n      GlobalConst.utils.BIPS_BASE,\n    ), // 15%\n  },\n  tokens: {\n    wwDOGE: WETH[ChainId.MAINNET],\n    COMMON: {\n      EMPTY: new Token(\n        ChainId.MAINNET,\n        '0x0000000000000000000000000000000000000000',\n        0,\n        'EMPTY',\n        'EMPTY',\n      ),\n      USDC: new Token(\n        ChainId.MAINNET,\n        '0x765277EebeCA2e31912C9946eAe1021199B39C61',\n        6,\n        'USDC',\n        'USDC',\n      ),\n      USDT: new Token(\n        ChainId.MAINNET,\n        '0x42fDB358e6a8526CD0ACaB47D72CaFFc6D95DD2f',\n        6,\n        'USDT',\n        'Tether USD',\n      ),\n      OLD_QUICK: new Token(\n        ChainId.MAINNET,\n        GlobalConst.addresses.QUICK_ADDRESS,\n        18,\n        'QUICK(OLD)',\n        'Quickswap(OLD)',\n      ),\n      NEW_QUICK: new Token(\n        ChainId.MAINNET,\n        GlobalConst.addresses.NEW_QUICK_ADDRESS,\n        18,\n        'QUICK(NEW)',\n        'QuickSwap(NEW)',\n      ),\n      OLD_DQUICK: new Token(\n        ChainId.MAINNET,\n        '0x42fDB358e6a8526CD0ACaB47D72CaFFc6D95DD2f',\n        18,\n        'dQUICK',\n        'Dragon QUICK',\n      ),\n      NEW_DQUICK: new Token(\n        ChainId.MAINNET,\n        '0x42fDB358e6a8526CD0ACaB47D72CaFFc6D95DD2f',\n        18,\n        'dQUICK',\n        'Dragon QUICK',\n      ),\n      WBTC: new Token(\n        ChainId.MAINNET,\n        '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f',\n        8,\n        'wBTC',\n        'Wrapped Bitcoin',\n      ),\n      DAI: new Token(\n        ChainId.MAINNET,\n        '0x639A647fbe20b6c8ac19E48E2de44ea792c62c5C',\n        18,\n        'DAI',\n        'Dai Stablecoin',\n      ),\n      ETHER: new Token(\n        ChainId.MAINNET,\n        '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',\n        18,\n        'ETH',\n        'Ether',\n      ),\n      CXETH: new Token(\n        ChainId.MAINNET,\n        '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',\n        18,\n        'cxETH',\n        'CelsiusX Wrapped ETH',\n      ),\n    },\n  },\n};\n\nexport const GlobalData = {\n  bases: {\n    // used to construct intermediary pairs for trading\n    BASES_TO_CHECK_TRADES_AGAINST: {\n      ...WETH_ONLY,\n      [ChainId.MAINNET]: [\n        ...WETH_ONLY[ChainId.MAINNET],\n        GlobalValue.tokens.COMMON.USDC,\n        GlobalValue.tokens.COMMON.USDT,\n        GlobalValue.tokens.COMMON.OLD_QUICK,\n        GlobalValue.tokens.COMMON.NEW_QUICK,\n        GlobalValue.tokens.COMMON.ETHER,\n        GlobalValue.tokens.COMMON.WBTC,\n        GlobalValue.tokens.COMMON.DAI,\n      ],\n    },\n    // Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these tokens.\n    CUSTOM_BASES: {\n      [ChainId.MAINNET]: undefined,\n      [ChainId.TESTNET]: undefined,\n    },\n    // used for display in the default list when adding liquidity\n    SUGGESTED_BASES: {\n      ...WETH_ONLY,\n      [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET]],\n    },\n    // used to construct the list of all pairs we consider by default in the frontend\n    BASES_TO_TRACK_LIQUIDITY_FOR: {\n      ...WETH_ONLY,\n      [ChainId.MAINNET]: [\n        ...WETH_ONLY[ChainId.MAINNET],\n        GlobalValue.tokens.COMMON.DAI,\n        GlobalValue.tokens.COMMON.USDC,\n        GlobalValue.tokens.COMMON.USDT,\n        GlobalValue.tokens.COMMON.OLD_QUICK,\n        GlobalValue.tokens.COMMON.NEW_QUICK,\n        GlobalValue.tokens.COMMON.ETHER,\n        GlobalValue.tokens.COMMON.WBTC,\n      ],\n    },\n  },\n  pairs: {\n    PINNED_PAIRS: {\n      [ChainId.MAINNET]: [\n        [GlobalValue.tokens.COMMON.USDC, GlobalValue.tokens.COMMON.USDT],\n        [GlobalValue.tokens.COMMON.USDC, GlobalValue.tokens.COMMON.DAI],\n        [GlobalValue.tokens.COMMON.ETHER, GlobalValue.tokens.COMMON.USDC],\n        [GlobalValue.tokens.COMMON.WBTC, GlobalValue.tokens.COMMON.ETHER],\n        [WETH[ChainId.MAINNET], GlobalValue.tokens.COMMON.USDT],\n        [WETH[ChainId.MAINNET], GlobalValue.tokens.COMMON.USDC],\n        [WETH[ChainId.MAINNET], GlobalValue.tokens.COMMON.ETHER],\n        [GlobalValue.tokens.COMMON.ETHER, GlobalValue.tokens.COMMON.OLD_QUICK],\n      ],\n      [ChainId.TESTNET]: undefined,\n    },\n  },\n  analytics: {\n    CHART_DURATIONS: [\n      GlobalConst.analyticChart.ONE_MONTH_CHART,\n      GlobalConst.analyticChart.THREE_MONTH_CHART,\n      GlobalConst.analyticChart.SIX_MONTH_CHART,\n      GlobalConst.analyticChart.ONE_YEAR_CHART,\n      GlobalConst.analyticChart.ALL_CHART,\n    ],\n    CHART_DURATION_TEXTS: ['1M', '3M', '6M', '1Y', 'All'],\n  },\n};\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[];\n};\n\nexport interface WalletInfo {\n  connector?: AbstractConnector;\n  name: string;\n  iconName: string;\n  description: string;\n  href: string | null;\n  color: string;\n  primary?: true;\n  mobile?: true;\n  mobileOnly?: true;\n}\n"]},"metadata":{},"sourceType":"module"}