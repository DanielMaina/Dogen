{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/WalletModal/PendingView.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport { GlobalConst, SUPPORTED_WALLETS } from 'constants/index';\nimport { injected } from 'connectors';\nimport Option from './Option';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PendingView = _ref => {\n  _s();\n\n  let {\n    connector,\n    error = false,\n    setPendingError,\n    tryActivation\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    ethereum\n  } = window;\n  const isMetamask = ethereum === null || ethereum === void 0 ? void 0 : ethereum.isMetaMask;\n  const isBlockWallet = ethereum === null || ethereum === void 0 ? void 0 : ethereum.isBlockWallet;\n  const isCypherD = ethereum === null || ethereum === void 0 ? void 0 : ethereum.isCypherD;\n  const isBitKeep = ethereum === null || ethereum === void 0 ? void 0 : ethereum.isBitKeep;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"pendingSection\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex items-center justify-center\",\n      mb: 4,\n      children: error ? /*#__PURE__*/_jsxDEV(Box, {\n        className: \"errorGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('errorConnect')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"errorButton\",\n          onClick: () => {\n            setPendingError(false);\n            connector && tryActivation(connector);\n          },\n          children: t('tryagain')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginLeft: 12\n          },\n          children: [t('initializing'), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key];\n\n      if (option.connector === connector) {\n        if (option.connector === injected) {\n          if (isMetamask && option.name !== GlobalConst.walletName.METAMASK) {\n            return null;\n          }\n\n          if (!isMetamask && option.name === GlobalConst.walletName.METAMASK) {\n            return null;\n          }\n\n          if (isBitKeep && option.name !== GlobalConst.walletName.BITKEEP) {\n            return null;\n          }\n\n          if (!isBitKeep && option.name === GlobalConst.walletName.BITKEEP) {\n            return null;\n          }\n\n          if (isCypherD && option.name !== GlobalConst.walletName.CYPHERD) {\n            return null;\n          }\n\n          if (!isCypherD && option.name === GlobalConst.walletName.CYPHERD) {\n            return null;\n          }\n\n          if (isBlockWallet && option.name !== GlobalConst.walletName.BLOCKWALLET) {\n            return null;\n          }\n\n          if (!isBlockWallet && option.name === GlobalConst.walletName.BLOCKWALLET) {\n            return null;\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(Option, {\n          id: `connect-${key}`,\n          clickable: false,\n          color: option.color,\n          header: option.name,\n          subheader: option.description,\n          icon: option.iconName\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this);\n      }\n\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PendingView, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PendingView;\nexport default PendingView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingView\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/WalletModal/PendingView.tsx"],"names":["React","Box","CircularProgress","GlobalConst","SUPPORTED_WALLETS","injected","Option","useTranslation","PendingView","connector","error","setPendingError","tryActivation","t","ethereum","window","isMetamask","isMetaMask","isBlockWallet","isCypherD","isBitKeep","marginLeft","Object","keys","map","key","option","name","walletName","METAMASK","BITKEEP","CYPHERD","BLOCKWALLET","color","description","iconName"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector';\nimport React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport { GlobalConst, SUPPORTED_WALLETS } from 'constants/index';\nimport { injected } from 'connectors';\nimport Option from './Option';\nimport { useTranslation } from 'react-i18next';\n\ninterface PendingViewProps {\n  connector?: AbstractConnector;\n  error?: boolean;\n  setPendingError: (error: boolean) => void;\n  tryActivation: (connector: AbstractConnector) => void;\n}\n\nconst PendingView: React.FC<PendingViewProps> = ({\n  connector,\n  error = false,\n  setPendingError,\n  tryActivation,\n}) => {\n  const { t } = useTranslation();\n  const { ethereum } = window as any;\n  const isMetamask = ethereum?.isMetaMask;\n  const isBlockWallet = ethereum?.isBlockWallet;\n  const isCypherD = ethereum?.isCypherD;\n  const isBitKeep = ethereum?.isBitKeep;\n\n  return (\n    <Box className='pendingSection'>\n      <Box className='flex items-center justify-center' mb={4}>\n        {error ? (\n          <Box className='errorGroup'>\n            <p>{t('errorConnect')}</p>\n            <Box\n              className='errorButton'\n              onClick={() => {\n                setPendingError(false);\n                connector && tryActivation(connector);\n              }}\n            >\n              {t('tryagain')}\n            </Box>\n          </Box>\n        ) : (\n          <>\n            <CircularProgress />\n            <p style={{ marginLeft: 12 }}>{t('initializing')}...</p>\n          </>\n        )}\n      </Box>\n      {Object.keys(SUPPORTED_WALLETS).map((key) => {\n        const option = SUPPORTED_WALLETS[key];\n        if (option.connector === connector) {\n          if (option.connector === injected) {\n            if (isMetamask && option.name !== GlobalConst.walletName.METAMASK) {\n              return null;\n            }\n            if (\n              !isMetamask &&\n              option.name === GlobalConst.walletName.METAMASK\n            ) {\n              return null;\n            }\n            if (isBitKeep && option.name !== GlobalConst.walletName.BITKEEP) {\n              return null;\n            }\n            if (!isBitKeep && option.name === GlobalConst.walletName.BITKEEP) {\n              return null;\n            }\n            if (isCypherD && option.name !== GlobalConst.walletName.CYPHERD) {\n              return null;\n            }\n            if (!isCypherD && option.name === GlobalConst.walletName.CYPHERD) {\n              return null;\n            }\n            if (\n              isBlockWallet &&\n              option.name !== GlobalConst.walletName.BLOCKWALLET\n            ) {\n              return null;\n            }\n            if (\n              !isBlockWallet &&\n              option.name === GlobalConst.walletName.BLOCKWALLET\n            ) {\n              return null;\n            }\n          }\n          return (\n            <Option\n              id={`connect-${key}`}\n              key={key}\n              clickable={false}\n              color={option.color}\n              header={option.name}\n              subheader={option.description}\n              icon={option.iconName}\n            />\n          );\n        }\n        return null;\n      })}\n    </Box>\n  );\n};\n\nexport default PendingView;\n"]},"metadata":{},"sourceType":"module"}