{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/DragonPage/DragonsSyrup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { ArrowUp, ArrowDown } from 'react-feather';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { useFilteredSyrupInfo, useOldSyrupInfo, useOldLairInfo } from 'state/stake/hooks';\nimport { SyrupCard, ToggleSwitch, CustomMenu, SearchInput, CustomSwitch } from 'components';\nimport { useLairDQUICKAPY, getPageItemsToLoad, getTokenAPRSyrup, returnFullWidthMobile, getExactTokenAmount } from 'utils';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { useInfiniteLoading } from 'utils/useInfiniteLoading';\nimport { Skeleton } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from 'hooks';\nimport { ChainId } from '@uniswap/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOADSYRUP_COUNT = 10;\nconst TOKEN_COLUMN = 1;\nconst DEPOSIT_COLUMN = 2;\nconst APR_COLUMN = 3;\nconst EARNED_COLUMN = 4;\n\nconst DragonsSyrup = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    breakpoints\n  } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [isEndedSyrup, setIsEndedSyrup] = useState(false);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [sortBy, setSortBy] = useState(0);\n  const [sortDesc, setSortDesc] = useState(false);\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [stakedOnly, setStakeOnly] = useState(false);\n  const [syrupSearch, setSyrupSearch] = useState('');\n  const [syrupSearchInput, setSyrupSearchInput] = useDebouncedChangeHandler(syrupSearch, setSyrupSearch);\n  const lairInfo = useOldLairInfo();\n  const dQUICKAPY = useLairDQUICKAPY(false, lairInfo);\n  const chainIdOrDefault = chainId !== null && chainId !== void 0 ? chainId : ChainId.MAINNET;\n  const addedStakingSyrupInfos = useFilteredSyrupInfo(chainIdOrDefault, null, isEndedSyrup ? 0 : undefined, isEndedSyrup ? 0 : undefined, {\n    search: syrupSearch,\n    isStaked: stakedOnly\n  });\n  const addedOldSyrupInfos = useOldSyrupInfo(chainIdOrDefault, null, isEndedSyrup ? undefined : 0, isEndedSyrup ? undefined : 0, {\n    search: syrupSearch,\n    isStaked: stakedOnly\n  });\n  const addedSyrupInfos = isEndedSyrup ? addedOldSyrupInfos : addedStakingSyrupInfos;\n  const sortIndex = sortDesc ? 1 : -1;\n  const sortByToken = useCallback((a, b) => {\n    var _a$token$symbol, _b$token$symbol;\n\n    const syrupStrA = (_a$token$symbol = a.token.symbol) !== null && _a$token$symbol !== void 0 ? _a$token$symbol : '';\n    const syrupStrB = (_b$token$symbol = b.token.symbol) !== null && _b$token$symbol !== void 0 ? _b$token$symbol : '';\n    return (syrupStrA > syrupStrB ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByDeposit = useCallback((a, b) => {\n    var _a$valueOfTotalStaked, _b$valueOfTotalStaked;\n\n    const depositA = (_a$valueOfTotalStaked = a.valueOfTotalStakedAmountInUSDC) !== null && _a$valueOfTotalStaked !== void 0 ? _a$valueOfTotalStaked : getExactTokenAmount(a.totalStakedAmount);\n    const depositB = (_b$valueOfTotalStaked = b.valueOfTotalStakedAmountInUSDC) !== null && _b$valueOfTotalStaked !== void 0 ? _b$valueOfTotalStaked : getExactTokenAmount(b.totalStakedAmount);\n    return (depositA > depositB ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByAPR = useCallback((a, b) => {\n    return (getTokenAPRSyrup(a) > getTokenAPRSyrup(b) ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByEarned = useCallback((a, b) => {\n    var _a$rewardTokenPricein, _b$rewardTokenPricein;\n\n    const earnedUSDA = getExactTokenAmount(a.earnedAmount) * ((_a$rewardTokenPricein = a.rewardTokenPriceinUSD) !== null && _a$rewardTokenPricein !== void 0 ? _a$rewardTokenPricein : 0);\n    const earnedUSDB = getExactTokenAmount(b.earnedAmount) * ((_b$rewardTokenPricein = b.rewardTokenPriceinUSD) !== null && _b$rewardTokenPricein !== void 0 ? _b$rewardTokenPricein : 0);\n    return (earnedUSDA > earnedUSDB ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortedSyrupInfos = useMemo(() => {\n    return addedSyrupInfos.sort((a, b) => {\n      if (sortBy === TOKEN_COLUMN) {\n        return sortByToken(a, b);\n      } else if (sortBy === DEPOSIT_COLUMN) {\n        return sortByDeposit(a, b);\n      } else if (sortBy === APR_COLUMN) {\n        return sortByAPR(a, b);\n      } else if (sortBy === EARNED_COLUMN) {\n        return sortByEarned(a, b);\n      }\n\n      return 1;\n    });\n  }, [addedSyrupInfos, sortBy, sortByToken, sortByDeposit, sortByAPR, sortByEarned]);\n  const syrupRewardAddress = useMemo(() => sortedSyrupInfos.map(syrupInfo => syrupInfo.stakingRewardAddress.toLowerCase()).reduce((totStr, str) => totStr + str, ''), [sortedSyrupInfos]);\n  useEffect(() => {\n    setPageIndex(0);\n  }, [syrupRewardAddress]);\n  const syrupInfos = useMemo(() => {\n    return sortedSyrupInfos ? sortedSyrupInfos.slice(0, getPageItemsToLoad(pageIndex, LOADSYRUP_COUNT)) : null;\n  }, [sortedSyrupInfos, pageIndex]);\n\n  const loadNext = () => {\n    setPageIndex(pageIndex + 1);\n  };\n\n  const {\n    loadMoreRef\n  } = useInfiniteLoading(loadNext);\n\n  const renderStakedOnly = () => /*#__PURE__*/_jsxDEV(Box, {\n    className: \"flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-disabled\",\n      style: {\n        marginRight: 8\n      },\n      children: t('stakedOnly')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n      toggled: stakedOnly,\n      onToggle: () => setStakeOnly(!stakedOnly)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n\n  const syrupStatusItems = [{\n    text: t('active'),\n    onClick: () => setIsEndedSyrup(false),\n    condition: !isEndedSyrup\n  }, {\n    text: t('ended'),\n    onClick: () => setIsEndedSyrup(true),\n    condition: isEndedSyrup\n  }];\n  const sortColumns = [{\n    text: t('earn'),\n    index: TOKEN_COLUMN,\n    width: 0.3\n  }, {\n    text: t('deposits'),\n    index: DEPOSIT_COLUMN,\n    width: 0.3\n  }, {\n    text: t('apr'),\n    index: APR_COLUMN,\n    width: 0.2\n  }, {\n    text: t('earned'),\n    index: EARNED_COLUMN,\n    width: 0.2,\n    justify: 'flex-end'\n  }];\n  const sortByDesktopItems = sortColumns.map(item => {\n    return { ...item,\n      onClick: () => {\n        if (sortBy === item.index) {\n          setSortDesc(!sortDesc);\n        } else {\n          setSortBy(item.index);\n          setSortDesc(false);\n        }\n      }\n    };\n  });\n  const sortByMobileItems = sortColumns.map(item => {\n    return {\n      text: item.text,\n      onClick: () => setSortBy(item.index)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex flex-wrap items-center\",\n      mb: 3.5,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-between\",\n        width: returnFullWidthMobile(isMobile),\n        flex: isMobile ? 'unset' : 1,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: isMobile ? 'calc(100% - 150px)' : 1,\n          mr: 2,\n          my: 2,\n          children: /*#__PURE__*/_jsxDEV(SearchInput, {\n            placeholder: isMobile ? t('search') : t('searchPlaceHolder'),\n            value: syrupSearchInput,\n            setValue: setSyrupSearchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), isMobile && renderStakedOnly()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: returnFullWidthMobile(isMobile),\n        className: \"flex flex-wrap items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mr: 2,\n          children: /*#__PURE__*/_jsxDEV(CustomSwitch, {\n            width: 160,\n            height: 40,\n            items: syrupStatusItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            height: 40,\n            flex: 1,\n            children: /*#__PURE__*/_jsxDEV(CustomMenu, {\n              title: t('sortBy'),\n              menuItems: sortByMobileItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            width: 1,\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-disabled\",\n              style: {\n                marginRight: 8\n              },\n              children: sortDesc ? t('sortdesc') : t('sortasc')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n              toggled: sortDesc,\n              onToggle: () => setSortDesc(!sortDesc)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : renderStakedOnly()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), !isMobile && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2.5,\n      display: \"flex\",\n      paddingX: 2,\n      children: sortByDesktopItems.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        width: item.width,\n        justifyContent: item.justify,\n        onClick: item.onClick,\n        className: `flex items-center cursor-pointer ${sortBy === item.index ? '' : 'text-secondary'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          ml: 0.5,\n          children: sortBy === item.index && sortDesc ? /*#__PURE__*/_jsxDEV(ArrowDown, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(ArrowUp, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)]\n      }, item.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), syrupInfos ? syrupInfos.map((syrup, ind) => /*#__PURE__*/_jsxDEV(SyrupCard, {\n      syrup: syrup,\n      dQUICKAPY: dQUICKAPY\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loadMoreRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DragonsSyrup, \"wWzeOWUfan+MgF/hnsBbAfBxePM=\", false, function () {\n  return [useTranslation, useTheme, useMediaQuery, useActiveWeb3React, useDebouncedChangeHandler, useOldLairInfo, useLairDQUICKAPY, useFilteredSyrupInfo, useOldSyrupInfo, useInfiniteLoading];\n});\n\n_c = DragonsSyrup;\nexport default DragonsSyrup;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragonsSyrup\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/DragonPage/DragonsSyrup.tsx"],"names":["React","useState","useMemo","useEffect","useCallback","useTheme","ArrowUp","ArrowDown","Box","Divider","useMediaQuery","useFilteredSyrupInfo","useOldSyrupInfo","useOldLairInfo","SyrupCard","ToggleSwitch","CustomMenu","SearchInput","CustomSwitch","useLairDQUICKAPY","getPageItemsToLoad","getTokenAPRSyrup","returnFullWidthMobile","getExactTokenAmount","useDebouncedChangeHandler","useInfiniteLoading","Skeleton","useTranslation","useActiveWeb3React","ChainId","LOADSYRUP_COUNT","TOKEN_COLUMN","DEPOSIT_COLUMN","APR_COLUMN","EARNED_COLUMN","DragonsSyrup","t","breakpoints","isMobile","down","isEndedSyrup","setIsEndedSyrup","pageIndex","setPageIndex","sortBy","setSortBy","sortDesc","setSortDesc","chainId","stakedOnly","setStakeOnly","syrupSearch","setSyrupSearch","syrupSearchInput","setSyrupSearchInput","lairInfo","dQUICKAPY","chainIdOrDefault","MAINNET","addedStakingSyrupInfos","undefined","search","isStaked","addedOldSyrupInfos","addedSyrupInfos","sortIndex","sortByToken","a","b","syrupStrA","token","symbol","syrupStrB","sortByDeposit","depositA","valueOfTotalStakedAmountInUSDC","totalStakedAmount","depositB","sortByAPR","sortByEarned","earnedUSDA","earnedAmount","rewardTokenPriceinUSD","earnedUSDB","sortedSyrupInfos","sort","syrupRewardAddress","map","syrupInfo","stakingRewardAddress","toLowerCase","reduce","totStr","str","syrupInfos","slice","loadNext","loadMoreRef","renderStakedOnly","marginRight","syrupStatusItems","text","onClick","condition","sortColumns","index","width","justify","sortByDesktopItems","item","sortByMobileItems","syrup","ind"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { ArrowUp, ArrowDown } from 'react-feather';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport {\n  useFilteredSyrupInfo,\n  useOldSyrupInfo,\n  useOldLairInfo,\n} from 'state/stake/hooks';\nimport { SyrupInfo } from 'types';\nimport {\n  SyrupCard,\n  ToggleSwitch,\n  CustomMenu,\n  SearchInput,\n  CustomSwitch,\n} from 'components';\nimport {\n  useLairDQUICKAPY,\n  getPageItemsToLoad,\n  getTokenAPRSyrup,\n  returnFullWidthMobile,\n  getExactTokenAmount,\n} from 'utils';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { useInfiniteLoading } from 'utils/useInfiniteLoading';\nimport { Skeleton } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from 'hooks';\nimport { ChainId } from '@uniswap/sdk';\n\nconst LOADSYRUP_COUNT = 10;\nconst TOKEN_COLUMN = 1;\nconst DEPOSIT_COLUMN = 2;\nconst APR_COLUMN = 3;\nconst EARNED_COLUMN = 4;\n\nconst DragonsSyrup: React.FC = () => {\n  const { t } = useTranslation();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [isEndedSyrup, setIsEndedSyrup] = useState(false);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [sortBy, setSortBy] = useState(0);\n  const [sortDesc, setSortDesc] = useState(false);\n  const { chainId } = useActiveWeb3React();\n\n  const [stakedOnly, setStakeOnly] = useState(false);\n  const [syrupSearch, setSyrupSearch] = useState('');\n  const [syrupSearchInput, setSyrupSearchInput] = useDebouncedChangeHandler(\n    syrupSearch,\n    setSyrupSearch,\n  );\n\n  const lairInfo = useOldLairInfo();\n  const dQUICKAPY = useLairDQUICKAPY(false, lairInfo);\n  const chainIdOrDefault = chainId ?? ChainId.MAINNET;\n  const addedStakingSyrupInfos = useFilteredSyrupInfo(\n    chainIdOrDefault,\n    null,\n    isEndedSyrup ? 0 : undefined,\n    isEndedSyrup ? 0 : undefined,\n    { search: syrupSearch, isStaked: stakedOnly },\n  );\n  const addedOldSyrupInfos = useOldSyrupInfo(\n    chainIdOrDefault,\n    null,\n    isEndedSyrup ? undefined : 0,\n    isEndedSyrup ? undefined : 0,\n    { search: syrupSearch, isStaked: stakedOnly },\n  );\n\n  const addedSyrupInfos = isEndedSyrup\n    ? addedOldSyrupInfos\n    : addedStakingSyrupInfos;\n\n  const sortIndex = sortDesc ? 1 : -1;\n\n  const sortByToken = useCallback(\n    (a: SyrupInfo, b: SyrupInfo) => {\n      const syrupStrA = a.token.symbol ?? '';\n      const syrupStrB = b.token.symbol ?? '';\n      return (syrupStrA > syrupStrB ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortByDeposit = useCallback(\n    (a: SyrupInfo, b: SyrupInfo) => {\n      const depositA =\n        a.valueOfTotalStakedAmountInUSDC ??\n        getExactTokenAmount(a.totalStakedAmount);\n      const depositB =\n        b.valueOfTotalStakedAmountInUSDC ??\n        getExactTokenAmount(b.totalStakedAmount);\n      return (depositA > depositB ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortByAPR = useCallback(\n    (a: SyrupInfo, b: SyrupInfo) => {\n      return (getTokenAPRSyrup(a) > getTokenAPRSyrup(b) ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n  const sortByEarned = useCallback(\n    (a: SyrupInfo, b: SyrupInfo) => {\n      const earnedUSDA =\n        getExactTokenAmount(a.earnedAmount) * (a.rewardTokenPriceinUSD ?? 0);\n      const earnedUSDB =\n        getExactTokenAmount(b.earnedAmount) * (b.rewardTokenPriceinUSD ?? 0);\n      return (earnedUSDA > earnedUSDB ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortedSyrupInfos = useMemo(() => {\n    return addedSyrupInfos.sort((a, b) => {\n      if (sortBy === TOKEN_COLUMN) {\n        return sortByToken(a, b);\n      } else if (sortBy === DEPOSIT_COLUMN) {\n        return sortByDeposit(a, b);\n      } else if (sortBy === APR_COLUMN) {\n        return sortByAPR(a, b);\n      } else if (sortBy === EARNED_COLUMN) {\n        return sortByEarned(a, b);\n      }\n      return 1;\n    });\n  }, [\n    addedSyrupInfos,\n    sortBy,\n    sortByToken,\n    sortByDeposit,\n    sortByAPR,\n    sortByEarned,\n  ]);\n\n  const syrupRewardAddress = useMemo(\n    () =>\n      sortedSyrupInfos\n        .map((syrupInfo) => syrupInfo.stakingRewardAddress.toLowerCase())\n        .reduce((totStr, str) => totStr + str, ''),\n    [sortedSyrupInfos],\n  );\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [syrupRewardAddress]);\n\n  const syrupInfos = useMemo(() => {\n    return sortedSyrupInfos\n      ? sortedSyrupInfos.slice(\n          0,\n          getPageItemsToLoad(pageIndex, LOADSYRUP_COUNT),\n        )\n      : null;\n  }, [sortedSyrupInfos, pageIndex]);\n\n  const loadNext = () => {\n    setPageIndex(pageIndex + 1);\n  };\n\n  const { loadMoreRef } = useInfiniteLoading(loadNext);\n\n  const renderStakedOnly = () => (\n    <Box className='flex items-center'>\n      <small className='text-disabled' style={{ marginRight: 8 }}>\n        {t('stakedOnly')}\n      </small>\n      <ToggleSwitch\n        toggled={stakedOnly}\n        onToggle={() => setStakeOnly(!stakedOnly)}\n      />\n    </Box>\n  );\n\n  const syrupStatusItems = [\n    {\n      text: t('active'),\n      onClick: () => setIsEndedSyrup(false),\n      condition: !isEndedSyrup,\n    },\n    {\n      text: t('ended'),\n      onClick: () => setIsEndedSyrup(true),\n      condition: isEndedSyrup,\n    },\n  ];\n\n  const sortColumns = [\n    {\n      text: t('earn'),\n      index: TOKEN_COLUMN,\n      width: 0.3,\n    },\n    {\n      text: t('deposits'),\n      index: DEPOSIT_COLUMN,\n      width: 0.3,\n    },\n    {\n      text: t('apr'),\n      index: APR_COLUMN,\n      width: 0.2,\n    },\n    {\n      text: t('earned'),\n      index: EARNED_COLUMN,\n      width: 0.2,\n      justify: 'flex-end',\n    },\n  ];\n\n  const sortByDesktopItems = sortColumns.map((item) => {\n    return {\n      ...item,\n      onClick: () => {\n        if (sortBy === item.index) {\n          setSortDesc(!sortDesc);\n        } else {\n          setSortBy(item.index);\n          setSortDesc(false);\n        }\n      },\n    };\n  });\n\n  const sortByMobileItems = sortColumns.map((item) => {\n    return { text: item.text, onClick: () => setSortBy(item.index) };\n  });\n\n  return (\n    <>\n      <Box className='flex flex-wrap items-center' mb={3.5}>\n        <Box\n          className='flex justify-between'\n          width={returnFullWidthMobile(isMobile)}\n          flex={isMobile ? 'unset' : 1}\n        >\n          <Box width={isMobile ? 'calc(100% - 150px)' : 1} mr={2} my={2}>\n            <SearchInput\n              placeholder={isMobile ? t('search') : t('searchPlaceHolder')}\n              value={syrupSearchInput}\n              setValue={setSyrupSearchInput}\n            />\n          </Box>\n          {isMobile && renderStakedOnly()}\n        </Box>\n        <Box\n          width={returnFullWidthMobile(isMobile)}\n          className='flex flex-wrap items-center'\n        >\n          <Box mr={2}>\n            <CustomSwitch width={160} height={40} items={syrupStatusItems} />\n          </Box>\n          {isMobile ? (\n            <>\n              <Box height={40} flex={1}>\n                <CustomMenu title={t('sortBy')} menuItems={sortByMobileItems} />\n              </Box>\n              <Box mt={2} width={1} className='flex items-center'>\n                <small className='text-disabled' style={{ marginRight: 8 }}>\n                  {sortDesc ? t('sortdesc') : t('sortasc')}\n                </small>\n                <ToggleSwitch\n                  toggled={sortDesc}\n                  onToggle={() => setSortDesc(!sortDesc)}\n                />\n              </Box>\n            </>\n          ) : (\n            renderStakedOnly()\n          )}\n        </Box>\n      </Box>\n      <Divider />\n      {!isMobile && (\n        <Box mt={2.5} display='flex' paddingX={2}>\n          {sortByDesktopItems.map((item) => (\n            <Box\n              key={item.index}\n              width={item.width}\n              justifyContent={item.justify}\n              onClick={item.onClick}\n              className={`flex items-center cursor-pointer ${\n                sortBy === item.index ? '' : 'text-secondary'\n              }`}\n            >\n              <small>{item.text}</small>\n              <Box display='flex' ml={0.5}>\n                {sortBy === item.index && sortDesc ? (\n                  <ArrowDown size={20} />\n                ) : (\n                  <ArrowUp size={20} />\n                )}\n              </Box>\n            </Box>\n          ))}\n        </Box>\n      )}\n      {syrupInfos ? (\n        syrupInfos.map((syrup, ind) => (\n          <SyrupCard key={ind} syrup={syrup} dQUICKAPY={dQUICKAPY} />\n        ))\n      ) : (\n        <>\n          <Skeleton width='100%' height={120} />\n          <Skeleton width='100%' height={120} />\n          <Skeleton width='100%' height={120} />\n          <Skeleton width='100%' height={120} />\n          <Skeleton width='100%' height={120} />\n        </>\n      )}\n      <div ref={loadMoreRef} />\n    </>\n  );\n};\n\nexport default DragonsSyrup;\n"]},"metadata":{},"sourceType":"module"}