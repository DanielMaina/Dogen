{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/AnalyticsPage/AnalyticsPairs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { PairTable } from 'components';\nimport { getTopPairs, getBulkPairData } from 'utils';\nimport { Skeleton } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport { GlobalConst } from 'constants/index';\nimport { useEthPrice } from 'state/application/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalyticsPairs = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [topPairs, updateTopPairs] = useState(null);\n  const {\n    ethPrice\n  } = useEthPrice();\n  useEffect(() => {\n    const fetchTopPairs = async () => {\n      updateTopPairs(null);\n      const pairs = await getTopPairs(GlobalConst.utils.ANALYTICS_PAIRS_COUNT);\n      const formattedPairs = pairs ? pairs.map(pair => {\n        return pair.id;\n      }) : [];\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTopPairs(pairData);\n      }\n    };\n\n    if (ethPrice.price) {\n      fetchTopPairs();\n    }\n  }, [updateTopPairs, ethPrice.price]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    mb: 3,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('allPairs')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      className: \"panel\",\n      children: topPairs ? /*#__PURE__*/_jsxDEV(PairTable, {\n        data: topPairs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: \"100%\",\n        height: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnalyticsPairs, \"2cZCD3OBzqLj+QL3ERp4OiidONY=\", false, function () {\n  return [useTranslation, useEthPrice];\n});\n\n_c = AnalyticsPairs;\nexport default AnalyticsPairs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticsPairs\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/AnalyticsPage/AnalyticsPairs.tsx"],"names":["React","useEffect","useState","Box","PairTable","getTopPairs","getBulkPairData","Skeleton","useTranslation","GlobalConst","useEthPrice","AnalyticsPairs","t","topPairs","updateTopPairs","ethPrice","fetchTopPairs","pairs","utils","ANALYTICS_PAIRS_COUNT","formattedPairs","map","pair","id","pairData","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AACA,QAAM,CAACK,QAAD,EAAWC,cAAX,IAA6BZ,QAAQ,CAAe,IAAf,CAA3C;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAeL,WAAW,EAAhC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAG,YAAY;AAChCF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMG,KAAK,GAAG,MAAMZ,WAAW,CAACI,WAAW,CAACS,KAAZ,CAAkBC,qBAAnB,CAA/B;AACA,YAAMC,cAAc,GAAGH,KAAK,GACxBA,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAe;AACvB,eAAOA,IAAI,CAACC,EAAZ;AACD,OAFD,CADwB,GAIxB,EAJJ;AAKA,YAAMC,QAAQ,GAAG,MAAMlB,eAAe,CAACc,cAAD,EAAiBL,QAAQ,CAACU,KAA1B,CAAtC;;AACA,UAAID,QAAJ,EAAc;AACZV,QAAAA,cAAc,CAACU,QAAD,CAAd;AACD;AACF,KAZD;;AAaA,QAAIT,QAAQ,CAACU,KAAb,EAAoB;AAClBT,MAAAA,aAAa;AACd;AACF,GAjBQ,EAiBN,CAACF,cAAD,EAAiBC,QAAQ,CAACU,KAA1B,CAjBM,CAAT;AAmBA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA,4BACE;AAAA,gBAAIb,CAAC,CAAC,UAAD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA,gBACGC,QAAQ,gBACP,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,QAAD;AAAU,QAAA,OAAO,EAAC,MAAlB;AAAyB,QAAA,KAAK,EAAC,MAA/B;AAAsC,QAAA,MAAM,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApCD;;GAAMF,c;UACUH,c,EAEOE,W;;;KAHjBC,c;AAsCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { PairTable } from 'components';\nimport { getTopPairs, getBulkPairData } from 'utils';\nimport { Skeleton } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport { GlobalConst } from 'constants/index';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst AnalyticsPairs: React.FC = () => {\n  const { t } = useTranslation();\n  const [topPairs, updateTopPairs] = useState<any[] | null>(null);\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    const fetchTopPairs = async () => {\n      updateTopPairs(null);\n      const pairs = await getTopPairs(GlobalConst.utils.ANALYTICS_PAIRS_COUNT);\n      const formattedPairs = pairs\n        ? pairs.map((pair: any) => {\n            return pair.id;\n          })\n        : [];\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n      if (pairData) {\n        updateTopPairs(pairData);\n      }\n    };\n    if (ethPrice.price) {\n      fetchTopPairs();\n    }\n  }, [updateTopPairs, ethPrice.price]);\n\n  return (\n    <Box width='100%' mb={3}>\n      <p>{t('allPairs')}</p>\n      <Box mt={4} className='panel'>\n        {topPairs ? (\n          <PairTable data={topPairs} />\n        ) : (\n          <Skeleton variant='rect' width='100%' height={150} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AnalyticsPairs;\n"]},"metadata":{},"sourceType":"module"}