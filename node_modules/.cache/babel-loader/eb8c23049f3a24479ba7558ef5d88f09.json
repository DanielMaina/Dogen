{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/SwapPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/HelpIcon1.svg\";\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SwapPage = () => {\n  _s();\n\n  const {\n    isProMode,\n    updateIsProMode\n  } = useIsProMode();\n  const {\n    breakpoints\n  } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState(undefined);\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [infoPos, setInfoPos] = useState('right');\n  const {\n    currencies\n  } = useDerivedSwapInfo();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId); // this is for refreshing data of trades table every 60 seconds\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const _currentTime = Math.floor(Date.now() / 1000);\n\n      setCurrentTime(_currentTime);\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    async function getPairId(token1Address, token2Address) {\n      const pairData = await getPairAddress(token1Address, token2Address);\n\n      if (pairData) {\n        setPairTokenReversed(pairData.tokenReversed);\n        setPairId(pairData.pairId);\n      }\n    }\n\n    if (token1 !== null && token1 !== void 0 && token1.address && token2 !== null && token2 !== void 0 && token2.address) {\n      getPairId(token1 === null || token1 === void 0 ? void 0 : token1.address, token2 === null || token2 === void 0 ? void 0 : token2.address);\n    }\n  }, [token1 === null || token1 === void 0 ? void 0 : token1.address, token2 === null || token2 === void 0 ? void 0 : token2.address]);\n  useEffect(() => {\n    (async () => {\n      if (pairId && transactions && transactions.length > 0) {\n        const txns = await getSwapTransactions(pairId, Number(transactions[0].transaction.timestamp));\n\n        if (txns) {\n          const filteredTxns = txns.filter(txn => !transactions.filter(tx => tx.transaction.id === txn.transaction.id).length);\n          setTransactions([...filteredTxns, ...transactions]);\n        }\n      }\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentTime]);\n  useEffect(() => {\n    async function getTradesData(pairId) {\n      setTransactions(undefined);\n      const transactions = await getSwapTransactions(pairId);\n      setTransactions(transactions);\n    }\n\n    if (pairId && isProMode) {\n      getTradesData(pairId);\n    }\n  }, [pairId, isProMode]);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    mb: 3,\n    id: \"swap-page\",\n    children: [!isProMode && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"pageHeading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: t('swap')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"helpWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: t('help')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), !isProMode ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(SwapMain, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 7,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex flex-wrap justify-between fullWidth\",\n          children: [token1 && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"swapTokenDetails\",\n            children: /*#__PURE__*/_jsxDEV(SwapTokenDetails, {\n              token: token1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), token2 && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"swapTokenDetails\",\n            children: /*#__PURE__*/_jsxDEV(SwapTokenDetails, {\n              token: token2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), token1 && token2 && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"wrapper\",\n          marginTop: \"32px\",\n          children: /*#__PURE__*/_jsxDEV(LiquidityPools, {\n            token1: token1,\n            token2: token2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      className: \"border-top border-bottom bg-palette flex flex-wrap\",\n      minHeight: \"calc(100vh - 140px)\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: isMobile ? 1 : '450px',\n        padding: \"20px 0\",\n        className: isMobile ? '' : 'border-right',\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-between items-center\",\n          padding: \"0 24px\",\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: t('swap')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex items-center\",\n            mr: 1,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary text-uppercase\",\n              style: {\n                marginRight: 8\n              },\n              children: t('proMode')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n              toggled: isProMode,\n              onToggle: () => updateIsProMode(!isProMode)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SwapMain, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), infoPos === 'left' && /*#__PURE__*/_jsxDEV(Box, {\n        className: isMobile ? 'border-top' : 'border-left border-right',\n        width: isMobile ? 1 : 250,\n        children: /*#__PURE__*/_jsxDEV(SwapProInfo, {\n          token1: token1,\n          token2: token2,\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"swapProWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(SwapProFilter, {\n          infoPos: infoPos,\n          setInfoPos: setInfoPos,\n          showChart: showChart,\n          setShowChart: setShowChart,\n          showTrades: showTrades,\n          setShowTrades: setShowTrades\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), token1 && token2 && pairId && /*#__PURE__*/_jsxDEV(SwapProChartTrade, {\n          showChart: showChart,\n          showTrades: showTrades,\n          token1: token1,\n          token2: token2,\n          pairAddress: pairId,\n          pairTokenReversed: pairTokenReversed,\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), infoPos === 'right' && /*#__PURE__*/_jsxDEV(Box, {\n        className: isMobile ? 'border-top' : 'border-left',\n        width: isTablet ? 1 : 250,\n        children: /*#__PURE__*/_jsxDEV(SwapProInfo, {\n          token1: token1,\n          token2: token2,\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwapPage, \"Y8lBzxhPwYr53suwK8FJ4R6dmFQ=\", false, function () {\n  return [useIsProMode, useTheme, useMediaQuery, useMediaQuery, useDerivedSwapInfo, useActiveWeb3React, useTranslation];\n});\n\n_c = SwapPage;\nexport default SwapPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapPage\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/SwapPage.tsx"],"names":["React","useState","useEffect","useTheme","Box","Grid","useMediaQuery","SwapTokenDetails","ToggleSwitch","useIsProMode","useDerivedSwapInfo","Field","getPairAddress","getSwapTransactions","wrappedCurrency","useActiveWeb3React","SwapMain","LiquidityPools","SwapProChartTrade","SwapProInfo","SwapProFilter","useTranslation","SwapPage","isProMode","updateIsProMode","breakpoints","isMobile","down","isTablet","showChart","setShowChart","showTrades","setShowTrades","pairId","setPairId","undefined","pairTokenReversed","setPairTokenReversed","transactions","setTransactions","currentTime","setCurrentTime","Math","floor","Date","now","infoPos","setInfoPos","currencies","chainId","token1","INPUT","token2","OUTPUT","interval","setInterval","_currentTime","clearInterval","getPairId","token1Address","token2Address","pairData","tokenReversed","address","length","txns","Number","transaction","timestamp","filteredTxns","filter","txn","tx","id","getTradesData","t","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\nimport { useIsProMode } from 'state/application/hooks';\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\nimport { Field } from 'state/swap/actions';\nimport { getPairAddress, getSwapTransactions } from 'utils';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useActiveWeb3React } from 'hooks';\nimport SwapMain from './SwapMain';\nimport LiquidityPools from './LiquidityPools';\nimport SwapProChartTrade from './SwapProChartTrade';\nimport SwapProInfo from './SwapProInfo';\nimport SwapProFilter from './SwapProFilter';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/swap.scss';\n\nconst SwapPage: React.FC = () => {\n  const { isProMode, updateIsProMode } = useIsProMode();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\n  const isTablet = useMediaQuery(breakpoints.down('md'));\n  const [showChart, setShowChart] = useState(true);\n  const [showTrades, setShowTrades] = useState(true);\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\n  const [transactions, setTransactions] = useState<any[] | undefined>(\n    undefined,\n  );\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\n  const [infoPos, setInfoPos] = useState('right');\n\n  const { currencies } = useDerivedSwapInfo();\n  const { chainId } = useActiveWeb3React();\n\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\n\n  // this is for refreshing data of trades table every 60 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const _currentTime = Math.floor(Date.now() / 1000);\n      setCurrentTime(_currentTime);\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    async function getPairId(token1Address: string, token2Address: string) {\n      const pairData = await getPairAddress(token1Address, token2Address);\n      if (pairData) {\n        setPairTokenReversed(pairData.tokenReversed);\n        setPairId(pairData.pairId);\n      }\n    }\n    if (token1?.address && token2?.address) {\n      getPairId(token1?.address, token2?.address);\n    }\n  }, [token1?.address, token2?.address]);\n\n  useEffect(() => {\n    (async () => {\n      if (pairId && transactions && transactions.length > 0) {\n        const txns = await getSwapTransactions(\n          pairId,\n          Number(transactions[0].transaction.timestamp),\n        );\n        if (txns) {\n          const filteredTxns = txns.filter(\n            (txn) =>\n              !transactions.filter(\n                (tx) => tx.transaction.id === txn.transaction.id,\n              ).length,\n          );\n          setTransactions([...filteredTxns, ...transactions]);\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentTime]);\n\n  useEffect(() => {\n    async function getTradesData(pairId: string) {\n      setTransactions(undefined);\n      const transactions = await getSwapTransactions(pairId);\n      setTransactions(transactions);\n    }\n    if (pairId && isProMode) {\n      getTradesData(pairId);\n    }\n  }, [pairId, isProMode]);\n\n  const { t } = useTranslation();\n\n  return (\n    <Box width='100%' mb={3} id='swap-page'>\n      {!isProMode && (\n        <Box className='pageHeading'>\n          <h4>{t('swap')}</h4>\n          <Box className='helpWrapper'>\n            <small>{t('help')}</small>\n            <HelpIcon />\n          </Box>\n        </Box>\n      )}\n      {!isProMode ? (\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={12} md={6} lg={5}>\n            <Box className='wrapper'>\n              <SwapMain />\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} lg={7}>\n            <Box className='flex flex-wrap justify-between fullWidth'>\n              {token1 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token1} />\n                </Box>\n              )}\n              {token2 && (\n                <Box className='swapTokenDetails'>\n                  <SwapTokenDetails token={token2} />\n                </Box>\n              )}\n            </Box>\n            {token1 && token2 && (\n              <Box className='wrapper' marginTop='32px'>\n                <LiquidityPools token1={token1} token2={token2} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <Box\n          className='border-top border-bottom bg-palette flex flex-wrap'\n          minHeight='calc(100vh - 140px)'\n        >\n          <Box\n            width={isMobile ? 1 : '450px'}\n            padding='20px 0'\n            className={isMobile ? '' : 'border-right'}\n          >\n            <Box\n              className='flex justify-between items-center'\n              padding='0 24px'\n              mb={3}\n            >\n              <h4>{t('swap')}</h4>\n              <Box className='flex items-center' mr={1}>\n                <span\n                  className='text-secondary text-uppercase'\n                  style={{ marginRight: 8 }}\n                >\n                  {t('proMode')}\n                </span>\n                <ToggleSwitch\n                  toggled={isProMode}\n                  onToggle={() => updateIsProMode(!isProMode)}\n                />\n              </Box>\n            </Box>\n            <SwapMain />\n          </Box>\n          {infoPos === 'left' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left border-right'}\n              width={isMobile ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n          <Box className='swapProWrapper'>\n            <SwapProFilter\n              infoPos={infoPos}\n              setInfoPos={setInfoPos}\n              showChart={showChart}\n              setShowChart={setShowChart}\n              showTrades={showTrades}\n              setShowTrades={setShowTrades}\n            />\n            {token1 && token2 && pairId && (\n              <SwapProChartTrade\n                showChart={showChart}\n                showTrades={showTrades}\n                token1={token1}\n                token2={token2}\n                pairAddress={pairId}\n                pairTokenReversed={pairTokenReversed}\n                transactions={transactions}\n              />\n            )}\n          </Box>\n          {infoPos === 'right' && (\n            <Box\n              className={isMobile ? 'border-top' : 'border-left'}\n              width={isTablet ? 1 : 250}\n            >\n              <SwapProInfo\n                token1={token1}\n                token2={token2}\n                transactions={transactions}\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SwapPage;\n"]},"metadata":{},"sourceType":"module"}