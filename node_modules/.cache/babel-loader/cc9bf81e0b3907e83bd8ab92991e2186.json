{"ast":null,"code":"const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+\\.)+)eth(\\/.*)?$/;\nexport function parseENSAddress(ensAddress) {\n  const match = ensAddress.match(ENS_NAME_REGEX);\n  if (!match) return undefined;\n  return {\n    ensName: `${match[1].toLowerCase()}eth`,\n    ensPath: match[3]\n  };\n}","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/utils/parseENSAddress.ts"],"names":["ENS_NAME_REGEX","parseENSAddress","ensAddress","match","undefined","ensName","toLowerCase","ensPath"],"mappings":"AAAA,MAAMA,cAAc,GAAG,iCAAvB;AAEA,OAAO,SAASC,eAAT,CACLC,UADK,EAEyD;AAC9D,QAAMC,KAAK,GAAGD,UAAU,CAACC,KAAX,CAAiBH,cAAjB,CAAd;AACA,MAAI,CAACG,KAAL,EAAY,OAAOC,SAAP;AACZ,SAAO;AAAEC,IAAAA,OAAO,EAAG,GAAEF,KAAK,CAAC,CAAD,CAAL,CAASG,WAAT,EAAuB,KAArC;AAA2CC,IAAAA,OAAO,EAAEJ,KAAK,CAAC,CAAD;AAAzD,GAAP;AACD","sourcesContent":["const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+\\.)+)eth(\\/.*)?$/;\n\nexport function parseENSAddress(\n  ensAddress: string,\n): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX);\n  if (!match) return undefined;\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[3] };\n}\n"]},"metadata":{},"sourceType":"module"}