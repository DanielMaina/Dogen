{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PopupSigner_1 = require(\"./PopupSigner\");\n\nvar RedirectSigner_1 = require(\"./RedirectSigner\");\n\nvar WindowMode_1 = require(\"../models/WindowMode\");\n\nvar SignerFactory =\n/** @class */\nfunction () {\n  function SignerFactory() {}\n\n  SignerFactory.createSignerFor = function (signMethod, bearerTokenProvider, popupOptions) {\n    switch (signMethod) {\n      case WindowMode_1.WindowMode.POPUP:\n        return new PopupSigner_1.PopupSigner(bearerTokenProvider, popupOptions);\n\n      case WindowMode_1.WindowMode.REDIRECT:\n        return new RedirectSigner_1.RedirectSigner(bearerTokenProvider);\n\n      default:\n        throw new Error('The provided signMethod is not supported');\n    }\n  };\n\n  return SignerFactory;\n}();\n\nexports.SignerFactory = SignerFactory;\n/* Deprecated, use WindowMode */\n\nvar SignMethod;\n\n(function (SignMethod) {\n  SignMethod[\"POPUP\"] = \"POPUP\";\n  SignMethod[\"REDIRECT\"] = \"REDIRECT\";\n})(SignMethod = exports.SignMethod || (exports.SignMethod = {}));","map":{"version":3,"sources":["../../../src/signer/Signer.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAGA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAiCA,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CAYC;;AAViB,EAAA,aAAA,CAAA,eAAA,GAAd,UAA8B,UAA9B,EAAsD,mBAAtD,EAAyF,YAAzF,EAAoH;AAChH,YAAQ,UAAR;AACI,WAAK,YAAA,CAAA,UAAA,CAAW,KAAhB;AACI,eAAO,IAAI,aAAA,CAAA,WAAJ,CAAgB,mBAAhB,EAAqC,YAArC,CAAP;;AACJ,WAAK,YAAA,CAAA,UAAA,CAAW,QAAhB;AACI,eAAO,IAAI,gBAAA,CAAA,cAAJ,CAAmB,mBAAnB,CAAP;;AACJ;AACI,cAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN;AANR;AAQH,GATa;;AAUlB,SAAA,aAAA;AAAC,CAZD,EAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA;AAcb;;AACA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AAClB,EAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACH,CAHD,EAAY,UAAU,GAAV,OAAA,CAAA,UAAA,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PopupSigner_1 = require(\"./PopupSigner\");\nvar RedirectSigner_1 = require(\"./RedirectSigner\");\nvar WindowMode_1 = require(\"../models/WindowMode\");\nvar SignerFactory = /** @class */ (function () {\n    function SignerFactory() {\n    }\n    SignerFactory.createSignerFor = function (signMethod, bearerTokenProvider, popupOptions) {\n        switch (signMethod) {\n            case WindowMode_1.WindowMode.POPUP:\n                return new PopupSigner_1.PopupSigner(bearerTokenProvider, popupOptions);\n            case WindowMode_1.WindowMode.REDIRECT:\n                return new RedirectSigner_1.RedirectSigner(bearerTokenProvider);\n            default:\n                throw new Error('The provided signMethod is not supported');\n        }\n    };\n    return SignerFactory;\n}());\nexports.SignerFactory = SignerFactory;\n/* Deprecated, use WindowMode */\nvar SignMethod;\n(function (SignMethod) {\n    SignMethod[\"POPUP\"] = \"POPUP\";\n    SignMethod[\"REDIRECT\"] = \"REDIRECT\";\n})(SignMethod = exports.SignMethod || (exports.SignMethod = {}));\n//# sourceMappingURL=Signer.js.map"]},"metadata":{},"sourceType":"script"}