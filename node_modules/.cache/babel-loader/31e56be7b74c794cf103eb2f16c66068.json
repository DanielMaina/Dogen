{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/PoolPositionCard/PoolPositionCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport { ChainId } from '@uniswap/sdk';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { useStakingInfo, getBulkPairData, useDualStakingInfo } from 'state/stake/hooks';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatAPY, getAPYWithFee, getOneYearFee } from 'utils';\nimport PoolPositionCardDetails from './PoolPositionCardDetails';\nimport 'components/styles/PoolPositionCard.scss';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PoolPositionCard = _ref => {\n  _s();\n\n  var _currency0$symbol, _currency1$symbol;\n\n  let {\n    pair\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [bulkPairData, setBulkPairData] = useState(null);\n  const chainIdOrDefault = chainId !== null && chainId !== void 0 ? chainId : ChainId.MAINNET;\n  const currency0 = unwrappedToken(pair.token0);\n  const currency1 = unwrappedToken(pair.token1);\n  const stakingInfos = useStakingInfo(chainIdOrDefault, pair);\n  const dualStakingInfos = useDualStakingInfo(chainIdOrDefault, pair);\n  const stakingInfo = useMemo(() => stakingInfos.length > 0 ? stakingInfos[0] : dualStakingInfos.length > 0 ? dualStakingInfos[0] : null, [stakingInfos, dualStakingInfos]);\n  const pairId = pair.liquidityToken.address;\n  useEffect(() => {\n    const pairLists = [pairId];\n    getBulkPairData(pairLists).then(data => setBulkPairData(data));\n    return () => setBulkPairData(null);\n  }, [pairId]);\n  const [showMore, setShowMore] = useState(false);\n  const apyWithFee = useMemo(() => {\n    if (stakingInfo && bulkPairData) {\n      var _bulkPairData$staking, _bulkPairData$staking2, _stakingInfo$perMonth;\n\n      const dayVolume = (_bulkPairData$staking = bulkPairData[stakingInfo.pair]) === null || _bulkPairData$staking === void 0 ? void 0 : _bulkPairData$staking.oneDayVolumeUSD;\n      const reserveUSD = (_bulkPairData$staking2 = bulkPairData[stakingInfo.pair]) === null || _bulkPairData$staking2 === void 0 ? void 0 : _bulkPairData$staking2.reserveUSD;\n      const oneYearFee = dayVolume && reserveUSD ? getOneYearFee(dayVolume, reserveUSD) : 0;\n      return formatAPY(getAPYWithFee((_stakingInfo$perMonth = stakingInfo.perMonthReturnInRewards) !== null && _stakingInfo$perMonth !== void 0 ? _stakingInfo$perMonth : 0, oneYearFee));\n    }\n  }, [stakingInfo, bulkPairData]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: `poolPositionCard ${showMore ? 'bg-secondary2' : 'bg-transparent'}`,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"poolPositionCardTop\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: currency0,\n          currency1: currency1,\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"weight-600\",\n          style: {\n            marginLeft: 16\n          },\n          children: !currency0 || !currency1 ? 'Loading' : `${currency0.symbol}/${currency1.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center text-primary cursor-pointer\",\n        onClick: () => setShowMore(!showMore),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginRight: 8\n          },\n          children: t('manage')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), showMore ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n          size: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), showMore && /*#__PURE__*/_jsxDEV(PoolPositionCardDetails, {\n      pair: pair\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }, this), stakingInfo && !stakingInfo.ended && apyWithFee && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"poolPositionAPYWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"poolAPYDesc\",\n          values: {\n            apy: apyWithFee,\n            symbol1: (_currency0$symbol = currency0.symbol) === null || _currency0$symbol === void 0 ? void 0 : _currency0$symbol.toUpperCase(),\n            symbol2: (_currency1$symbol = currency1.symbol) === null || _currency1$symbol === void 0 ? void 0 : _currency1$symbol.toUpperCase()\n          },\n          components: {\n            pspan: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 36\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolPositionCard, \"zSSad2WXz0k7Q4vTuO3JO8wKP54=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useStakingInfo, useDualStakingInfo];\n});\n\n_c = PoolPositionCard;\nexport default PoolPositionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolPositionCard\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/PoolPositionCard/PoolPositionCard.tsx"],"names":["React","useEffect","useMemo","useState","Box","ChevronDown","ChevronUp","ChainId","unwrappedToken","useStakingInfo","getBulkPairData","useDualStakingInfo","DoubleCurrencyLogo","formatAPY","getAPYWithFee","getOneYearFee","PoolPositionCardDetails","Trans","useTranslation","useActiveWeb3React","PoolPositionCard","pair","t","chainId","bulkPairData","setBulkPairData","chainIdOrDefault","MAINNET","currency0","token0","currency1","token1","stakingInfos","dualStakingInfos","stakingInfo","length","pairId","liquidityToken","address","pairLists","then","data","showMore","setShowMore","apyWithFee","dayVolume","oneDayVolumeUSD","reserveUSD","oneYearFee","perMonthReturnInRewards","marginLeft","symbol","marginRight","ended","apy","symbol1","toUpperCase","symbol2","pspan"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport { ChainId, Pair } from '@uniswap/sdk';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport {\n  useStakingInfo,\n  getBulkPairData,\n  useDualStakingInfo,\n} from 'state/stake/hooks';\nimport { DoubleCurrencyLogo } from 'components';\nimport { formatAPY, getAPYWithFee, getOneYearFee } from 'utils';\nimport PoolPositionCardDetails from './PoolPositionCardDetails';\nimport 'components/styles/PoolPositionCard.scss';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from 'hooks';\n\nconst PoolPositionCard: React.FC<{ pair: Pair }> = ({ pair }) => {\n  const { t } = useTranslation();\n  const { chainId } = useActiveWeb3React();\n  const [bulkPairData, setBulkPairData] = useState<any>(null);\n  const chainIdOrDefault = chainId ?? ChainId.MAINNET;\n  const currency0 = unwrappedToken(pair.token0);\n  const currency1 = unwrappedToken(pair.token1);\n\n  const stakingInfos = useStakingInfo(chainIdOrDefault, pair);\n  const dualStakingInfos = useDualStakingInfo(chainIdOrDefault, pair);\n  const stakingInfo = useMemo(\n    () =>\n      stakingInfos.length > 0\n        ? stakingInfos[0]\n        : dualStakingInfos.length > 0\n        ? dualStakingInfos[0]\n        : null,\n    [stakingInfos, dualStakingInfos],\n  );\n\n  const pairId = pair.liquidityToken.address;\n\n  useEffect(() => {\n    const pairLists = [pairId];\n    getBulkPairData(pairLists).then((data) => setBulkPairData(data));\n    return () => setBulkPairData(null);\n  }, [pairId]);\n\n  const [showMore, setShowMore] = useState(false);\n\n  const apyWithFee = useMemo(() => {\n    if (stakingInfo && bulkPairData) {\n      const dayVolume = bulkPairData[stakingInfo.pair]?.oneDayVolumeUSD;\n      const reserveUSD = bulkPairData[stakingInfo.pair]?.reserveUSD;\n      const oneYearFee =\n        dayVolume && reserveUSD ? getOneYearFee(dayVolume, reserveUSD) : 0;\n      return formatAPY(\n        getAPYWithFee(stakingInfo.perMonthReturnInRewards ?? 0, oneYearFee),\n      );\n    }\n  }, [stakingInfo, bulkPairData]);\n\n  return (\n    <Box\n      className={`poolPositionCard ${\n        showMore ? 'bg-secondary2' : 'bg-transparent'\n      }`}\n    >\n      <Box className='poolPositionCardTop'>\n        <Box className='flex items-center'>\n          <DoubleCurrencyLogo\n            currency0={currency0}\n            currency1={currency1}\n            size={28}\n          />\n          <p className='weight-600' style={{ marginLeft: 16 }}>\n            {!currency0 || !currency1\n              ? 'Loading'\n              : `${currency0.symbol}/${currency1.symbol}`}\n          </p>\n        </Box>\n\n        <Box\n          className='flex items-center text-primary cursor-pointer'\n          onClick={() => setShowMore(!showMore)}\n        >\n          <p style={{ marginRight: 8 }}>{t('manage')}</p>\n          {showMore ? <ChevronUp size='20' /> : <ChevronDown size='20' />}\n        </Box>\n      </Box>\n\n      {showMore && <PoolPositionCardDetails pair={pair} />}\n      {stakingInfo && !stakingInfo.ended && apyWithFee && (\n        <Box className='poolPositionAPYWrapper'>\n          <small>\n            <Trans\n              i18nKey='poolAPYDesc'\n              values={{\n                apy: apyWithFee,\n                symbol1: currency0.symbol?.toUpperCase(),\n                symbol2: currency1.symbol?.toUpperCase(),\n              }}\n              components={{ pspan: <small className='text-success' /> }}\n            />\n          </small>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default PoolPositionCard;\n"]},"metadata":{},"sourceType":"module"}