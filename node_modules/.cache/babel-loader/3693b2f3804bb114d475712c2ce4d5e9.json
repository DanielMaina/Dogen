{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CustomTable/CustomTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, useMediaQuery, TableRow, TableCell } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons';\nimport { DataTable } from 'components';\nimport 'components/styles/CustomTable.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomTable = _ref => {\n  _s();\n\n  let {\n    rowsPerPage = 5,\n    showPagination = true,\n    emptyMessage,\n    headCells,\n    data,\n    defaultOrderBy,\n    defaultOrder,\n    mobileHTML,\n    desktopHTML\n  } = _ref;\n  const theme = useTheme();\n  const mobileWindowSize = useMediaQuery(theme.breakpoints.down('xs'));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"tableContainer\",\n    children: mobileWindowSize ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n        children: mobileHTML(item, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(DataTable, {\n      defaultOrderBy: defaultOrderBy,\n      defaultOrder: defaultOrder,\n      emptyMesage: emptyMessage,\n      showPagination: showPagination,\n      headCells: headCells,\n      data: data,\n      rowPerPage: rowsPerPage,\n      sortUpIcon: /*#__PURE__*/_jsxDEV(ArrowUpward, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this),\n      sortDownIcon: /*#__PURE__*/_jsxDEV(ArrowDownward, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this),\n      showEmptyRows: false,\n      renderRow: (item, index, page, rowsPerPage) => {\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          children: desktopHTML(item, index, page, rowsPerPage).map((cellItem, ind) => /*#__PURE__*/_jsxDEV(TableCell, {\n            className: cellItem.button ? 'buttonCell' : '',\n            children: cellItem.html\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomTable, \"OyzyHGiNuIbdy8/ap12ViQSppmM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = CustomTable;\nexport default CustomTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CustomTable/CustomTable.tsx"],"names":["React","Box","useMediaQuery","TableRow","TableCell","useTheme","ArrowUpward","ArrowDownward","DataTable","CustomTable","rowsPerPage","showPagination","emptyMessage","headCells","data","defaultOrderBy","defaultOrder","mobileHTML","desktopHTML","theme","mobileWindowSize","breakpoints","down","map","item","index","page","cellItem","ind","button","html"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAASC,GAAT,EAAcC,aAAd,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,mBAAxD;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,oBAA3C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,oCAAP;;;;AAmBA,MAAMC,WAA4C,GAAG,QAU/C;AAAA;;AAAA,MAVgD;AACpDC,IAAAA,WAAW,GAAG,CADsC;AAEpDC,IAAAA,cAAc,GAAG,IAFmC;AAGpDC,IAAAA,YAHoD;AAIpDC,IAAAA,SAJoD;AAKpDC,IAAAA,IALoD;AAMpDC,IAAAA,cANoD;AAOpDC,IAAAA,YAPoD;AAQpDC,IAAAA,UARoD;AASpDC,IAAAA;AAToD,GAUhD;AACJ,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAMe,gBAAgB,GAAGlB,aAAa,CAACiB,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAtC;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGF,gBAAgB,gBACf;AAAA,gBACGN,IAAI,CAACS,GAAL,CAAS,CAACC,IAAD,EAAYC,KAAZ,kBACR,QAAC,GAAD;AAAA,kBAAkBR,UAAU,CAACO,IAAD,EAAOC,KAAP;AAA5B,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADe,gBAOf,QAAC,SAAD;AACE,MAAA,cAAc,EAAEV,cADlB;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,WAAW,EAAEJ,YAHf;AAIE,MAAA,cAAc,EAAED,cAJlB;AAKE,MAAA,SAAS,EAAEE,SALb;AAME,MAAA,IAAI,EAAEC,IANR;AAOE,MAAA,UAAU,EAAEJ,WAPd;AAQE,MAAA,UAAU,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cARd;AASE,MAAA,YAAY,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAThB;AAUE,MAAA,aAAa,EAAE,KAVjB;AAWE,MAAA,SAAS,EAAE,CAACc,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAoBhB,WAApB,KAAoC;AAC7C,4BACE,QAAC,QAAD;AAAA,oBACGQ,WAAW,CAACM,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAoBhB,WAApB,CAAX,CAA4Ca,GAA5C,CACC,CAACI,QAAD,EAAgBC,GAAhB,kBACE,QAAC,SAAD;AAEE,YAAA,SAAS,EAAED,QAAQ,CAACE,MAAT,GAAkB,YAAlB,GAAiC,EAF9C;AAAA,sBAIGF,QAAQ,CAACG;AAJZ,aACOF,GADP;AAAA;AAAA;AAAA;AAAA,kBAFH;AADH,WAAeH,KAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD;AA1BH;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAtDD;;GAAMhB,W;UAWUJ,Q,EACWH,a;;;KAZrBO,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, { ReactChild } from 'react';\nimport { Box, useMediaQuery, TableRow, TableCell } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons';\nimport { DataTable } from 'components';\nimport 'components/styles/CustomTable.scss';\n\nexport interface CustomTableProps<T> {\n  emptyMessage?: string;\n  showPagination?: boolean;\n  rowsPerPage?: number;\n  headCells: any;\n  data: any;\n  defaultOrderBy?: T;\n  defaultOrder?: 'asc' | 'desc';\n  mobileHTML: (item: any, index: number) => ReactChild;\n  desktopHTML: (\n    item: any,\n    index: number,\n    page: number,\n    rowsPerPage: number,\n  ) => any;\n}\n\nconst CustomTable: React.FC<CustomTableProps<any>> = ({\n  rowsPerPage = 5,\n  showPagination = true,\n  emptyMessage,\n  headCells,\n  data,\n  defaultOrderBy,\n  defaultOrder,\n  mobileHTML,\n  desktopHTML,\n}) => {\n  const theme = useTheme();\n  const mobileWindowSize = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <Box className='tableContainer'>\n      {mobileWindowSize ? (\n        <>\n          {data.map((item: any, index: number) => (\n            <Box key={index}>{mobileHTML(item, index)}</Box>\n          ))}\n        </>\n      ) : (\n        <DataTable\n          defaultOrderBy={defaultOrderBy}\n          defaultOrder={defaultOrder}\n          emptyMesage={emptyMessage}\n          showPagination={showPagination}\n          headCells={headCells}\n          data={data}\n          rowPerPage={rowsPerPage}\n          sortUpIcon={<ArrowUpward />}\n          sortDownIcon={<ArrowDownward />}\n          showEmptyRows={false}\n          renderRow={(item, index, page, rowsPerPage) => {\n            return (\n              <TableRow key={index}>\n                {desktopHTML(item, index, page, rowsPerPage).map(\n                  (cellItem: any, ind: number) => (\n                    <TableCell\n                      key={ind}\n                      className={cellItem.button ? 'buttonCell' : ''}\n                    >\n                      {cellItem.html}\n                    </TableCell>\n                  ),\n                )}\n              </TableRow>\n            );\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default CustomTable;\n"]},"metadata":{},"sourceType":"module"}