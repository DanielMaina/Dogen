{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/LiquidityPools.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LiquidityPools = _ref => {\n  _s();\n\n  var _token1$symbol, _token2$symbol, _token1$symbol2, _token2$symbol2;\n\n  let {\n    token1,\n    token2\n  } = _ref;\n  const {\n    breakpoints\n  } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const {\n    t\n  } = useTranslation();\n  const {\n    ethPrice\n  } = useEthPrice();\n  const liquidityPairs = useMemo(() => tokenPairs ? tokenPairs.filter(pair => {\n    if (liquidityFilterIndex === 0) {\n      return true;\n    } else if (liquidityFilterIndex === 1) {\n      return pair.token0.id === token1Address || pair.token1.id === token1Address;\n    } else {\n      return pair.token0.id === token2Address || pair.token1.id === token2Address;\n    }\n  }).slice(0, 5) : [], [tokenPairs, liquidityFilterIndex, token1Address, token2Address]);\n  const whiteListAddressList = useMemo(() => Object.keys(allTokenList).map(item => item.toLowerCase()), [allTokenList]);\n  useEffect(() => {\n    if (!ethPrice.price) return;\n\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n      const formattedPairs = tokenPairs ? tokenPairs.filter(pair => {\n        var _pair$token, _pair$token2;\n\n        return whiteListAddressList.includes(pair === null || pair === void 0 ? void 0 : (_pair$token = pair.token0) === null || _pair$token === void 0 ? void 0 : _pair$token.id) && whiteListAddressList.includes(pair === null || pair === void 0 ? void 0 : (_pair$token2 = pair.token1) === null || _pair$token2 === void 0 ? void 0 : _pair$token2.id);\n      }).map(pair => {\n        return pair.id;\n      }) : [];\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex items-center justify-between\",\n      marginBottom: liquidityPoolClosed ? 0 : '20px',\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"weight-600\",\n          style: {\n            marginRight: 8\n          },\n          children: t('liquidityPools')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-secondary\",\n          children: [\"(\", (_token1$symbol = token1.symbol) === null || _token1$symbol === void 0 ? void 0 : _token1$symbol.toUpperCase(), \", \", (_token2$symbol = token2.symbol) === null || _token2$symbol === void 0 ? void 0 : _token2$symbol.toUpperCase(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex cursor-pointer text-secondary\",\n        onClick: () => setLiquidityPoolClosed(!liquidityPoolClosed),\n        children: liquidityPoolClosed ? /*#__PURE__*/_jsxDEV(KeyboardArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), !liquidityPoolClosed && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          padding: 2,\n          className: \"flex liquidityMain\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            width: 0.5,\n            className: \"flex liquidityFilter\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: liquidityFilterIndex === 0 ? 'active' : '',\n              onClick: () => setLiquidityFilterIndex(0),\n              children: t('all')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: liquidityFilterIndex === 1 ? 'active' : '',\n              onClick: () => setLiquidityFilterIndex(1),\n              children: (_token1$symbol2 = token1.symbol) === null || _token1$symbol2 === void 0 ? void 0 : _token1$symbol2.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: liquidityFilterIndex === 2 ? 'active' : '',\n              onClick: () => setLiquidityFilterIndex(2),\n              children: (_token2$symbol2 = token2.symbol) === null || _token2$symbol2 === void 0 ? void 0 : _token2$symbol2.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), !isMobile && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              width: 0.2,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: t('tvl')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              width: 0.15,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: t('24hVol')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              width: 0.15,\n              className: \"text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: t('apy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), liquidityPairs.map((pair, ind) => /*#__PURE__*/_jsxDEV(LiquidityPoolRow, {\n          pair: pair\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(LiquidityPools, \"24Mem8ninrqECzZoo72k3rsZnHE=\", false, function () {\n  return [useTheme, useMediaQuery, useAllTokens, useTranslation, useEthPrice];\n});\n\n_c = LiquidityPools;\nexport default LiquidityPools;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiquidityPools\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/LiquidityPools.tsx"],"names":["React","useEffect","useMemo","useState","Box","Divider","useMediaQuery","KeyboardArrowUp","KeyboardArrowDown","useTheme","getTokenPairs","getBulkPairData","LiquidityPoolRow","useAllTokens","useTranslation","useEthPrice","LiquidityPools","token1","token2","breakpoints","isMobile","down","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","address","toLowerCase","token2Address","allTokenList","t","ethPrice","liquidityPairs","filter","pair","token0","id","slice","whiteListAddressList","Object","keys","map","item","price","formattedPairs","includes","pairData","marginRight","symbol","toUpperCase","ind"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { getTokenPairs, getBulkPairData } from 'utils';\nimport { Token } from '@uniswap/sdk';\nimport LiquidityPoolRow from './LiquidityPoolRow';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useTranslation } from 'react-i18next';\nimport { useEthPrice } from 'state/application/hooks';\n\nconst LiquidityPools: React.FC<{\n  token1: Token;\n  token2: Token;\n}> = ({ token1, token2 }) => {\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\n  const token1Address = token1.address.toLowerCase();\n  const token2Address = token2.address.toLowerCase();\n  const allTokenList = useAllTokens();\n  const { t } = useTranslation();\n  const { ethPrice } = useEthPrice();\n\n  const liquidityPairs = useMemo(\n    () =>\n      tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              if (liquidityFilterIndex === 0) {\n                return true;\n              } else if (liquidityFilterIndex === 1) {\n                return (\n                  pair.token0.id === token1Address ||\n                  pair.token1.id === token1Address\n                );\n              } else {\n                return (\n                  pair.token0.id === token2Address ||\n                  pair.token1.id === token2Address\n                );\n              }\n            })\n            .slice(0, 5)\n        : [],\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\n  );\n\n  const whiteListAddressList = useMemo(\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\n    [allTokenList],\n  );\n\n  useEffect(() => {\n    if (!ethPrice.price) return;\n    (async () => {\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\n\n      const formattedPairs = tokenPairs\n        ? tokenPairs\n            .filter((pair: any) => {\n              return (\n                whiteListAddressList.includes(pair?.token0?.id) &&\n                whiteListAddressList.includes(pair?.token1?.id)\n              );\n            })\n            .map((pair: any) => {\n              return pair.id;\n            })\n        : [];\n\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTokenPairs(pairData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\n\n  return (\n    <>\n      <Box\n        className='flex items-center justify-between'\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\n      >\n        <Box className='flex items-center'>\n          <p className='weight-600' style={{ marginRight: 8 }}>\n            {t('liquidityPools')}\n          </p>\n          <small className='text-secondary'>\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\n          </small>\n        </Box>\n        <Box\n          className='flex cursor-pointer text-secondary'\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\n        >\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\n        </Box>\n      </Box>\n      {!liquidityPoolClosed && (\n        <>\n          <Divider />\n          <Box width={1}>\n            <Box padding={2} className='flex liquidityMain'>\n              <Box width={0.5} className='flex liquidityFilter'>\n                <small\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(0)}\n                >\n                  {t('all')}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(1)}\n                >\n                  {token1.symbol?.toUpperCase()}\n                </small>\n                <small\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\n                  onClick={() => setLiquidityFilterIndex(2)}\n                >\n                  {token2.symbol?.toUpperCase()}\n                </small>\n              </Box>\n              {!isMobile && (\n                <>\n                  <Box width={0.2}>\n                    <small>{t('tvl')}</small>\n                  </Box>\n                  <Box width={0.15}>\n                    <small>{t('24hVol')}</small>\n                  </Box>\n                  <Box width={0.15} className='text-right'>\n                    <small>{t('apy')}</small>\n                  </Box>\n                </>\n              )}\n            </Box>\n            {liquidityPairs.map((pair: any, ind: any) => (\n              <LiquidityPoolRow pair={pair} key={ind} />\n            ))}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LiquidityPools;\n"]},"metadata":{},"sourceType":"module"}