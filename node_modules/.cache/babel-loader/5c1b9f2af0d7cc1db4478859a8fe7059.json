{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/SyrupCard/SyrupCardDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { CurrencyLogo, StakeSyrupModal } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport { useStakingContract } from 'hooks/useContract';\nimport { useTransactionAdder, useTransactionFinalizer } from 'state/transactions/hooks';\nimport { formatCompact, formatMulDivTokenAmount, formatTokenAmount, getEarnedUSDSyrup } from 'utils';\nimport SyrupTimerLabel from './SyrupTimerLabel';\nimport CircleInfoIcon from \"assets/images/circleinfo.svg\";\nimport SyrupAPR from './SyrupAPR';\nimport { useUSDCPriceToken } from 'utils/useUSDCPrice';\nimport { GlobalConst } from 'constants/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SyrupCardDetails = _ref => {\n  _s();\n\n  var _syrup$stakedAmount, _syrup$rewardRate;\n\n  let {\n    syrup,\n    dQUICKAPY\n  } = _ref;\n  const syrupCurrency = unwrappedToken(syrup.token);\n  const {\n    breakpoints\n  } = useTheme();\n  const {\n    t\n  } = useTranslation();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [attemptingClaim, setAttemptingClaim] = useState(false);\n  const [attemptingUnstake, setAttemptingUnstake] = useState(false);\n  const [openStakeModal, setOpenStakeModal] = useState(false);\n  const stakingTokenPrice = useUSDCPriceToken(syrup.stakingToken);\n  const stakingContract = useStakingContract(syrup === null || syrup === void 0 ? void 0 : syrup.stakingRewardAddress);\n  const addTransaction = useTransactionAdder();\n  const finalizedTransaction = useTransactionFinalizer();\n  const {\n    account\n  } = useActiveWeb3React();\n  const currency = syrup ? unwrappedToken(syrup.token) : undefined;\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, (_syrup$stakedAmount = syrup.stakedAmount) === null || _syrup$stakedAmount === void 0 ? void 0 : _syrup$stakedAmount.token);\n  const exactEnd = syrup ? syrup.periodFinish : 0;\n  const depositAmount = syrup && syrup.valueOfTotalStakedAmountInUSDC ? `$${Number(syrup.valueOfTotalStakedAmountInUSDC).toLocaleString()}` : `${formatTokenAmount(syrup === null || syrup === void 0 ? void 0 : syrup.totalStakedAmount)} ${syrup === null || syrup === void 0 ? void 0 : syrup.stakingToken.symbol}`;\n\n  const onClaimReward = async () => {\n    if (syrup && stakingContract && syrup.stakedAmount) {\n      setAttemptingClaim(true);\n      await stakingContract.getReward({\n        gasLimit: 350000\n      }).then(async response => {\n        addTransaction(response, {\n          summary: t('claimrewards1', {\n            symbol: syrup.token.symbol\n          })\n        });\n\n        try {\n          const receipt = await response.wait();\n          finalizedTransaction(receipt, {\n            summary: t('claimrewards1', {\n              symbol: syrup.token.symbol\n            })\n          });\n          setAttemptingClaim(false);\n        } catch (e) {\n          setAttemptingClaim(false);\n        }\n      }).catch(error => {\n        setAttemptingClaim(false);\n        console.log(error);\n      });\n    }\n  };\n\n  const onWithdraw = async () => {\n    if (syrup && stakingContract && syrup.stakedAmount) {\n      setAttemptingUnstake(true);\n      await stakingContract.exit({\n        gasLimit: 300000\n      }).then(async response => {\n        addTransaction(response, {\n          summary: t('withdrawliquidity')\n        });\n\n        try {\n          const receipt = await response.wait();\n          finalizedTransaction(receipt, {\n            summary: t('withdrawliquidity')\n          });\n          setAttemptingUnstake(false);\n        } catch (e) {\n          setAttemptingUnstake(false);\n        }\n      }).catch(error => {\n        setAttemptingUnstake(false);\n        console.log(error);\n      });\n    }\n  };\n\n  const StakeButton = () => /*#__PURE__*/_jsxDEV(Box, {\n    className: \"syrupButton\",\n    onClick: () => setOpenStakeModal(true),\n    children: /*#__PURE__*/_jsxDEV(\"small\", {\n      children: t('stake')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n\n  const UnstakeButton = () => /*#__PURE__*/_jsxDEV(Box, {\n    className: `syrupButton${attemptingUnstake ? ' opacity-disabled' : ''}`,\n    onClick: () => {\n      if (!attemptingUnstake) {\n        onWithdraw();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"small\", {\n      children: attemptingUnstake ? `${t('unstaking')}...` : t('unstake')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n\n  const ClaimButton = () => /*#__PURE__*/_jsxDEV(Box, {\n    className: `syrupButton${attemptingClaim ? ' opacity-disabled' : ''}`,\n    onClick: () => {\n      if (!attemptingClaim) {\n        onClaimReward();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"small\", {\n      children: attemptingClaim ? `${t('claiming')}...` : t('claim')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openStakeModal && syrup && /*#__PURE__*/_jsxDEV(StakeSyrupModal, {\n      open: openStakeModal,\n      onClose: () => setOpenStakeModal(false),\n      syrup: syrup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), syrup && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        padding: isMobile ? 2 : 3,\n        children: [isMobile && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex justify-between\",\n            mb: 1.5,\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              children: [syrup.stakingToken.symbol, \" \", t('deposits'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: depositAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex justify-between\",\n            mb: 1.5,\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              children: [t('dailyRewards'), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [syrup.rate >= 1000000 ? formatCompact(syrup.rate) : syrup.rate.toLocaleString(), ' ', syrup.token.symbol, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-secondary\",\n                children: [\" / \", t('day')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(SyrupTimerLabel, {\n              exactEnd: exactEnd,\n              isEnded: syrup === null || syrup === void 0 ? void 0 : syrup.ended\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex justify-between\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-secondary\",\n                children: [t('apr'), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                ml: 0.5,\n                height: 16,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: CircleInfoIcon,\n                  alt: 'arrow up'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"right\",\n              children: /*#__PURE__*/_jsxDEV(SyrupAPR, {\n                syrup: syrup,\n                dQUICKAPY: dQUICKAPY\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center justify-between\",\n          mb: 1.5,\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-secondary\",\n            children: t('inwallet')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [userLiquidityUnstaked ? formatTokenAmount(userLiquidityUnstaked) : 0, ' ', syrup.stakingToken.symbol, /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              style: {\n                marginLeft: 4\n              },\n              children: [\"$\", userLiquidityUnstaked ? (stakingTokenPrice * Number(userLiquidityUnstaked.toExact())).toLocaleString() : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center justify-between\",\n          mb: 1.5,\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-secondary\",\n            children: t('staked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [formatTokenAmount(syrup.stakedAmount), ' ', syrup.stakingToken.symbol, /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-secondary\",\n              style: {\n                marginLeft: 4\n              },\n              children: syrup.stakedAmount ? `$${(stakingTokenPrice * Number(syrup.stakedAmount.toExact())).toLocaleString()}` : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center justify-between\",\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-secondary\",\n            children: [t('earned'), \" \", currency === null || currency === void 0 ? void 0 : currency.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency,\n              size: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                marginLeft: 4\n              },\n              children: [formatTokenAmount(syrup.earnedAmount), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-secondary\",\n                style: {\n                  marginLeft: 4\n                },\n                children: getEarnedUSDSyrup(syrup)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex flex-wrap items-center justify-between\",\n          children: [!isMobile && /*#__PURE__*/_jsxDEV(SyrupTimerLabel, {\n            exactEnd: exactEnd,\n            isEnded: syrup === null || syrup === void 0 ? void 0 : syrup.ended\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [syrup.earnedAmount && syrup.earnedAmount.greaterThan('0') && /*#__PURE__*/_jsxDEV(Box, {\n              width: 1,\n              mb: 1.5,\n              className: \"flex justify-end\",\n              children: /*#__PURE__*/_jsxDEV(ClaimButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              width: 1,\n              mb: 1.5,\n              className: `flex ${syrup.stakedAmount && syrup.stakedAmount.greaterThan('0') ? 'justify-between' : 'justify-end'}`,\n              children: [!syrup.ended && /*#__PURE__*/_jsxDEV(StakeButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 38\n              }, this), syrup.stakedAmount && syrup.stakedAmount.greaterThan('0') && /*#__PURE__*/_jsxDEV(UnstakeButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex flex-wrap\",\n            my: 1,\n            children: [!syrup.ended && /*#__PURE__*/_jsxDEV(StakeButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 36\n            }, this), syrup.stakedAmount && syrup.stakedAmount.greaterThan('0') && /*#__PURE__*/_jsxDEV(Box, {\n              ml: 1,\n              children: /*#__PURE__*/_jsxDEV(UnstakeButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this), syrup.earnedAmount && syrup.earnedAmount.greaterThan('0') && /*#__PURE__*/_jsxDEV(Box, {\n              ml: 1,\n              children: /*#__PURE__*/_jsxDEV(ClaimButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), ((_syrup$rewardRate = syrup.rewardRate) === null || _syrup$rewardRate === void 0 ? void 0 : _syrup$rewardRate.greaterThan('0')) && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"dailyRateWrapper\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              mr: 1,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-secondary\",\n                children: [t('yourRate'), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [formatMulDivTokenAmount(syrup.rewardRate, GlobalConst.utils.ONEDAYSECONDS), ' ', syrupCurrency.symbol, \" / \", t('day')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(SyrupCardDetails, \"i0YSD8Tfl/Kulrp+0pg8u0FBjDA=\", false, function () {\n  return [useTheme, useTranslation, useMediaQuery, useUSDCPriceToken, useStakingContract, useTransactionAdder, useTransactionFinalizer, useActiveWeb3React, useTokenBalance];\n});\n\n_c = SyrupCardDetails;\nexport default _c2 = /*#__PURE__*/React.memo(SyrupCardDetails);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SyrupCardDetails\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/SyrupCard/SyrupCardDetails.tsx"],"names":["React","useState","Box","Divider","useMediaQuery","useTheme","useTranslation","unwrappedToken","useTokenBalance","CurrencyLogo","StakeSyrupModal","useActiveWeb3React","useStakingContract","useTransactionAdder","useTransactionFinalizer","formatCompact","formatMulDivTokenAmount","formatTokenAmount","getEarnedUSDSyrup","SyrupTimerLabel","SyrupAPR","useUSDCPriceToken","GlobalConst","SyrupCardDetails","syrup","dQUICKAPY","syrupCurrency","token","breakpoints","t","isMobile","down","attemptingClaim","setAttemptingClaim","attemptingUnstake","setAttemptingUnstake","openStakeModal","setOpenStakeModal","stakingTokenPrice","stakingToken","stakingContract","stakingRewardAddress","addTransaction","finalizedTransaction","account","currency","undefined","userLiquidityUnstaked","stakedAmount","exactEnd","periodFinish","depositAmount","valueOfTotalStakedAmountInUSDC","Number","toLocaleString","totalStakedAmount","symbol","onClaimReward","getReward","gasLimit","then","response","summary","receipt","wait","e","catch","error","console","log","onWithdraw","exit","StakeButton","UnstakeButton","ClaimButton","rate","ended","CircleInfoIcon","marginLeft","toExact","earnedAmount","greaterThan","rewardRate","utils","ONEDAYSECONDS","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { useTranslation } from 'react-i18next';\nimport { SyrupInfo } from 'types';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { CurrencyLogo, StakeSyrupModal } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport { useStakingContract } from 'hooks/useContract';\nimport {\n  useTransactionAdder,\n  useTransactionFinalizer,\n} from 'state/transactions/hooks';\nimport {\n  formatCompact,\n  formatMulDivTokenAmount,\n  formatTokenAmount,\n  getEarnedUSDSyrup,\n} from 'utils';\nimport SyrupTimerLabel from './SyrupTimerLabel';\nimport CircleInfoIcon from 'assets/images/circleinfo.svg';\nimport SyrupAPR from './SyrupAPR';\nimport { useUSDCPriceToken } from 'utils/useUSDCPrice';\nimport { GlobalConst } from 'constants/index';\n\nconst SyrupCardDetails: React.FC<{ syrup: SyrupInfo; dQUICKAPY: string }> = ({\n  syrup,\n  dQUICKAPY,\n}) => {\n  const syrupCurrency = unwrappedToken(syrup.token);\n  const { breakpoints } = useTheme();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [attemptingClaim, setAttemptingClaim] = useState(false);\n  const [attemptingUnstake, setAttemptingUnstake] = useState(false);\n  const [openStakeModal, setOpenStakeModal] = useState(false);\n\n  const stakingTokenPrice = useUSDCPriceToken(syrup.stakingToken);\n  const stakingContract = useStakingContract(syrup?.stakingRewardAddress);\n  const addTransaction = useTransactionAdder();\n  const finalizedTransaction = useTransactionFinalizer();\n\n  const { account } = useActiveWeb3React();\n  const currency = syrup ? unwrappedToken(syrup.token) : undefined;\n\n  const userLiquidityUnstaked = useTokenBalance(\n    account ?? undefined,\n    syrup.stakedAmount?.token,\n  );\n\n  const exactEnd = syrup ? syrup.periodFinish : 0;\n\n  const depositAmount =\n    syrup && syrup.valueOfTotalStakedAmountInUSDC\n      ? `$${Number(syrup.valueOfTotalStakedAmountInUSDC).toLocaleString()}`\n      : `${formatTokenAmount(syrup?.totalStakedAmount)} ${\n          syrup?.stakingToken.symbol\n        }`;\n\n  const onClaimReward = async () => {\n    if (syrup && stakingContract && syrup.stakedAmount) {\n      setAttemptingClaim(true);\n      await stakingContract\n        .getReward({ gasLimit: 350000 })\n        .then(async (response: TransactionResponse) => {\n          addTransaction(response, {\n            summary: t('claimrewards1', { symbol: syrup.token.symbol }),\n          });\n          try {\n            const receipt = await response.wait();\n            finalizedTransaction(receipt, {\n              summary: t('claimrewards1', { symbol: syrup.token.symbol }),\n            });\n            setAttemptingClaim(false);\n          } catch (e) {\n            setAttemptingClaim(false);\n          }\n        })\n        .catch((error: any) => {\n          setAttemptingClaim(false);\n          console.log(error);\n        });\n    }\n  };\n\n  const onWithdraw = async () => {\n    if (syrup && stakingContract && syrup.stakedAmount) {\n      setAttemptingUnstake(true);\n      await stakingContract\n        .exit({ gasLimit: 300000 })\n        .then(async (response: TransactionResponse) => {\n          addTransaction(response, {\n            summary: t('withdrawliquidity'),\n          });\n          try {\n            const receipt = await response.wait();\n            finalizedTransaction(receipt, {\n              summary: t('withdrawliquidity'),\n            });\n            setAttemptingUnstake(false);\n          } catch (e) {\n            setAttemptingUnstake(false);\n          }\n        })\n        .catch((error: any) => {\n          setAttemptingUnstake(false);\n          console.log(error);\n        });\n    }\n  };\n\n  const StakeButton = () => (\n    <Box className='syrupButton' onClick={() => setOpenStakeModal(true)}>\n      <small>{t('stake')}</small>\n    </Box>\n  );\n\n  const UnstakeButton = () => (\n    <Box\n      className={`syrupButton${attemptingUnstake ? ' opacity-disabled' : ''}`}\n      onClick={() => {\n        if (!attemptingUnstake) {\n          onWithdraw();\n        }\n      }}\n    >\n      <small>{attemptingUnstake ? `${t('unstaking')}...` : t('unstake')}</small>\n    </Box>\n  );\n\n  const ClaimButton = () => (\n    <Box\n      className={`syrupButton${attemptingClaim ? ' opacity-disabled' : ''}`}\n      onClick={() => {\n        if (!attemptingClaim) {\n          onClaimReward();\n        }\n      }}\n    >\n      <small>{attemptingClaim ? `${t('claiming')}...` : t('claim')}</small>\n    </Box>\n  );\n\n  return (\n    <>\n      {openStakeModal && syrup && (\n        <StakeSyrupModal\n          open={openStakeModal}\n          onClose={() => setOpenStakeModal(false)}\n          syrup={syrup}\n        />\n      )}\n      {syrup && (\n        <>\n          <Divider />\n          <Box padding={isMobile ? 2 : 3}>\n            {isMobile && (\n              <Box mb={2}>\n                <Box className='flex justify-between' mb={1.5}>\n                  <small className='text-secondary'>\n                    {syrup.stakingToken.symbol} {t('deposits')}:\n                  </small>\n                  <small>{depositAmount}</small>\n                </Box>\n                <Box className='flex justify-between' mb={1.5}>\n                  <small className='text-secondary'>{t('dailyRewards')}:</small>\n                  <small>\n                    {syrup.rate >= 1000000\n                      ? formatCompact(syrup.rate)\n                      : syrup.rate.toLocaleString()}{' '}\n                    {syrup.token.symbol}\n                    <span className='text-secondary'> / {t('day')}</span>\n                  </small>\n                </Box>\n                <Box mb={1.5}>\n                  <SyrupTimerLabel exactEnd={exactEnd} isEnded={syrup?.ended} />\n                </Box>\n                <Box className='flex justify-between' mb={2}>\n                  <Box className='flex items-center'>\n                    <small className='text-secondary'>{t('apr')}:</small>\n                    <Box ml={0.5} height={16}>\n                      <img src={CircleInfoIcon} alt={'arrow up'} />\n                    </Box>\n                  </Box>\n                  <Box textAlign='right'>\n                    <SyrupAPR syrup={syrup} dQUICKAPY={dQUICKAPY} />\n                  </Box>\n                </Box>\n                <Divider />\n              </Box>\n            )}\n            <Box className='flex items-center justify-between' mb={1.5}>\n              <small className='text-secondary'>{t('inwallet')}</small>\n              <small>\n                {userLiquidityUnstaked\n                  ? formatTokenAmount(userLiquidityUnstaked)\n                  : 0}{' '}\n                {syrup.stakingToken.symbol}\n                <small className='text-secondary' style={{ marginLeft: 4 }}>\n                  $\n                  {userLiquidityUnstaked\n                    ? (\n                        stakingTokenPrice *\n                        Number(userLiquidityUnstaked.toExact())\n                      ).toLocaleString()\n                    : 0}\n                </small>\n              </small>\n            </Box>\n            <Box className='flex items-center justify-between' mb={1.5}>\n              <small className='text-secondary'>{t('staked')}</small>\n              <small>\n                {formatTokenAmount(syrup.stakedAmount)}{' '}\n                {syrup.stakingToken.symbol}\n                <small className='text-secondary' style={{ marginLeft: 4 }}>\n                  {syrup.stakedAmount\n                    ? `$${(\n                        stakingTokenPrice * Number(syrup.stakedAmount.toExact())\n                      ).toLocaleString()}`\n                    : '-'}\n                </small>\n              </small>\n            </Box>\n            <Box className='flex items-center justify-between' mb={2}>\n              <small className='text-secondary'>\n                {t('earned')} {currency?.symbol}\n              </small>\n              <Box className='flex items-center'>\n                <CurrencyLogo currency={currency} size='16px' />\n                <small style={{ marginLeft: 4 }}>\n                  {formatTokenAmount(syrup.earnedAmount)}\n                  <small className='text-secondary' style={{ marginLeft: 4 }}>\n                    {getEarnedUSDSyrup(syrup)}\n                  </small>\n                </small>\n              </Box>\n            </Box>\n            <Box className='flex flex-wrap items-center justify-between'>\n              {!isMobile && (\n                <SyrupTimerLabel exactEnd={exactEnd} isEnded={syrup?.ended} />\n              )}\n              {isMobile ? (\n                <>\n                  {syrup.earnedAmount && syrup.earnedAmount.greaterThan('0') && (\n                    <Box width={1} mb={1.5} className='flex justify-end'>\n                      <ClaimButton />\n                    </Box>\n                  )}\n                  <Box\n                    width={1}\n                    mb={1.5}\n                    className={`flex ${\n                      syrup.stakedAmount && syrup.stakedAmount.greaterThan('0')\n                        ? 'justify-between'\n                        : 'justify-end'\n                    }`}\n                  >\n                    {!syrup.ended && <StakeButton />}\n                    {syrup.stakedAmount &&\n                      syrup.stakedAmount.greaterThan('0') && <UnstakeButton />}\n                  </Box>\n                </>\n              ) : (\n                <Box className='flex flex-wrap' my={1}>\n                  {!syrup.ended && <StakeButton />}\n                  {syrup.stakedAmount && syrup.stakedAmount.greaterThan('0') && (\n                    <Box ml={1}>\n                      <UnstakeButton />\n                    </Box>\n                  )}\n                  {syrup.earnedAmount && syrup.earnedAmount.greaterThan('0') && (\n                    <Box ml={1}>\n                      <ClaimButton />\n                    </Box>\n                  )}\n                </Box>\n              )}\n            </Box>\n            {syrup.rewardRate?.greaterThan('0') && (\n              <Box className='dailyRateWrapper'>\n                <Box>\n                  <Box display='flex' mr={1}>\n                    <small className='text-secondary'>{t('yourRate')}:</small>\n                  </Box>\n                  <small>\n                    {formatMulDivTokenAmount(\n                      syrup.rewardRate,\n                      GlobalConst.utils.ONEDAYSECONDS,\n                    )}{' '}\n                    {syrupCurrency.symbol} / {t('day')}\n                  </small>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(SyrupCardDetails);\n"]},"metadata":{},"sourceType":"module"}