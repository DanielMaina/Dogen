{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignedVersionedTypedDataSubProvider = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar subproviders_1 = require(\"@0x/subproviders\");\n\nvar SignedVersionedTypedDataSubProvider =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SignedVersionedTypedDataSubProvider, _super);\n\n  function SignedVersionedTypedDataSubProvider(arkaneWalletSubProvider) {\n    var _this = _super.call(this) || this;\n\n    _this.arkaneWalletSubProvider = arkaneWalletSubProvider;\n    return _this;\n  }\n  /**\n   * This method conforms to the web3-provider-engine interface.\n   * It is called internally by the ProviderEngine when it is this subproviders\n   * turn to handle a JSON RPC request.\n   * @param payload JSON RPC payload\n   * @param next Callback to call if this subprovider decides not to handle the request\n   * @param end Callback to call if subprovider handled the request and wants to pass back the request.\n   */\n  // tslint:disable-next-line:prefer-function-over-method async-suffix\n\n\n  SignedVersionedTypedDataSubProvider.prototype.handleRequest = function (payload, next, end) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a, result;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = payload.method;\n\n            switch (_a) {\n              case 'eth_signTypedData_v4':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'eth_signTypedData_v3':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'eth_signTypedData_v2':\n                return [3\n                /*break*/\n                , 1];\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 1:\n            if (!(!payload.params[0] || !payload.params[1])) return [3\n            /*break*/\n            , 2];\n            end(new Error('Missing parameters for signing data, 2 params needed: address, eip712Data'));\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.arkaneWalletSubProvider.signTypedDataAsync(payload.params[0], payload.params[1])];\n\n          case 3:\n            result = _b.sent();\n            end(null, result);\n            _b.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n\n          case 5:\n            next();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return SignedVersionedTypedDataSubProvider;\n}(subproviders_1.Subprovider);\n\nexports.SignedVersionedTypedDataSubProvider = SignedVersionedTypedDataSubProvider;","map":{"version":3,"sources":["../../src/SignedVersionedTypedDataSubProvider.ts"],"names":[],"mappings":";;;;;;;;;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAGA,IAAA,mCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyD,EAAA,OAAA,CAAA,SAAA,CAAA,mCAAA,EAAA,MAAA;;AAIrD,WAAA,mCAAA,CAAY,uBAAZ,EAA4D;AAA5D,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAEI,IAAA,KAAI,CAAC,uBAAL,GAA+B,uBAA/B;;AACH;AAED;;;;;;;AAOG;AACH;;;AACa,EAAA,mCAAA,CAAA,SAAA,CAAA,aAAA,GAAb,UAA2B,OAA3B,EAC2B,IAD3B,EAE2B,GAF3B,EAE6C;;;;;;;AAEjC,YAAA,EAAA,GAAA,OAAO,CAAC,MAAR;;;mBACC,sB;AAAA,uBAAA,CAAA;AAAA;AAAA,kBAAA,CAAA,CAAA;;mBACA,sB;AAAA,uBAAA,CAAA;AAAA;AAAA,kBAAA,CAAA,CAAA;;mBACA,sB;AAAA,uBAAA,CAAA;AAAA;AAAA,kBAAA,CAAA,CAAA;;;;;;;;gBACG,EAAA,CAAC,OAAO,CAAC,MAAR,CAAe,CAAf,CAAD,IAAsB,CAAC,OAAO,CAAC,MAAR,CAAe,CAAf,CAAvB,C,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACA,YAAA,GAAG,CAAC,IAAI,KAAJ,CAAU,2EAAV,CAAD,CAAH;;;;;;AAEa,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,uBAAL,CAA6B,kBAA7B,CAAgD,OAAO,CAAC,MAAR,CAAe,CAAf,CAAhD,EAAmE,OAAO,CAAC,MAAR,CAAe,CAAf,CAAnE,CAAN,CAAA;;;AAAT,YAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACJ,YAAA,GAAG,CAAC,IAAD,EAAO,MAAP,CAAH;;;;AAEJ,mBAAA,CAAA;AAAA;AAAA,aAAA;;;AAGA,YAAA,IAAI;AACJ,mBAAA,CAAA;AAAA;AAAA,aAAA;;;;AAEX,GApBY;;AAsBjB,SAAA,mCAAA;AAAC,CAxCD,CAAyD,cAAA,CAAA,WAAzD,CAAA;;AAAa,OAAA,CAAA,mCAAA,GAAA,mCAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignedVersionedTypedDataSubProvider = void 0;\nvar tslib_1 = require(\"tslib\");\nvar subproviders_1 = require(\"@0x/subproviders\");\nvar SignedVersionedTypedDataSubProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(SignedVersionedTypedDataSubProvider, _super);\n    function SignedVersionedTypedDataSubProvider(arkaneWalletSubProvider) {\n        var _this = _super.call(this) || this;\n        _this.arkaneWalletSubProvider = arkaneWalletSubProvider;\n        return _this;\n    }\n    /**\n     * This method conforms to the web3-provider-engine interface.\n     * It is called internally by the ProviderEngine when it is this subproviders\n     * turn to handle a JSON RPC request.\n     * @param payload JSON RPC payload\n     * @param next Callback to call if this subprovider decides not to handle the request\n     * @param end Callback to call if subprovider handled the request and wants to pass back the request.\n     */\n    // tslint:disable-next-line:prefer-function-over-method async-suffix\n    SignedVersionedTypedDataSubProvider.prototype.handleRequest = function (payload, next, end) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, result;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = payload.method;\n                        switch (_a) {\n                            case 'eth_signTypedData_v4': return [3 /*break*/, 1];\n                            case 'eth_signTypedData_v3': return [3 /*break*/, 1];\n                            case 'eth_signTypedData_v2': return [3 /*break*/, 1];\n                        }\n                        return [3 /*break*/, 5];\n                    case 1:\n                        if (!(!payload.params[0] || !payload.params[1])) return [3 /*break*/, 2];\n                        end(new Error('Missing parameters for signing data, 2 params needed: address, eip712Data'));\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.arkaneWalletSubProvider.signTypedDataAsync(payload.params[0], payload.params[1])];\n                    case 3:\n                        result = _b.sent();\n                        end(null, result);\n                        _b.label = 4;\n                    case 4: return [2 /*return*/];\n                    case 5:\n                        next();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return SignedVersionedTypedDataSubProvider;\n}(subproviders_1.Subprovider));\nexports.SignedVersionedTypedDataSubProvider = SignedVersionedTypedDataSubProvider;\n//# sourceMappingURL=SignedVersionedTypedDataSubProvider.js.map"]},"metadata":{},"sourceType":"script"}