{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencyLogo/CurrencyLogo.tsx\",\n    _s = $RefreshSig$();\n\nimport { ETHER, Token } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box } from '@material-ui/core';\nimport EthereumLogo from \"assets/images/Currency/wwDOGE.svg\";\nimport useHttpLocations from 'hooks/useHttpLocations';\nimport { WrappedTokenInfo } from 'state/lists/hooks';\nimport { Logo } from 'components';\nimport { getTokenLogoURL } from 'utils/getTokenLogoURL';\nimport 'components/styles/CurrencyLogo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencyLogo = _ref => {\n  _s();\n\n  var _currency$symbol;\n\n  let {\n    currency,\n    size = '24px',\n    style\n  } = _ref;\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\n  const srcs = useMemo(() => {\n    if (currency === ETHER) return [];\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, ...getTokenLogoURL(currency.address)];\n      }\n\n      return getTokenLogoURL(currency.address);\n    }\n\n    return [];\n  }, [currency, uriLocations]);\n\n  if (currency === ETHER) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: style,\n      width: size,\n      height: size,\n      borderRadius: size,\n      className: \"currencyLogo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ethereumLogo\",\n        src: EthereumLogo,\n        alt: \"Ethereum Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: size,\n    height: size,\n    borderRadius: size,\n    className: \"currencyLogo bg-white\",\n    children: /*#__PURE__*/_jsxDEV(Logo, {\n      srcs: srcs,\n      size: size,\n      alt: `${(_currency$symbol = currency === null || currency === void 0 ? void 0 : currency.symbol) !== null && _currency$symbol !== void 0 ? _currency$symbol : 'token'} logo`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrencyLogo, \"jo2gP9fsIv3AxI3dA7ElsR2yU5g=\", false, function () {\n  return [useHttpLocations];\n});\n\n_c = CurrencyLogo;\nexport default CurrencyLogo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyLogo\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencyLogo/CurrencyLogo.tsx"],"names":["ETHER","Token","React","useMemo","Box","useHttpLocations","WrappedTokenInfo","Logo","getTokenLogoURL","CurrencyLogo","currency","size","style","uriLocations","logoURI","undefined","srcs","address","EthereumLogo","symbol"],"mappings":";;;AAAA,SAAmBA,KAAnB,EAA0BC,KAA1B,QAAuC,cAAvC;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAO,qCAAP;;;AAQA,MAAMC,YAAyC,GAAG,QAI5C;AAAA;;AAAA;;AAAA,MAJ6C;AACjDC,IAAAA,QADiD;AAEjDC,IAAAA,IAAI,GAAG,MAF0C;AAGjDC,IAAAA;AAHiD,GAI7C;AACJ,QAAMC,YAAY,GAAGR,gBAAgB,CACnCK,QAAQ,YAAYJ,gBAApB,GAAuCI,QAAQ,CAACI,OAAhD,GAA0DC,SADvB,CAArC;AAIA,QAAMC,IAAc,GAAGb,OAAO,CAAC,MAAM;AACnC,QAAIO,QAAQ,KAAKV,KAAjB,EAAwB,OAAO,EAAP;;AAExB,QAAIU,QAAQ,YAAYT,KAAxB,EAA+B;AAC7B,UAAIS,QAAQ,YAAYJ,gBAAxB,EAA0C;AACxC,eAAO,CAAC,GAAGO,YAAJ,EAAkB,GAAGL,eAAe,CAACE,QAAQ,CAACO,OAAV,CAApC,CAAP;AACD;;AAED,aAAOT,eAAe,CAACE,QAAQ,CAACO,OAAV,CAAtB;AACD;;AACD,WAAO,EAAP;AACD,GAX6B,EAW3B,CAACP,QAAD,EAAWG,YAAX,CAX2B,CAA9B;;AAaA,MAAIH,QAAQ,KAAKV,KAAjB,EAAwB;AACtB,wBACE,QAAC,GAAD;AACE,MAAA,KAAK,EAAEY,KADT;AAEE,MAAA,KAAK,EAAED,IAFT;AAGE,MAAA,MAAM,EAAEA,IAHV;AAIE,MAAA,YAAY,EAAEA,IAJhB;AAKE,MAAA,SAAS,EAAC,cALZ;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAEO,YAAnC;AAAiD,QAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBACE,QAAC,GAAD;AACE,IAAA,KAAK,EAAEP,IADT;AAEE,IAAA,MAAM,EAAEA,IAFV;AAGE,IAAA,YAAY,EAAEA,IAHhB;AAIE,IAAA,SAAS,EAAC,uBAJZ;AAAA,2BAME,QAAC,IAAD;AACE,MAAA,IAAI,EAAEK,IADR;AAEE,MAAA,IAAI,EAAEL,IAFR;AAGE,MAAA,GAAG,EAAG,GAAD,oBAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAES,MAAb,+DAAuB,OAAQ;AAHtC;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlDD;;GAAMV,Y;UAKiBJ,gB;;;KALjBI,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk';\nimport React, { useMemo } from 'react';\nimport { Box } from '@material-ui/core';\nimport EthereumLogo from 'assets/images/Currency/wwDOGE.svg';\nimport useHttpLocations from 'hooks/useHttpLocations';\nimport { WrappedTokenInfo } from 'state/lists/hooks';\nimport { Logo } from 'components';\nimport { getTokenLogoURL } from 'utils/getTokenLogoURL';\nimport 'components/styles/CurrencyLogo.scss';\n\ninterface CurrencyLogoProps {\n  currency?: Currency;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst CurrencyLogo: React.FC<CurrencyLogoProps> = ({\n  currency,\n  size = '24px',\n  style,\n}) => {\n  const uriLocations = useHttpLocations(\n    currency instanceof WrappedTokenInfo ? currency.logoURI : undefined,\n  );\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return [];\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, ...getTokenLogoURL(currency.address)];\n      }\n\n      return getTokenLogoURL(currency.address);\n    }\n    return [];\n  }, [currency, uriLocations]);\n\n  if (currency === ETHER) {\n    return (\n      <Box\n        style={style}\n        width={size}\n        height={size}\n        borderRadius={size}\n        className='currencyLogo'\n      >\n        <img className='ethereumLogo' src={EthereumLogo} alt='Ethereum Logo' />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      width={size}\n      height={size}\n      borderRadius={size}\n      className='currencyLogo bg-white'\n    >\n      <Logo\n        srcs={srcs}\n        size={size}\n        alt={`${currency?.symbol ?? 'token'} logo`}\n      />\n    </Box>\n  );\n};\n\nexport default CurrencyLogo;\n"]},"metadata":{},"sourceType":"module"}