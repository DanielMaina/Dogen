{"ast":null,"code":"const addMaticToMetamask = () => {\n  const {\n    ethereum\n  } = window;\n\n  if (ethereum) {\n    ethereum.request({\n      method: 'wallet_addEthereumChain',\n      params: [{\n        chainId: '2000',\n        chainName: 'Polygon Network',\n        rpcUrls: ['https://rpc-sg.dogechain.dog/'],\n        iconUrls: ['https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0/logo.png'],\n        blockExplorerUrls: ['https://polygonscan.com/'],\n        nativeCurrency: {\n          name: 'Doge Token',\n          symbol: 'WWDOGE',\n          decimals: 18\n        }\n      }] // you must have access to the specified account\n\n    }).catch(error => {\n      if (error.code === 4001) {\n        console.log('We can encrypt anything without the key.');\n      } else {\n        console.error(error);\n      }\n    });\n  }\n};\n\nexport default addMaticToMetamask;","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/utils/addMaticToMetamask.ts"],"names":["addMaticToMetamask","ethereum","window","request","method","params","chainId","chainName","rpcUrls","iconUrls","blockExplorerUrls","nativeCurrency","name","symbol","decimals","catch","error","code","console","log"],"mappings":"AAAA,MAAMA,kBAA8B,GAAG,MAAM;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAeC,MAArB;;AACA,MAAID,QAAJ,EAAc;AACZA,IAAAA,QAAQ,CACLE,OADH,CACW;AACPC,MAAAA,MAAM,EAAE,yBADD;AAEPC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,OAAO,EAAE,MADX;AAEEC,QAAAA,SAAS,EAAE,iBAFb;AAGEC,QAAAA,OAAO,EAAE,CAAC,+BAAD,CAHX;AAIEC,QAAAA,QAAQ,EAAE,CACR,6IADQ,CAJZ;AAOEC,QAAAA,iBAAiB,EAAE,CAAC,0BAAD,CAPrB;AAQEC,QAAAA,cAAc,EAAE;AACdC,UAAAA,IAAI,EAAE,YADQ;AAEdC,UAAAA,MAAM,EAAE,QAFM;AAGdC,UAAAA,QAAQ,EAAE;AAHI;AARlB,OADM,CAFD,CAiBJ;;AAjBI,KADX,EAoBGC,KApBH,CAoBUC,KAAD,IAAgB;AACrB,UAAIA,KAAK,CAACC,IAAN,KAAe,IAAnB,EAAyB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF,KA1BH;AA2BD;AACF,CA/BD;;AAiCA,eAAehB,kBAAf","sourcesContent":["const addMaticToMetamask: () => void = () => {\n  const { ethereum } = window as any;\n  if (ethereum) {\n    ethereum\n      .request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: '2000',\n            chainName: 'Polygon Network',\n            rpcUrls: ['https://rpc-sg.dogechain.dog/'],\n            iconUrls: [\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0/logo.png',\n            ],\n            blockExplorerUrls: ['https://polygonscan.com/'],\n            nativeCurrency: {\n              name: 'Doge Token',\n              symbol: 'WWDOGE',\n              decimals: 18,\n            },\n          },\n        ], // you must have access to the specified account\n      })\n      .catch((error: any) => {\n        if (error.code === 4001) {\n          console.log('We can encrypt anything without the key.');\n        } else {\n          console.error(error);\n        }\n      });\n  }\n};\n\nexport default addMaticToMetamask;\n"]},"metadata":{},"sourceType":"module"}