{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/Popups/TransactionPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Box, LinearProgress } from '@material-ui/core';\nimport { useActiveWeb3React } from 'hooks';\nimport { getEtherscanLink } from 'utils/index';\nimport { ReactComponent as ArrowTopRight } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/ArrowTopRight.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionPopup = _ref => {\n  _s();\n\n  let {\n    hash,\n    pending,\n    success,\n    summary\n  } = _ref;\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [progress, setProgress] = React.useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        return Math.min(oldProgress + 2.5, 100);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 1.5,\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        className: `weight-600 ${pending ? 'text-yellow3' : success ? 'text-success' : 'text-error'}`,\n        children: pending ? 'Processing…' : success ? 'Confirmed' : 'Failed'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), chainId && hash.length > 0 && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: getEtherscanLink(chainId, hash, 'transaction'),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(ArrowTopRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: summary !== null && summary !== void 0 ? summary : 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), pending && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"pendingBar\",\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionPopup, \"al18YIy4x9tvXcw11hjRx/2aNVU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c = TransactionPopup;\nexport default TransactionPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPopup\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/Popups/TransactionPopup.tsx"],"names":["React","useEffect","Box","LinearProgress","useActiveWeb3React","getEtherscanLink","TransactionPopup","hash","pending","success","summary","chainId","progress","setProgress","useState","timer","setInterval","oldProgress","Math","min","clearInterval","length","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoC,mBAApC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,gBAAT,QAAiC,aAAjC;;;;;AAUA,MAAMC,gBAAiD,GAAG,QAKpD;AAAA;;AAAA,MALqD;AACzDC,IAAAA,IADyD;AAEzDC,IAAAA,OAFyD;AAGzDC,IAAAA,OAHyD;AAIzDC,IAAAA;AAJyD,GAKrD;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAcP,kBAAkB,EAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACc,QAAN,CAAe,CAAf,CAAhC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BH,MAAAA,WAAW,CAAEI,WAAD,IAAiB;AAC3B,eAAOC,IAAI,CAACC,GAAL,CAASF,WAAW,GAAG,GAAvB,EAA4B,GAA5B,CAAP;AACD,OAFU,CAAX;AAGD,KAJwB,EAItB,GAJsB,CAAzB;AAMA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACL,KAAD,CAAb;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,GAAT;AAAc,MAAA,SAAS,EAAC,mCAAxB;AAAA,8BACE;AACE,QAAA,SAAS,EAAG,cACVP,OAAO,GAAG,cAAH,GAAoBC,OAAO,GAAG,cAAH,GAAoB,YACvD,EAHH;AAAA,kBAKGD,OAAO,GAAG,aAAH,GAAmBC,OAAO,GAAG,WAAH,GAAiB;AALrD;AAAA;AAAA;AAAA;AAAA,cADF,EAQGE,OAAO,IAAIJ,IAAI,CAACc,MAAL,GAAc,CAAzB,iBACC;AACE,QAAA,IAAI,EAAEhB,gBAAgB,CAACM,OAAD,EAAUJ,IAAV,EAAgB,aAAhB,CADxB;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC,qBAHN;AAAA,+BAKE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAA,gBACGG,OADH,aACGA,OADH,cACGA,OADH,GACc,WAAWH,IAAI,CAACe,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX,GAA8B,KAA9B,GAAsCf,IAAI,CAACe,KAAL,CAAW,EAAX,EAAe,EAAf;AADpD;AAAA;AAAA;AAAA;AAAA,YAnBF,EAsBGd,OAAO,iBACN,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAsC,QAAA,KAAK,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,kBADF;AA8BD,CAnDD;;GAAMN,gB;UAMgBF,kB;;;KANhBE,gB;AAqDN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Box, LinearProgress } from '@material-ui/core';\nimport { useActiveWeb3React } from 'hooks';\nimport { getEtherscanLink } from 'utils/index';\nimport { ReactComponent as ArrowTopRight } from 'assets/images/ArrowTopRight.svg';\n\ninterface TransactionPopupProps {\n  hash: string;\n  pending?: boolean;\n  success?: boolean;\n  summary?: string;\n}\n\nconst TransactionPopup: React.FC<TransactionPopupProps> = ({\n  hash,\n  pending,\n  success,\n  summary,\n}) => {\n  const { chainId } = useActiveWeb3React();\n  const [progress, setProgress] = React.useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        return Math.min(oldProgress + 2.5, 100);\n      });\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb={1.5} className='flex justify-between items-center'>\n        <small\n          className={`weight-600 ${\n            pending ? 'text-yellow3' : success ? 'text-success' : 'text-error'\n          }`}\n        >\n          {pending ? 'Processing…' : success ? 'Confirmed' : 'Failed'}\n        </small>\n        {chainId && hash.length > 0 && (\n          <a\n            href={getEtherscanLink(chainId, hash, 'transaction')}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <ArrowTopRight />\n          </a>\n        )}\n      </Box>\n      <small>\n        {summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}\n      </small>\n      {pending && (\n        <Box className='pendingBar'>\n          <LinearProgress variant='determinate' value={progress} />\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default TransactionPopup;\n"]},"metadata":{},"sourceType":"module"}