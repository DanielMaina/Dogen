{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/AnalyticsPage/AnalyticsOverview.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { ArrowForwardIos } from '@material-ui/icons';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { useEthPrice, useGlobalData } from 'state/application/hooks';\nimport { getTopPairs, getTopTokens, getGlobalData, getBulkPairData } from 'utils';\nimport { GlobalConst } from 'constants/index';\nimport { TokensTable, PairTable } from 'components';\nimport AnalyticsInfo from './AnalyticsInfo';\nimport AnalyticsLiquidityChart from './AnalyticsLiquidityChart';\nimport AnalyticsVolumeChart from './AnalyticsVolumeChart';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(utc);\n\nconst AnalyticsOverview = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory();\n  const {\n    globalData,\n    updateGlobalData\n  } = useGlobalData();\n  const [topTokens, updateTopTokens] = useState(null);\n  const [topPairs, updateTopPairs] = useState(null);\n  const {\n    ethPrice\n  } = useEthPrice();\n  useEffect(() => {\n    if (!ethPrice.price || !ethPrice.oneDayPrice) return;\n    getGlobalData(ethPrice.price, ethPrice.oneDayPrice).then(data => {\n      if (data) {\n        updateGlobalData({\n          data\n        });\n      }\n    });\n    getTopTokens(ethPrice.price, ethPrice.oneDayPrice, GlobalConst.utils.ANALYTICS_TOKENS_COUNT).then(data => {\n      if (data) {\n        updateTopTokens(data);\n      }\n    });\n    getTopPairs(GlobalConst.utils.ANALYTICS_PAIRS_COUNT).then(async pairs => {\n      const formattedPairs = pairs ? pairs.map(pair => {\n        return pair.id;\n      }) : [];\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n      if (pairData) {\n        updateTopPairs(pairData);\n      }\n    });\n  }, [updateGlobalData, ethPrice.price, ethPrice.oneDayPrice]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    mb: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"panel\",\n          width: 1,\n          children: /*#__PURE__*/_jsxDEV(AnalyticsLiquidityChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"analyticsVolumeChart panel\",\n          children: /*#__PURE__*/_jsxDEV(AnalyticsVolumeChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"panel flex flex-wrap\",\n        children: globalData ? /*#__PURE__*/_jsxDEV(AnalyticsInfo, {\n          data: globalData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"100%\",\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"headingWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weight-600\",\n            children: t('topTokens')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"headingWrapper cursor-pointer\",\n          onClick: () => history.push(`/analytics/tokens`),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weight-600\",\n            children: t('seeAll')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      className: \"panel\",\n      children: topTokens ? /*#__PURE__*/_jsxDEV(TokensTable, {\n        data: topTokens,\n        showPagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: \"100%\",\n        height: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"headingWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weight-600\",\n            children: t('topPairs')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"headingWrapper cursor-pointer\",\n          onClick: () => history.push(`/analytics/pairs`),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weight-600\",\n            children: t('seeAll')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      className: \"panel\",\n      children: topPairs ? /*#__PURE__*/_jsxDEV(PairTable, {\n        data: topPairs,\n        showPagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rect\",\n        width: \"100%\",\n        height: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnalyticsOverview, \"7pCwNlOK3rNy16yaF90pl2yechM=\", false, function () {\n  return [useTranslation, useHistory, useGlobalData, useEthPrice];\n});\n\n_c = AnalyticsOverview;\nexport default AnalyticsOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticsOverview\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/AnalyticsPage/AnalyticsOverview.tsx"],"names":["React","useState","useEffect","Box","Grid","useHistory","Skeleton","ArrowForwardIos","dayjs","utc","useEthPrice","useGlobalData","getTopPairs","getTopTokens","getGlobalData","getBulkPairData","GlobalConst","TokensTable","PairTable","AnalyticsInfo","AnalyticsLiquidityChart","AnalyticsVolumeChart","useTranslation","extend","AnalyticsOverview","t","history","globalData","updateGlobalData","topTokens","updateTopTokens","topPairs","updateTopPairs","ethPrice","price","oneDayPrice","then","data","utils","ANALYTICS_TOKENS_COUNT","ANALYTICS_PAIRS_COUNT","pairs","formattedPairs","map","pair","id","pairData","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { ArrowForwardIos } from '@material-ui/icons';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { useEthPrice, useGlobalData } from 'state/application/hooks';\nimport {\n  getTopPairs,\n  getTopTokens,\n  getGlobalData,\n  getBulkPairData,\n} from 'utils';\nimport { GlobalConst } from 'constants/index';\nimport { TokensTable, PairTable } from 'components';\nimport AnalyticsInfo from './AnalyticsInfo';\nimport AnalyticsLiquidityChart from './AnalyticsLiquidityChart';\nimport AnalyticsVolumeChart from './AnalyticsVolumeChart';\nimport { useTranslation } from 'react-i18next';\n\ndayjs.extend(utc);\n\nconst AnalyticsOverview: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const { globalData, updateGlobalData } = useGlobalData();\n  const [topTokens, updateTopTokens] = useState<any[] | null>(null);\n  const [topPairs, updateTopPairs] = useState<any[] | null>(null);\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    if (!ethPrice.price || !ethPrice.oneDayPrice) return;\n    getGlobalData(ethPrice.price, ethPrice.oneDayPrice).then((data) => {\n      if (data) {\n        updateGlobalData({ data });\n      }\n    });\n\n    getTopTokens(\n      ethPrice.price,\n      ethPrice.oneDayPrice,\n      GlobalConst.utils.ANALYTICS_TOKENS_COUNT,\n    ).then((data) => {\n      if (data) {\n        updateTopTokens(data);\n      }\n    });\n\n    getTopPairs(GlobalConst.utils.ANALYTICS_PAIRS_COUNT).then(async (pairs) => {\n      const formattedPairs = pairs\n        ? pairs.map((pair: any) => {\n            return pair.id;\n          })\n        : [];\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n      if (pairData) {\n        updateTopPairs(pairData);\n      }\n    });\n  }, [updateGlobalData, ethPrice.price, ethPrice.oneDayPrice]);\n\n  return (\n    <Box width='100%' mb={3}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={12} md={6}>\n          <Box className='panel' width={1}>\n            <AnalyticsLiquidityChart />\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          <Box className='analyticsVolumeChart panel'>\n            <AnalyticsVolumeChart />\n          </Box>\n        </Grid>\n      </Grid>\n      <Box mt={4}>\n        <Box className='panel flex flex-wrap'>\n          {globalData ? (\n            <AnalyticsInfo data={globalData} />\n          ) : (\n            <Skeleton width='100%' height={20} />\n          )}\n        </Box>\n      </Box>\n      <Box mt={4}>\n        <Box className='flex justify-between items-center'>\n          <Box className='headingWrapper'>\n            <p className='weight-600'>{t('topTokens')}</p>\n          </Box>\n          <Box\n            className='headingWrapper cursor-pointer'\n            onClick={() => history.push(`/analytics/tokens`)}\n          >\n            <p className='weight-600'>{t('seeAll')}</p>\n            <ArrowForwardIos />\n          </Box>\n        </Box>\n      </Box>\n      <Box mt={3} className='panel'>\n        {topTokens ? (\n          <TokensTable data={topTokens} showPagination={false} />\n        ) : (\n          <Skeleton variant='rect' width='100%' height={150} />\n        )}\n      </Box>\n      <Box mt={4}>\n        <Box className='flex items-center justify-between'>\n          <Box className='headingWrapper'>\n            <p className='weight-600'>{t('topPairs')}</p>\n          </Box>\n          <Box\n            className='headingWrapper cursor-pointer'\n            onClick={() => history.push(`/analytics/pairs`)}\n          >\n            <p className='weight-600'>{t('seeAll')}</p>\n            <ArrowForwardIos />\n          </Box>\n        </Box>\n      </Box>\n      <Box mt={3} className='panel'>\n        {topPairs ? (\n          <PairTable data={topPairs} showPagination={false} />\n        ) : (\n          <Skeleton variant='rect' width='100%' height={150} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AnalyticsOverview;\n"]},"metadata":{},"sourceType":"module"}