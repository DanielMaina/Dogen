{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/SwapInfoTx.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndayjs.extend(utc);\n\nconst SwapInfoTx = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime.subtract(subtractTimeAmount, subtractTimeType).unix();\n  const filteredTxs = transactions === null || transactions === void 0 ? void 0 : transactions.filter(tx => tx.transaction.timestamp >= firstTime);\n  const filteredBuyTxs = filteredTxs === null || filteredTxs === void 0 ? void 0 : filteredTxs.filter(tx => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs === null || filteredTxs === void 0 ? void 0 : filteredTxs.filter(tx => Number(tx.amount0In) > 0);\n  const volume = filteredTxs ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0) : undefined;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonSwitch, {\n      height: 32,\n      value: txFilter,\n      onChange: setTxFilter,\n      items: [{\n        label: `5${t('min')}`,\n        value: '5_minute'\n      }, {\n        label: `1${t('hour')}`,\n        value: '1_hour'\n      }, {\n        label: `6${t('hour')}`,\n        value: '6_hour'\n      }, {\n        label: `24${t('hour')}`,\n        value: '24_hour'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"swapTxInfo\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-secondary\",\n          children: [t('transactions'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), filteredTxs ? /*#__PURE__*/_jsxDEV(\"small\", {\n          children: filteredTxs.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 60,\n          height: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-secondary\",\n          children: [t('buys'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: filteredBuyTxs ? filteredBuyTxs.length : /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 60,\n            height: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-secondary\",\n          children: [t('sells'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: filteredSellTxs ? filteredSellTxs.length : /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 60,\n            height: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-secondary\",\n          children: [t('volume'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: filteredTxs ? volume > 1000 ? formatCompact(volume) : formatNumber(volume) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 60,\n            height: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SwapInfoTx, \"phgnS3xVDlVjR4Cblcxk2ZailOg=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SwapInfoTx;\nexport default _c2 = /*#__PURE__*/React.memo(SwapInfoTx);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SwapInfoTx\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/SwapInfoTx.tsx"],"names":["React","useState","Box","Divider","ButtonSwitch","dayjs","utc","Skeleton","formatCompact","formatNumber","useTranslation","extend","SwapInfoTx","transactions","txFilter","setTxFilter","subtractTimeAmount","Number","split","subtractTimeType","currentTime","firstTime","subtract","unix","filteredTxs","filter","tx","transaction","timestamp","filteredBuyTxs","amount1In","filteredSellTxs","amount0In","volume","reduce","total","amountUSD","undefined","t","label","value","length","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { ButtonSwitch } from 'components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { formatCompact, formatNumber } from 'utils';\nimport { useTranslation } from 'react-i18next';\ndayjs.extend(utc);\n\nconst SwapInfoTx: React.FC<{\n  transactions?: any[];\n}> = ({ transactions }) => {\n  const [txFilter, setTxFilter] = useState('5_minute');\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\n  const subtractTimeType = txFilter.split('_')[1];\n  const currentTime = dayjs.utc();\n  const firstTime = currentTime\n    .subtract(subtractTimeAmount, subtractTimeType)\n    .unix();\n\n  const filteredTxs = transactions?.filter(\n    (tx) => tx.transaction.timestamp >= firstTime,\n  );\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\n  const volume = filteredTxs\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\n    : undefined;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ButtonSwitch\n        height={32}\n        value={txFilter}\n        onChange={setTxFilter}\n        items={[\n          { label: `5${t('min')}`, value: '5_minute' },\n          { label: `1${t('hour')}`, value: '1_hour' },\n          { label: `6${t('hour')}`, value: '6_hour' },\n          { label: `24${t('hour')}`, value: '24_hour' },\n        ]}\n      />\n      <Box className='swapTxInfo'>\n        <Box>\n          <small className='text-secondary'>{t('transactions')}:</small>\n          {filteredTxs ? (\n            <small>{filteredTxs.length}</small>\n          ) : (\n            <Skeleton width={60} height={14} />\n          )}\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('buys')}:</small>\n          <small>\n            {filteredBuyTxs ? (\n              filteredBuyTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('sells')}:</small>\n          <small>\n            {filteredSellTxs ? (\n              filteredSellTxs.length\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n        <Divider />\n        <Box>\n          <small className='text-secondary'>{t('volume')}:</small>\n          <small>\n            {filteredTxs ? (\n              volume > 1000 ? (\n                formatCompact(volume)\n              ) : (\n                formatNumber(volume)\n              )\n            ) : (\n              <Skeleton width={60} height={14} />\n            )}\n          </small>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default React.memo(SwapInfoTx);\n"]},"metadata":{},"sourceType":"module"}