{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$(),\n    _s22 = $RefreshSig$(),\n    _s23 = $RefreshSig$();\n\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json';\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { abi as MERKLE_DISTRIBUTOR_ABI } from '@uniswap/merkle-distributor/build/MerkleDistributor.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport { GlobalConst } from '../constants';\nimport { ARGENT_WALLET_DETECTOR_ABI, ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS } from 'constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from 'constants/abis/ens-public-resolver.json';\nimport ENS_ABI from 'constants/abis/ens-registrar.json';\nimport ERC20_ABI, { ERC20_BYTES32_ABI } from 'constants/abis/erc20';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from 'constants/abis/migrator';\nimport { STAKING_DUAL_REWARDS_INTERFACE } from 'constants/abis/staking-rewards';\nimport UNISOCKS_ABI from 'constants/abis/unisocks.json';\nimport WETH_ABI from 'constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from 'constants/multicall';\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from 'constants/v1';\nimport { getContract } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { abi as LairABI } from 'abis/DragonLair.json';\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json';\nimport QUICKConversionABI from 'constants/abis/quick-conversion.json';\n\nfunction useContract(address, ABI) {\n  _s();\n\n  let withSignerIfPossible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\n_s(useContract, \"bS5GtDgwY2raBDSgRZeif67r/2o=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useLairContract() {\n  _s2();\n\n  return useContract(GlobalConst.addresses.LAIR_ADDRESS, LairABI, true);\n}\n\n_s2(useLairContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useQUICKContract() {\n  _s3();\n\n  return useContract(GlobalConst.addresses.QUICK_ADDRESS, ERC20_ABI, true);\n}\n\n_s3(useQUICKContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useNewLairContract() {\n  _s4();\n\n  return useContract(GlobalConst.addresses.NEW_LAIR_ADDRESS, LairABI, true);\n}\n\n_s4(useNewLairContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useNewQUICKContract() {\n  _s5();\n\n  return useContract(GlobalConst.addresses.NEW_QUICK_ADDRESS, ERC20_ABI, true);\n}\n\n_s5(useNewQUICKContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useQUICKConversionContract() {\n  _s6();\n\n  return useContract(GlobalConst.addresses.QUICK_CONVERSION, QUICKConversionABI, true);\n}\n\n_s6(useQUICKConversionContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useV1FactoryContract() {\n  _s7();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false);\n}\n\n_s7(useV1FactoryContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useV2MigratorContract() {\n  _s8();\n\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\n\n_s8(useV2MigratorContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useV1ExchangeContract(address, withSignerIfPossible) {\n  _s9();\n\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\n\n_s9(useV1ExchangeContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  _s10();\n\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\n_s10(useTokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useWETHContract(withSignerIfPossible) {\n  _s11();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\n\n_s11(useWETHContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useArgentWalletDetectorContract() {\n  _s12();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined, ARGENT_WALLET_DETECTOR_ABI, false);\n}\n\n_s12(useArgentWalletDetectorContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  _s13();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'; //TODO: MATIC\n\n        break;\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\n_s13(useENSRegistrarContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  _s14();\n\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\n_s14(useENSResolverContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  _s15();\n\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\n_s15(useBytes32TokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  _s16();\n\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\n_s16(usePairContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useMulticallContract() {\n  _s17();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\n\n_s17(useMulticallContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useMerkleDistributorContract() {\n  _s18();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? GlobalConst.addresses.MERKLE_DISTRIBUTOR_ADDRESS[chainId] : undefined, MERKLE_DISTRIBUTOR_ABI, true);\n}\n\n_s18(useMerkleDistributorContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useGovernanceContract() {\n  _s19();\n\n  return useContract(GlobalConst.addresses.GOVERNANCE_ADDRESS, GOVERNANCE_ABI, true);\n}\n\n_s19(useGovernanceContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  _s20();\n\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n\n_s20(useStakingContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useDualRewardsStakingContract(stakingAddress, withSignerIfPossible) {\n  _s21();\n\n  return useContract(stakingAddress, STAKING_DUAL_REWARDS_INTERFACE, withSignerIfPossible);\n}\n\n_s21(useDualRewardsStakingContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useSocksController() {\n  _s22();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? undefined : undefined, UNISOCKS_ABI, false);\n}\n\n_s22(useSocksController, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useRouterContract() {\n  _s23();\n\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  return useContract(chainId ? GlobalConst.addresses.ROUTER_ADDRESS[chainId] : undefined, IUniswapV2Router02ABI, Boolean(account));\n}\n\n_s23(useRouterContract, \"Y946us08wycA0wvzkZB27B7rzCk=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/hooks/useContract.ts"],"names":["abi","GOVERNANCE_ABI","STAKING_REWARDS_ABI","MERKLE_DISTRIBUTOR_ABI","ChainId","WETH","IUniswapV2PairABI","useMemo","GlobalConst","ARGENT_WALLET_DETECTOR_ABI","ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_ABI","ERC20_BYTES32_ABI","MIGRATOR_ABI","MIGRATOR_ADDRESS","STAKING_DUAL_REWARDS_INTERFACE","UNISOCKS_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","V1_EXCHANGE_ABI","V1_FACTORY_ABI","V1_FACTORY_ADDRESSES","getContract","useActiveWeb3React","LairABI","IUniswapV2Router02ABI","QUICKConversionABI","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useLairContract","addresses","LAIR_ADDRESS","useQUICKContract","QUICK_ADDRESS","useNewLairContract","NEW_LAIR_ADDRESS","useNewQUICKContract","NEW_QUICK_ADDRESS","useQUICKConversionContract","QUICK_CONVERSION","useV1FactoryContract","chainId","useV2MigratorContract","useV1ExchangeContract","useTokenContract","tokenAddress","useWETHContract","useArgentWalletDetectorContract","MAINNET","useENSRegistrarContract","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useMerkleDistributorContract","MERKLE_DISTRIBUTOR_ADDRESS","useGovernanceContract","GOVERNANCE_ADDRESS","useStakingContract","stakingAddress","useDualRewardsStakingContract","useSocksController","useRouterContract","ROUTER_ADDRESS","Boolean"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts';\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json';\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json';\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { abi as MERKLE_DISTRIBUTOR_ABI } from '@uniswap/merkle-distributor/build/MerkleDistributor.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport { GlobalConst, GlobalValue } from '../constants';\nimport {\n  ARGENT_WALLET_DETECTOR_ABI,\n  ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS,\n} from 'constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from 'constants/abis/ens-public-resolver.json';\nimport ENS_ABI from 'constants/abis/ens-registrar.json';\nimport ERC20_ABI, { ERC20_BYTES32_ABI } from 'constants/abis/erc20';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from 'constants/abis/migrator';\nimport { STAKING_DUAL_REWARDS_INTERFACE } from 'constants/abis/staking-rewards';\nimport UNISOCKS_ABI from 'constants/abis/unisocks.json';\nimport WETH_ABI from 'constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from 'constants/multicall';\nimport {\n  V1_EXCHANGE_ABI,\n  V1_FACTORY_ABI,\n  V1_FACTORY_ADDRESSES,\n} from 'constants/v1';\nimport { getContract } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { abi as LairABI } from 'abis/DragonLair.json';\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json';\nimport QUICKConversionABI from 'constants/abis/quick-conversion.json';\n\nfunction useContract(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true,\n): Contract | null {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined,\n      );\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useLairContract(): Contract | null {\n  return useContract(GlobalConst.addresses.LAIR_ADDRESS, LairABI, true);\n}\n\nexport function useQUICKContract(): Contract | null {\n  return useContract(GlobalConst.addresses.QUICK_ADDRESS, ERC20_ABI, true);\n}\n\nexport function useNewLairContract(): Contract | null {\n  return useContract(GlobalConst.addresses.NEW_LAIR_ADDRESS, LairABI, true);\n}\n\nexport function useNewQUICKContract(): Contract | null {\n  return useContract(GlobalConst.addresses.NEW_QUICK_ADDRESS, ERC20_ABI, true);\n}\n\nexport function useQUICKConversionContract(): Contract | null {\n  return useContract(\n    GlobalConst.addresses.QUICK_CONVERSION,\n    QUICKConversionABI,\n    true,\n  );\n}\n\nexport function useV1FactoryContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId && V1_FACTORY_ADDRESSES[chainId],\n    V1_FACTORY_ABI,\n    false,\n  );\n}\n\nexport function useV2MigratorContract(): Contract | null {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\n\nexport function useV1ExchangeContract(\n  address?: string,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\n\nexport function useTokenContract(\n  tokenAddress?: string,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\nexport function useWETHContract(\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId ? WETH[chainId].address : undefined,\n    WETH_ABI,\n    withSignerIfPossible,\n  );\n}\n\nexport function useArgentWalletDetectorContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId === ChainId.MAINNET\n      ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS\n      : undefined,\n    ARGENT_WALLET_DETECTOR_ABI,\n    false,\n  );\n}\n\nexport function useENSRegistrarContract(\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  let address: string | undefined;\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'; //TODO: MATIC\n        break;\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\nexport function useENSResolverContract(\n  address: string | undefined,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\nexport function useBytes32TokenContract(\n  tokenAddress?: string,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\nexport function usePairContract(\n  pairAddress?: string,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId && MULTICALL_NETWORKS[chainId],\n    MULTICALL_ABI,\n    false,\n  );\n}\n\nexport function useMerkleDistributorContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId\n      ? GlobalConst.addresses.MERKLE_DISTRIBUTOR_ADDRESS[chainId]\n      : undefined,\n    MERKLE_DISTRIBUTOR_ABI,\n    true,\n  );\n}\n\nexport function useGovernanceContract(): Contract | null {\n  return useContract(\n    GlobalConst.addresses.GOVERNANCE_ADDRESS,\n    GOVERNANCE_ABI,\n    true,\n  );\n}\n\nexport function useStakingContract(\n  stakingAddress?: string,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n\nexport function useDualRewardsStakingContract(\n  stakingAddress?: string,\n  withSignerIfPossible?: boolean,\n): Contract | null {\n  return useContract(\n    stakingAddress,\n    STAKING_DUAL_REWARDS_INTERFACE,\n    withSignerIfPossible,\n  );\n}\n\nexport function useSocksController(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId === ChainId.MAINNET ? undefined : undefined,\n    UNISOCKS_ABI,\n    false,\n  );\n}\n\nexport function useRouterContract(): Contract | null {\n  const { chainId, account } = useActiveWeb3React();\n  return useContract(\n    chainId ? GlobalConst.addresses.ROUTER_ADDRESS[chainId] : undefined,\n    IUniswapV2Router02ABI,\n    Boolean(account),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}