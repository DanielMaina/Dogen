{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/FarmPage/FarmPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { getBulkPairData } from 'state/stake/hooks';\nimport { ReactComponent as HelpIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/HelpIcon1.svg\";\nimport { useActiveWeb3React } from 'hooks';\nimport { GlobalConst } from 'constants/index';\nimport FarmRewards from './FarmRewards';\nimport FarmsList from './FarmsList';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/farm.scss';\nimport { useDefaultFarmList } from 'state/farms/hooks';\nimport { useDefaultDualFarmList } from 'state/dualfarms/hooks';\nimport { ChainId } from '@uniswap/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FarmPage = () => {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const [bulkPairs, setBulkPairs] = useState(null);\n  const [farmIndex, setFarmIndex] = useState(GlobalConst.farmIndex.LPFARM_INDEX);\n  const chainIdOrDefault = chainId !== null && chainId !== void 0 ? chainId : ChainId.MAINNET;\n  const lpFarms = useDefaultFarmList();\n  const dualFarms = useDefaultDualFarmList();\n  const pairLists = useMemo(() => {\n    const stakingPairLists = Object.values(lpFarms[chainIdOrDefault]).map(item => item.pair);\n    const dualPairLists = Object.values(dualFarms[chainIdOrDefault]).map(item => item.pair);\n    return stakingPairLists.concat(dualPairLists);\n  }, [chainIdOrDefault, lpFarms, dualFarms]);\n  useEffect(() => {\n    getBulkPairData(pairLists).then(data => setBulkPairs(data));\n  }, [pairLists]);\n  const farmCategories = [{\n    text: t('lpMining'),\n    onClick: () => setFarmIndex(GlobalConst.farmIndex.LPFARM_INDEX),\n    condition: farmIndex === GlobalConst.farmIndex.LPFARM_INDEX\n  }, {\n    text: t('dualMining'),\n    onClick: () => setFarmIndex(GlobalConst.farmIndex.DUALFARM_INDEX),\n    condition: farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    mb: 3,\n    id: \"farmPage\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"pageHeading\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 2,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: t('farm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"helpWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: t('help')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomSwitch, {\n      width: 300,\n      height: 48,\n      items: farmCategories,\n      isLarge: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      children: /*#__PURE__*/_jsxDEV(FarmRewards, {\n        bulkPairs: bulkPairs,\n        farmIndex: farmIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"farmsWrapper\",\n      children: /*#__PURE__*/_jsxDEV(FarmsList, {\n        bulkPairs: bulkPairs,\n        farmIndex: farmIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmPage, \"m7KQYLSYIP9UqakDHxBM8F+kyfU=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useDefaultFarmList, useDefaultDualFarmList];\n});\n\n_c = FarmPage;\nexport default FarmPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmPage\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/FarmPage/FarmPage.tsx"],"names":["React","useEffect","useMemo","useState","Box","getBulkPairData","useActiveWeb3React","GlobalConst","FarmRewards","FarmsList","CustomSwitch","useTranslation","useDefaultFarmList","useDefaultDualFarmList","ChainId","FarmPage","chainId","t","bulkPairs","setBulkPairs","farmIndex","setFarmIndex","LPFARM_INDEX","chainIdOrDefault","MAINNET","lpFarms","dualFarms","pairLists","stakingPairLists","Object","values","map","item","pair","dualPairLists","concat","then","data","farmCategories","text","onClick","condition","DUALFARM_INDEX"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { getBulkPairData } from 'state/stake/hooks';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\nimport { useActiveWeb3React } from 'hooks';\nimport { GlobalConst } from 'constants/index';\nimport FarmRewards from './FarmRewards';\nimport FarmsList from './FarmsList';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\nimport 'pages/styles/farm.scss';\nimport { useDefaultFarmList } from 'state/farms/hooks';\nimport { useDefaultDualFarmList } from 'state/dualfarms/hooks';\nimport { ChainId } from '@uniswap/sdk';\n\nconst FarmPage: React.FC = () => {\n  const { chainId } = useActiveWeb3React();\n  const { t } = useTranslation();\n  const [bulkPairs, setBulkPairs] = useState<any>(null);\n  const [farmIndex, setFarmIndex] = useState(\n    GlobalConst.farmIndex.LPFARM_INDEX,\n  );\n  const chainIdOrDefault = chainId ?? ChainId.MAINNET;\n  const lpFarms = useDefaultFarmList();\n  const dualFarms = useDefaultDualFarmList();\n\n  const pairLists = useMemo(() => {\n    const stakingPairLists = Object.values(lpFarms[chainIdOrDefault]).map(\n      (item) => item.pair,\n    );\n    const dualPairLists = Object.values(dualFarms[chainIdOrDefault]).map(\n      (item) => item.pair,\n    );\n    return stakingPairLists.concat(dualPairLists);\n  }, [chainIdOrDefault, lpFarms, dualFarms]);\n\n  useEffect(() => {\n    getBulkPairData(pairLists).then((data) => setBulkPairs(data));\n  }, [pairLists]);\n\n  const farmCategories = [\n    {\n      text: t('lpMining'),\n      onClick: () => setFarmIndex(GlobalConst.farmIndex.LPFARM_INDEX),\n      condition: farmIndex === GlobalConst.farmIndex.LPFARM_INDEX,\n    },\n    {\n      text: t('dualMining'),\n      onClick: () => setFarmIndex(GlobalConst.farmIndex.DUALFARM_INDEX),\n      condition: farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX,\n    },\n  ];\n\n  return (\n    <Box width='100%' mb={3} id='farmPage'>\n      <Box className='pageHeading'>\n        <Box mr={2}>\n          <h4>{t('farm')}</h4>\n        </Box>\n        <Box className='helpWrapper'>\n          <small>{t('help')}</small>\n          <HelpIcon />\n        </Box>\n      </Box>\n      <CustomSwitch\n        width={300}\n        height={48}\n        items={farmCategories}\n        isLarge={true}\n      />\n      <Box my={2}>\n        <FarmRewards bulkPairs={bulkPairs} farmIndex={farmIndex} />\n      </Box>\n      <Box className='farmsWrapper'>\n        <FarmsList bulkPairs={bulkPairs} farmIndex={farmIndex} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default FarmPage;\n"]},"metadata":{},"sourceType":"module"}