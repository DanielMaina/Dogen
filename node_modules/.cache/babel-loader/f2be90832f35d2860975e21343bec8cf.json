{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/SwapProFilter.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SwapProFilter = _ref => {\n  _s();\n\n  let {\n    infoPos,\n    setInfoPos,\n    showChart,\n    setShowChart,\n    showTrades,\n    setShowTrades\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n  const infoPosItems = swapPositions.map(pos => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"swapFilter\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"checkWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: showChart,\n        disabled: !showTrades,\n        onChange: evt => setShowChart(evt.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('chart')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"checkWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: showTrades,\n        disabled: !showChart,\n        onChange: evt => setShowTrades(evt.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('trades')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-uppercase\",\n        children: [t('info'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 1,\n        children: /*#__PURE__*/_jsxDEV(CustomSwitch, {\n          width: 190,\n          height: 30,\n          items: infoPosItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"replayButton\",\n      onClick: () => {\n        setInfoPos(t('right'));\n        setShowChart(true);\n        setShowTrades(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(Replay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwapProFilter, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SwapProFilter;\nexport default SwapProFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapProFilter\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/SwapPage/SwapProFilter.tsx"],"names":["React","Box","Checkbox","Replay","CustomSwitch","useTranslation","SwapProFilter","infoPos","setInfoPos","showChart","setShowChart","showTrades","setShowTrades","t","swapPositions","infoPosItems","map","pos","text","onClick","condition","evt","target","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Checkbox } from '@material-ui/core';\nimport { Replay } from '@material-ui/icons';\nimport { CustomSwitch } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface SwapProFilterProps {\n  infoPos: string;\n  setInfoPos: (pos: string) => void;\n  showChart: boolean;\n  setShowChart: (value: boolean) => void;\n  showTrades: boolean;\n  setShowTrades: (value: boolean) => void;\n}\n\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\n  infoPos,\n  setInfoPos,\n  showChart,\n  setShowChart,\n  showTrades,\n  setShowTrades,\n}) => {\n  const { t } = useTranslation();\n  const swapPositions = [t('left'), t('right'), t('none')];\n\n  const infoPosItems = swapPositions.map((pos) => {\n    return {\n      text: pos,\n      onClick: () => setInfoPos(pos),\n      condition: infoPos === pos,\n    };\n  });\n\n  return (\n    <Box className='swapFilter'>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showChart}\n          disabled={!showTrades}\n          onChange={(evt) => setShowChart(evt.target.checked)}\n        />\n        <small>{t('chart')}</small>\n      </Box>\n      <Box className='checkWrapper'>\n        <Checkbox\n          checked={showTrades}\n          disabled={!showChart}\n          onChange={(evt) => setShowTrades(evt.target.checked)}\n        />\n        <small>{t('trades')}</small>\n      </Box>\n      <Box className='flex items-center'>\n        <small className='text-uppercase'>{t('info')}:</small>\n        <Box ml={1}>\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\n        </Box>\n      </Box>\n      <Box\n        className='replayButton'\n        onClick={() => {\n          setInfoPos(t('right'));\n          setShowChart(true);\n          setShowTrades(true);\n        }}\n      >\n        <Replay />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwapProFilter;\n"]},"metadata":{},"sourceType":"module"}