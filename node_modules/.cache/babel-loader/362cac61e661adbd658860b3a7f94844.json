{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CommonBases.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { currencyEquals, ETHER, Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { GlobalData } from 'constants/index';\nimport { CurrencyLogo, QuestionHelper } from 'components';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommonBases = _ref => {\n  _s();\n\n  let {\n    chainId,\n    onSelect,\n    selectedCurrency\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: 2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      my: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: \"6px\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('commonBase')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n        text: t('commonBaseHelper')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"baseWrapper\",\n        onClick: () => {\n          if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n            onSelect(ETHER);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: ETHER,\n          size: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"wwDOGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), (chainId ? GlobalData.bases.SUGGESTED_BASES[chainId] : []).map(token => {\n        const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: \"baseWrapper\",\n          onClick: () => !selected && onSelect(token),\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: token,\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: token.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, token.address, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommonBases, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CommonBases;\nexport default CommonBases;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonBases\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CommonBases.tsx"],"names":["React","currencyEquals","ETHER","Token","Box","GlobalData","CurrencyLogo","QuestionHelper","useTranslation","CommonBases","chainId","onSelect","selectedCurrency","t","bases","SUGGESTED_BASES","map","token","selected","address","symbol"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA4BC,cAA5B,EAA4CC,KAA5C,EAAmDC,KAAnD,QAAgE,cAAhE;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,YAA7C;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAQA,MAAMC,WAAuC,GAAG,QAI1C;AAAA;;AAAA,MAJ2C;AAC/CC,IAAAA,OAD+C;AAE/CC,IAAAA,QAF+C;AAG/CC,IAAAA;AAH+C,GAI3C;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAE,GAAxB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA,+BACE;AAAA,oBAAOK,CAAC,CAAC,YAAD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,CAAC,CAAC,kBAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAI,CAACD,gBAAD,IAAqB,CAACX,cAAc,CAACW,gBAAD,EAAmBV,KAAnB,CAAxC,EAAmE;AACjES,YAAAA,QAAQ,CAACT,KAAD,CAAR;AACD;AACF,SANH;AAAA,gCAQE,QAAC,YAAD;AAAc,UAAA,QAAQ,EAAEA,KAAxB;AAA+B,UAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYG,CAACQ,OAAO,GAAGL,UAAU,CAACS,KAAX,CAAiBC,eAAjB,CAAiCL,OAAjC,CAAH,GAA+C,EAAvD,EAA2DM,GAA3D,CACEC,KAAD,IAAkB;AAChB,cAAMC,QAAQ,GACZN,gBAAgB,YAAYT,KAA5B,IACAS,gBAAgB,CAACO,OAAjB,KAA6BF,KAAK,CAACE,OAFrC;AAGA,4BACE,QAAC,GAAD;AACE,UAAA,SAAS,EAAC,aADZ;AAGE,UAAA,OAAO,EAAE,MAAM,CAACD,QAAD,IAAaP,QAAQ,CAACM,KAAD,CAHtC;AAAA,kCAKE,QAAC,YAAD;AAAc,YAAA,QAAQ,EAAEA,KAAxB;AAA+B,YAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAQA,KAAK,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAEOH,KAAK,CAACE,OAFb;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAfF,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA9CD;;GAAMV,W;UAKUD,c;;;KALVC,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport { GlobalData } from 'constants/index';\nimport { CurrencyLogo, QuestionHelper } from 'components';\nimport { useTranslation } from 'react-i18next';\n\ninterface CommonBasesProps {\n  chainId?: ChainId;\n  selectedCurrency?: Currency | null;\n  onSelect: (currency: Currency) => void;\n}\n\nconst CommonBases: React.FC<CommonBasesProps> = ({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Box mb={2}>\n      <Box display='flex' my={1.5}>\n        <Box mr='6px'>\n          <span>{t('commonBase')}</span>\n        </Box>\n        <QuestionHelper text={t('commonBaseHelper')} />\n      </Box>\n      <Box className='flex flex-wrap'>\n        <Box\n          className='baseWrapper'\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER);\n            }\n          }}\n        >\n          <CurrencyLogo currency={ETHER} size='24px' />\n          <small>wwDOGE</small>\n        </Box>\n        {(chainId ? GlobalData.bases.SUGGESTED_BASES[chainId] : []).map(\n          (token: Token) => {\n            const selected =\n              selectedCurrency instanceof Token &&\n              selectedCurrency.address === token.address;\n            return (\n              <Box\n                className='baseWrapper'\n                key={token.address}\n                onClick={() => !selected && onSelect(token)}\n              >\n                <CurrencyLogo currency={token} size='24px' />\n                <small>{token.symbol}</small>\n              </Box>\n            );\n          },\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default CommonBases;\n"]},"metadata":{},"sourceType":"module"}