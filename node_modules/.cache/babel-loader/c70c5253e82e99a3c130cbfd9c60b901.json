{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CurrencySearchModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { CustomModal } from 'components';\nimport useLast from 'hooks/useLast';\nimport CurrencySearch from './CurrencySearch';\nimport ListSelect from './ListSelect';\nimport 'components/styles/CurrencySearchModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencySearchModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onDismiss,\n    onCurrencySelect,\n    selectedCurrency,\n    otherSelectedCurrency,\n    showCommonBases = false\n  } = _ref;\n  const [listView, setListView] = useState(false);\n  const lastOpen = useLast(isOpen);\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false);\n    }\n  }, [isOpen, lastOpen]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]);\n  const handleClickChangeList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Change Lists'\n    });\n    setListView(true);\n  }, []);\n  const handleClickBack = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Back'\n    });\n    setListView(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CustomModal, {\n    open: isOpen,\n    onClose: onDismiss,\n    children: listView ? /*#__PURE__*/_jsxDEV(ListSelect, {\n      onDismiss: onDismiss,\n      onBack: handleClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CurrencySearch, {\n      isOpen: isOpen,\n      onDismiss: onDismiss,\n      onCurrencySelect: handleCurrencySelect,\n      onChangeList: handleClickChangeList,\n      selectedCurrency: selectedCurrency,\n      otherSelectedCurrency: otherSelectedCurrency,\n      showCommonBases: showCommonBases\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrencySearchModal, \"puaX9Hg+hJ4zGDH5QeAb5Elfq58=\", false, function () {\n  return [useLast];\n});\n\n_c = CurrencySearchModal;\nexport default CurrencySearchModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySearchModal\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useEffect","useState","ReactGA","CustomModal","useLast","CurrencySearch","ListSelect","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","listView","setListView","lastOpen","handleCurrencySelect","currency","handleClickChangeList","event","category","action","handleClickBack"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,4CAAP;;;AAWA,MAAMC,mBAAuD,GAAG,QAO1D;AAAA;;AAAA,MAP2D;AAC/DC,IAAAA,MAD+D;AAE/DC,IAAAA,SAF+D;AAG/DC,IAAAA,gBAH+D;AAI/DC,IAAAA,gBAJ+D;AAK/DC,IAAAA,qBAL+D;AAM/DC,IAAAA,eAAe,GAAG;AAN6C,GAO3D;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAMe,QAAQ,GAAGZ,OAAO,CAACI,MAAD,CAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,IAAI,CAACQ,QAAf,EAAyB;AACvBD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACP,MAAD,EAASQ,QAAT,CAJM,CAAT;AAMA,QAAMC,oBAAoB,GAAGlB,WAAW,CACrCmB,QAAD,IAAwB;AACtBR,IAAAA,gBAAgB,CAACQ,QAAD,CAAhB;AACAT,IAAAA,SAAS;AACV,GAJqC,EAKtC,CAACA,SAAD,EAAYC,gBAAZ,CALsC,CAAxC;AAQA,QAAMS,qBAAqB,GAAGpB,WAAW,CAAC,MAAM;AAC9CG,IAAAA,OAAO,CAACkB,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAd;AAIAP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GANwC,EAMtC,EANsC,CAAzC;AAOA,QAAMQ,eAAe,GAAGxB,WAAW,CAAC,MAAM;AACxCG,IAAAA,OAAO,CAACkB,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAd;AAIAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GANkC,EAMhC,EANgC,CAAnC;AAQA,sBACE,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEP,MAAnB;AAA2B,IAAA,OAAO,EAAEC,SAApC;AAAA,cACGK,QAAQ,gBACP,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEL,SAAvB;AAAkC,MAAA,MAAM,EAAEc;AAA1C;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,cAAD;AACE,MAAA,MAAM,EAAEf,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,gBAAgB,EAAEQ,oBAHpB;AAIE,MAAA,YAAY,EAAEE,qBAJhB;AAKE,MAAA,gBAAgB,EAAER,gBALpB;AAME,MAAA,qBAAqB,EAAEC,qBANzB;AAOE,MAAA,eAAe,EAAEC;AAPnB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzDD;;GAAMN,mB;UASaH,O;;;KATbG,mB;AA2DN,eAAeA,mBAAf","sourcesContent":["import { Currency } from '@uniswap/sdk';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { CustomModal } from 'components';\nimport useLast from 'hooks/useLast';\nimport CurrencySearch from './CurrencySearch';\nimport ListSelect from './ListSelect';\nimport 'components/styles/CurrencySearchModal.scss';\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean;\n  onDismiss: () => void;\n  selectedCurrency?: Currency | null;\n  onCurrencySelect: (currency: Currency) => void;\n  otherSelectedCurrency?: Currency | null;\n  showCommonBases?: boolean;\n}\n\nconst CurrencySearchModal: React.FC<CurrencySearchModalProps> = ({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}) => {\n  const [listView, setListView] = useState<boolean>(false);\n  const lastOpen = useLast(isOpen);\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false);\n    }\n  }, [isOpen, lastOpen]);\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency);\n      onDismiss();\n    },\n    [onDismiss, onCurrencySelect],\n  );\n\n  const handleClickChangeList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Change Lists',\n    });\n    setListView(true);\n  }, []);\n  const handleClickBack = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Back',\n    });\n    setListView(false);\n  }, []);\n\n  return (\n    <CustomModal open={isOpen} onClose={onDismiss}>\n      {listView ? (\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\n      ) : (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )}\n    </CustomModal>\n  );\n};\n\nexport default CurrencySearchModal;\n"]},"metadata":{},"sourceType":"module"}