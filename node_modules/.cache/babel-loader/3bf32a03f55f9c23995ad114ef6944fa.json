{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/Popups/PopupItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Box } from '@material-ui/core';\nimport { useRemovePopup } from 'state/application/hooks';\nimport TransactionPopup from './TransactionPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupItem = _ref => {\n  _s();\n\n  let {\n    removeAfterMs,\n    content,\n    popKey\n  } = _ref;\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined;\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n  let popupContent;\n\n  if ('txn' in content) {\n    const {\n      txn: {\n        hash,\n        pending,\n        success,\n        summary\n      }\n    } = content;\n    popupContent = /*#__PURE__*/_jsxDEV(TransactionPopup, {\n      hash: hash,\n      pending: pending,\n      success: success,\n      summary: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"popupItem\",\n    children: popupContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PopupItem, \"wLRhxk1EESGmbI/M5pDE8C1+Ug8=\", false, function () {\n  return [useRemovePopup];\n});\n\n_c = PopupItem;\nexport default PopupItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupItem\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/Popups/PopupItem.tsx"],"names":["React","useCallback","useEffect","Box","useRemovePopup","TransactionPopup","PopupItem","removeAfterMs","content","popKey","removePopup","removeThisPopup","undefined","timeout","setTimeout","clearTimeout","popupContent","txn","hash","pending","success","summary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,GAAT,QAAoB,mBAApB;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAQA,MAAMC,SAAmC,GAAG,QAItC;AAAA;;AAAA,MAJuC;AAC3CC,IAAAA,aAD2C;AAE3CC,IAAAA,OAF2C;AAG3CC,IAAAA;AAH2C,GAIvC;AACJ,QAAMC,WAAW,GAAGN,cAAc,EAAlC;AACA,QAAMO,eAAe,GAAGV,WAAW,CAAC,MAAMS,WAAW,CAACD,MAAD,CAAlB,EAA4B,CAC7DA,MAD6D,EAE7DC,WAF6D,CAA5B,CAAnC;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,aAAa,KAAK,IAAtB,EAA4B,OAAOK,SAAP;AAE5B,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BH,MAAAA,eAAe;AAChB,KAFyB,EAEvBJ,aAFuB,CAA1B;AAIA,WAAO,MAAM;AACXQ,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,aAAD,EAAgBI,eAAhB,CAVM,CAAT;AAYA,MAAIK,YAAJ;;AACA,MAAI,SAASR,OAAb,EAAsB;AACpB,UAAM;AACJS,MAAAA,GAAG,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA,OAAjB;AAA0BC,QAAAA;AAA1B;AADD,QAEFb,OAFJ;AAGAQ,IAAAA,YAAY,gBACV,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBAAO,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAA4BL;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtCD;;GAAMV,S;UAKgBF,c;;;KALhBE,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { Box } from '@material-ui/core';\nimport { PopupContent } from 'state/application/actions';\nimport { useRemovePopup } from 'state/application/hooks';\nimport TransactionPopup from './TransactionPopup';\n\ninterface PopupItemProps {\n  removeAfterMs: number | null;\n  content: PopupContent;\n  popKey: string;\n}\n\nconst PopupItem: React.FC<PopupItemProps> = ({\n  removeAfterMs,\n  content,\n  popKey,\n}) => {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [\n    popKey,\n    removePopup,\n  ]);\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined;\n\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n\n  let popupContent;\n  if ('txn' in content) {\n    const {\n      txn: { hash, pending, success, summary },\n    } = content;\n    popupContent = (\n      <TransactionPopup\n        hash={hash}\n        pending={pending}\n        success={success}\n        summary={summary}\n      />\n    );\n  }\n\n  return <Box className='popupItem'>{popupContent}</Box>;\n};\n\nexport default PopupItem;\n"]},"metadata":{},"sourceType":"module"}