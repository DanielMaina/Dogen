{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CurrencySearch.tsx\",\n    _s = $RefreshSig$();\n\nimport { ETHER } from '@uniswap/sdk';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { Box, Divider } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens, useToken } from 'hooks/Tokens';\nimport { useSelectedListInfo } from 'state/lists/hooks';\nimport { selectList } from 'state/lists/actions';\nimport { GlobalConst } from 'constants/index';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/CloseIcon.svg\";\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/SearchIcon.svg\";\nimport CommonBases from './CommonBases';\nimport CurrencyList from './CurrencyList';\nimport { isAddress } from 'utils';\nimport { filterTokens } from 'utils/filtering';\nimport { useTokenComparator } from 'utils/sorting';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencySearch = _ref => {\n  _s();\n\n  let {\n    selectedCurrency,\n    onCurrencySelect,\n    otherSelectedCurrency,\n    showCommonBases,\n    onDismiss,\n    isOpen\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  const fixedList = useRef();\n  const handleInput = useCallback(input => {\n    var _fixedList$current;\n\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    (_fixedList$current = fixedList.current) === null || _fixedList$current === void 0 ? void 0 : _fixedList$current.scrollTo(0);\n  }, []);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchQueryInput, setSearchQueryInput] = useDebouncedChangeHandler(searchQuery, handleInput);\n  const allTokens = useAllTokens(); // if they input an address, use it\n\n  const isAddressSearch = isAddress(searchQuery);\n  const searchToken = useToken(searchQuery);\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch\n      });\n    }\n  }, [isAddressSearch]);\n  const showETH = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim();\n    return s === '' || s === 'e' || s === 'et' || s === 'eth';\n  }, [searchQuery]);\n  const tokenComparator = useTokenComparator(false);\n  const filteredTokens = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : [];\n    return filterTokens(Object.values(allTokens), searchQuery);\n  }, [isAddressSearch, searchToken, allTokens, searchQuery]);\n  const filteredSortedTokens = useMemo(() => {\n    if (searchToken) return [searchToken];\n    const sorted = filteredTokens.sort(tokenComparator);\n    const symbolMatch = searchQuery.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n    if (symbolMatch.length > 1) return sorted;\n    return [...(searchToken ? [searchToken] : []), // sort any exact symbol matches first\n    ...sorted.filter(token => {\n      var _token$symbol;\n\n      return ((_token$symbol = token.symbol) === null || _token$symbol === void 0 ? void 0 : _token$symbol.toLowerCase()) === symbolMatch[0];\n    }), ...sorted.filter(token => {\n      var _token$symbol2;\n\n      return ((_token$symbol2 = token.symbol) === null || _token$symbol2 === void 0 ? void 0 : _token$symbol2.toLowerCase()) !== symbolMatch[0];\n    })];\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // clear the input on open\n\n  useEffect(() => {\n    if (isOpen) setSearchQuery('');\n  }, [isOpen]);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter') {\n      const s = searchQuery.toLowerCase().trim();\n\n      if (s === 'eth') {\n        handleCurrencySelect(ETHER);\n      } else if (filteredSortedTokens.length > 0) {\n        var _filteredSortedTokens;\n\n        if (((_filteredSortedTokens = filteredSortedTokens[0].symbol) === null || _filteredSortedTokens === void 0 ? void 0 : _filteredSortedTokens.toLowerCase()) === searchQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n          handleCurrencySelect(filteredSortedTokens[0]);\n        }\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, searchQuery]); // manage focus on modal show\n\n  const inputRef = useRef();\n  let selectedListInfo = useSelectedListInfo();\n\n  if (selectedListInfo.current === null) {\n    dispatch(selectList(GlobalConst.utils.DEFAULT_TOKEN_LIST_URL));\n  }\n\n  selectedListInfo = useSelectedListInfo();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"currencySearchWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"currencySearchHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: t('selectToken')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"searchInputWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: t('tokenSearchPlaceholder'),\n        value: searchQueryInput,\n        ref: inputRef,\n        onChange: e => setSearchQueryInput(e.target.value),\n        onKeyDown: handleEnter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), showCommonBases && /*#__PURE__*/_jsxDEV(CommonBases, {\n      chainId: chainId,\n      onSelect: handleCurrencySelect,\n      selectedCurrency: selectedCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: 1,\n      children: /*#__PURE__*/_jsxDEV(AutoSizer, {\n        disableWidth: true,\n        children: _ref2 => {\n          let {\n            height\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(CurrencyList, {\n            showETH: showETH,\n            height: height,\n            currencies: filteredSortedTokens,\n            onCurrencySelect: handleCurrencySelect,\n            otherCurrency: otherSelectedCurrency,\n            selectedCurrency: selectedCurrency,\n            fixedListRef: fixedList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"currencySearchFooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrencySearch, \"P45JehxWmNxK4rGvHOOikIusjDE=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useDispatch, useDebouncedChangeHandler, useAllTokens, useToken, useTokenComparator, useSelectedListInfo, useSelectedListInfo];\n});\n\n_c = CurrencySearch;\nexport default CurrencySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySearch\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CurrencySearch.tsx"],"names":["ETHER","React","useCallback","useEffect","useMemo","useRef","useState","ReactGA","Box","Divider","useTranslation","useDispatch","useActiveWeb3React","useAllTokens","useToken","useSelectedListInfo","selectList","GlobalConst","AutoSizer","CommonBases","CurrencyList","isAddress","filterTokens","useTokenComparator","useDebouncedChangeHandler","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","onDismiss","isOpen","t","chainId","dispatch","fixedList","handleInput","input","checksummedInput","setSearchQuery","current","scrollTo","searchQuery","searchQueryInput","setSearchQueryInput","allTokens","isAddressSearch","searchToken","event","category","action","label","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","split","filter","length","token","symbol","handleCurrencySelect","currency","handleEnter","e","key","inputRef","selectedListInfo","utils","DEFAULT_TOKEN_LIST_URL","target","value","height"],"mappings":"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","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk';\nimport React, {\n  KeyboardEvent,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport ReactGA from 'react-ga';\nimport { Box, Divider } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { FixedSizeList } from 'react-window';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens, useToken } from 'hooks/Tokens';\nimport { useSelectedListInfo } from 'state/lists/hooks';\nimport { selectList } from 'state/lists/actions';\nimport { GlobalConst } from 'constants/index';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ReactComponent as CloseIcon } from 'assets/images/CloseIcon.svg';\nimport { ReactComponent as SearchIcon } from 'assets/images/SearchIcon.svg';\nimport CommonBases from './CommonBases';\nimport CurrencyList from './CurrencyList';\nimport { AppDispatch } from 'state';\nimport { isAddress } from 'utils';\nimport { filterTokens } from 'utils/filtering';\nimport { useTokenComparator } from 'utils/sorting';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\n\ninterface CurrencySearchProps {\n  isOpen: boolean;\n  onDismiss: () => void;\n  selectedCurrency?: Currency | null;\n  onCurrencySelect: (currency: Currency) => void;\n  otherSelectedCurrency?: Currency | null;\n  showCommonBases?: boolean;\n  onChangeList: () => void;\n}\n\nconst CurrencySearch: React.FC<CurrencySearchProps> = ({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n}) => {\n  const { t } = useTranslation();\n  const { chainId } = useActiveWeb3React();\n  const dispatch = useDispatch<AppDispatch>();\n  const fixedList = useRef<FixedSizeList>();\n\n  const handleInput = useCallback((input: string) => {\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    fixedList.current?.scrollTo(0);\n  }, []);\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [searchQueryInput, setSearchQueryInput] = useDebouncedChangeHandler(\n    searchQuery,\n    handleInput,\n  );\n\n  const allTokens = useAllTokens();\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery);\n  const searchToken = useToken(searchQuery);\n\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch,\n      });\n    }\n  }, [isAddressSearch]);\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim();\n    return s === '' || s === 'e' || s === 'et' || s === 'eth';\n  }, [searchQuery]);\n\n  const tokenComparator = useTokenComparator(false);\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : [];\n    return filterTokens(Object.values(allTokens), searchQuery);\n  }, [isAddressSearch, searchToken, allTokens, searchQuery]);\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken];\n    const sorted = filteredTokens.sort(tokenComparator);\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0);\n    if (symbolMatch.length > 1) return sorted;\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(\n        (token) => token.symbol?.toLowerCase() === symbolMatch[0],\n      ),\n      ...sorted.filter(\n        (token) => token.symbol?.toLowerCase() !== symbolMatch[0],\n      ),\n    ];\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator]);\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency);\n      onDismiss();\n    },\n    [onDismiss, onCurrencySelect],\n  );\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('');\n  }, [isOpen]);\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim();\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER);\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() ===\n              searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0]);\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery],\n  );\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>();\n\n  let selectedListInfo = useSelectedListInfo();\n\n  if (selectedListInfo.current === null) {\n    dispatch(selectList(GlobalConst.utils.DEFAULT_TOKEN_LIST_URL));\n  }\n  selectedListInfo = useSelectedListInfo();\n\n  return (\n    <Box className='currencySearchWrapper'>\n      <Box className='currencySearchHeader'>\n        <h6>{t('selectToken')}</h6>\n        <CloseIcon onClick={onDismiss} />\n      </Box>\n      <Box className='searchInputWrapper'>\n        <SearchIcon />\n        <input\n          type='text'\n          placeholder={t('tokenSearchPlaceholder')}\n          value={searchQueryInput}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={(e) => setSearchQueryInput(e.target.value)}\n          onKeyDown={handleEnter}\n        />\n      </Box>\n      {showCommonBases && (\n        <CommonBases\n          chainId={chainId}\n          onSelect={handleCurrencySelect}\n          selectedCurrency={selectedCurrency}\n        />\n      )}\n\n      <Divider />\n\n      <Box flex={1}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              showETH={showETH}\n              height={height}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </Box>\n\n      <Box className='currencySearchFooter' />\n    </Box>\n  );\n};\n\nexport default CurrencySearch;\n"]},"metadata":{},"sourceType":"module"}