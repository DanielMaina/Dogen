{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/AnalyticsTokenDetails/AnalyticsTokenDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { Box, Grid } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { shortenAddress, getEtherscanLink, getFormattedPrice, getPriceClass, formatNumber, getTokenInfo, getTokenPairs2, getBulkPairData } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { CurrencyLogo, PairTable } from 'components';\nimport { useBookmarkTokens, useEthPrice } from 'state/application/hooks';\nimport { ReactComponent as StarChecked } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/StarChecked.svg\";\nimport { ReactComponent as StarUnchecked } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/StarUnchecked.svg\";\nimport { getAddress } from '@ethersproject/address';\nimport { GlobalConst } from 'constants/index';\nimport AnalyticsHeader from 'pages/AnalyticsPage/AnalyticsHeader';\nimport AnalyticsTokenChart from './AnalyticsTokenChart';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnalyticsTokenDetails = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const tokenAddress = match.params.id;\n  const [token, setToken] = useState(null);\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const currency = token ? new Token(ChainId.MAINNET, getAddress(token.id), token.decimals) : undefined;\n  const [tokenPairs, updateTokenPairs] = useState(null);\n  const {\n    bookmarkTokens,\n    addBookmarkToken,\n    removeBookmarkToken\n  } = useBookmarkTokens();\n  const {\n    ethPrice\n  } = useEthPrice();\n  useEffect(() => {\n    async function fetchTokenInfo() {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        const tokenInfo = await getTokenInfo(ethPrice.price, ethPrice.oneDayPrice, tokenAddress);\n\n        if (tokenInfo) {\n          setToken(tokenInfo[0]);\n        }\n\n        const tokenPairs = await getTokenPairs2(tokenAddress);\n        const formattedPairs = tokenPairs ? tokenPairs.map(pair => {\n          return pair.id;\n        }) : [];\n        const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n\n        if (pairData) {\n          updateTokenPairs(pairData);\n        }\n      }\n    }\n\n    fetchTokenInfo();\n  }, [tokenAddress, ethPrice.price, ethPrice.oneDayPrice]);\n  useEffect(() => {\n    setToken(null);\n    updateTokenPairs(null);\n  }, [tokenAddress]);\n  const tokenPercentClass = getPriceClass(token ? Number(token.priceChangeUSD) : 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AnalyticsHeader, {\n      type: \"token\",\n      data: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        className: \"flex flex-wrap justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currency,\n            size: \"32px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 1.5,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: \"flex items-end\",\n                mr: 0.5,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"heading1\",\n                  children: [token.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"heading2\",\n                  children: [\"(\", token.symbol, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), bookmarkTokens.includes(token.id) ? /*#__PURE__*/_jsxDEV(StarChecked, {\n                onClick: () => removeBookmarkToken(token.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(StarUnchecked, {\n                onClick: () => addBookmarkToken(token.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 1.25,\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"$\", formatNumber(token.priceUSD)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: `priceChangeWrapper ${tokenPercentClass}`,\n                ml: 2,\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [getFormattedPrice(Number(token.priceChangeUSD)), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 2,\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"button border-primary\",\n            mr: 1.5,\n            onClick: () => {\n              history.push(`/pools?currency0=${token.id}&currency1=ETH`);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: t('addLiquidity')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"button filledButton\",\n            onClick: () => {\n              history.push(`/swap?currency0=${token.id}&currency1=ETH`);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: t('swap')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        className: \"panel\",\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(AnalyticsTokenChart, {\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"analyticsDetailsInfo\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-disabled\",\n                    children: t('totalLiquidity')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [\"$\", formatNumber(token.totalLiquidityUSD)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-disabled\",\n                    children: t('7dTradingVol')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [\"$\", formatNumber(token.oneWeekVolumeUSD)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-disabled\",\n                    children: t('24hTradingVol1')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [\"$\", formatNumber(token.oneDayVolumeUSD)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-disabled\",\n                    children: t('24hFees')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [\"$\", formatNumber(token.oneDayVolumeUSD * GlobalConst.utils.FEEPERCENT)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-disabled\",\n                    children: t('contractAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"text-primary\",\n                    children: chainId ? /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: getEtherscanLink(chainId, token.id, 'address'),\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      className: \"text-primary no-decoration\",\n                      children: shortenAddress(token.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this) : shortenAddress(token.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [token.symbol, \" \", t('pools')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        className: \"panel\",\n        mt: 4,\n        children: tokenPairs ? /*#__PURE__*/_jsxDEV(PairTable, {\n          data: tokenPairs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rect\",\n          width: \"100%\",\n          height: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"100%\",\n      height: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AnalyticsTokenDetails, \"dHVTyNHy81Jt61igxc4Ra+OfDRg=\", false, function () {\n  return [useTranslation, useHistory, useRouteMatch, useActiveWeb3React, useBookmarkTokens, useEthPrice];\n});\n\n_c = AnalyticsTokenDetails;\nexport default AnalyticsTokenDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalyticsTokenDetails\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/AnalyticsTokenDetails/AnalyticsTokenDetails.tsx"],"names":["React","useState","useEffect","useHistory","useRouteMatch","Box","Grid","Skeleton","ChainId","Token","shortenAddress","getEtherscanLink","getFormattedPrice","getPriceClass","formatNumber","getTokenInfo","getTokenPairs2","getBulkPairData","useActiveWeb3React","CurrencyLogo","PairTable","useBookmarkTokens","useEthPrice","getAddress","GlobalConst","AnalyticsHeader","AnalyticsTokenChart","useTranslation","AnalyticsTokenDetails","t","history","match","tokenAddress","params","id","token","setToken","chainId","currency","MAINNET","decimals","undefined","tokenPairs","updateTokenPairs","bookmarkTokens","addBookmarkToken","removeBookmarkToken","ethPrice","fetchTokenInfo","price","oneDayPrice","tokenInfo","formattedPairs","map","pair","pairData","tokenPercentClass","Number","priceChangeUSD","name","symbol","includes","priceUSD","push","totalLiquidityUSD","oneWeekVolumeUSD","oneDayVolumeUSD","utils","FEEPERCENT"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { Box, Grid } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport {\n  shortenAddress,\n  getEtherscanLink,\n  getFormattedPrice,\n  getPriceClass,\n  formatNumber,\n  getTokenInfo,\n  getTokenPairs2,\n  getBulkPairData,\n} from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport { CurrencyLogo, PairTable } from 'components';\nimport { useBookmarkTokens, useEthPrice } from 'state/application/hooks';\nimport { ReactComponent as StarChecked } from 'assets/images/StarChecked.svg';\nimport { ReactComponent as StarUnchecked } from 'assets/images/StarUnchecked.svg';\nimport { getAddress } from '@ethersproject/address';\nimport { GlobalConst } from 'constants/index';\nimport AnalyticsHeader from 'pages/AnalyticsPage/AnalyticsHeader';\nimport AnalyticsTokenChart from './AnalyticsTokenChart';\nimport { useTranslation } from 'react-i18next';\n\nconst AnalyticsTokenDetails: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const match = useRouteMatch<{ id: string }>();\n  const tokenAddress = match.params.id;\n  const [token, setToken] = useState<any>(null);\n  const { chainId } = useActiveWeb3React();\n  const currency = token\n    ? new Token(ChainId.MAINNET, getAddress(token.id), token.decimals)\n    : undefined;\n  const [tokenPairs, updateTokenPairs] = useState<any>(null);\n  const {\n    bookmarkTokens,\n    addBookmarkToken,\n    removeBookmarkToken,\n  } = useBookmarkTokens();\n  const { ethPrice } = useEthPrice();\n\n  useEffect(() => {\n    async function fetchTokenInfo() {\n      if (ethPrice.price && ethPrice.oneDayPrice) {\n        const tokenInfo = await getTokenInfo(\n          ethPrice.price,\n          ethPrice.oneDayPrice,\n          tokenAddress,\n        );\n        if (tokenInfo) {\n          setToken(tokenInfo[0]);\n        }\n        const tokenPairs = await getTokenPairs2(tokenAddress);\n        const formattedPairs = tokenPairs\n          ? tokenPairs.map((pair: any) => {\n              return pair.id;\n            })\n          : [];\n        const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\n        if (pairData) {\n          updateTokenPairs(pairData);\n        }\n      }\n    }\n    fetchTokenInfo();\n  }, [tokenAddress, ethPrice.price, ethPrice.oneDayPrice]);\n\n  useEffect(() => {\n    setToken(null);\n    updateTokenPairs(null);\n  }, [tokenAddress]);\n\n  const tokenPercentClass = getPriceClass(\n    token ? Number(token.priceChangeUSD) : 0,\n  );\n\n  return (\n    <>\n      <AnalyticsHeader type='token' data={token} />\n      {token ? (\n        <>\n          <Box width={1} className='flex flex-wrap justify-between'>\n            <Box display='flex'>\n              <CurrencyLogo currency={currency} size='32px' />\n              <Box ml={1.5}>\n                <Box className='flex items-center'>\n                  <Box className='flex items-end' mr={0.5}>\n                    <p className='heading1'>{token.name} </p>\n                    <p className='heading2'>({token.symbol})</p>\n                  </Box>\n                  {bookmarkTokens.includes(token.id) ? (\n                    <StarChecked\n                      onClick={() => removeBookmarkToken(token.id)}\n                    />\n                  ) : (\n                    <StarUnchecked onClick={() => addBookmarkToken(token.id)} />\n                  )}\n                </Box>\n                <Box mt={1.25} className='flex items-center'>\n                  <h5>${formatNumber(token.priceUSD)}</h5>\n                  <Box\n                    className={`priceChangeWrapper ${tokenPercentClass}`}\n                    ml={2}\n                  >\n                    <small>\n                      {getFormattedPrice(Number(token.priceChangeUSD))}%\n                    </small>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n            <Box my={2} display='flex'>\n              <Box\n                className='button border-primary'\n                mr={1.5}\n                onClick={() => {\n                  history.push(`/pools?currency0=${token.id}&currency1=ETH`);\n                }}\n              >\n                <small>{t('addLiquidity')}</small>\n              </Box>\n              <Box\n                className='button filledButton'\n                onClick={() => {\n                  history.push(`/swap?currency0=${token.id}&currency1=ETH`);\n                }}\n              >\n                <small>{t('swap')}</small>\n              </Box>\n            </Box>\n          </Box>\n          <Box width={1} className='panel' mt={4}>\n            <Grid container>\n              <Grid item xs={12} sm={12} md={6}>\n                <AnalyticsTokenChart token={token} />\n              </Grid>\n              <Grid item xs={12} sm={12} md={6}>\n                <Box className='analyticsDetailsInfo'>\n                  <Box>\n                    <Box>\n                      <span className='text-disabled'>\n                        {t('totalLiquidity')}\n                      </span>\n                      <h5>${formatNumber(token.totalLiquidityUSD)}</h5>\n                    </Box>\n                    <Box textAlign='right'>\n                      <span className='text-disabled'>{t('7dTradingVol')}</span>\n                      <h5>${formatNumber(token.oneWeekVolumeUSD)}</h5>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <span className='text-disabled'>\n                        {t('24hTradingVol1')}\n                      </span>\n                      <h5>${formatNumber(token.oneDayVolumeUSD)}</h5>\n                    </Box>\n                    <Box textAlign='right'>\n                      <span className='text-disabled'>{t('24hFees')}</span>\n                      <h5>\n                        $\n                        {formatNumber(\n                          token.oneDayVolumeUSD * GlobalConst.utils.FEEPERCENT,\n                        )}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <span className='text-disabled'>\n                        {t('contractAddress')}\n                      </span>\n                      <h5 className='text-primary'>\n                        {chainId ? (\n                          <a\n                            href={getEtherscanLink(\n                              chainId,\n                              token.id,\n                              'address',\n                            )}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            className='text-primary no-decoration'\n                          >\n                            {shortenAddress(token.id)}\n                          </a>\n                        ) : (\n                          shortenAddress(token.id)\n                        )}\n                      </h5>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box width={1} mt={5}>\n            <p>\n              {token.symbol} {t('pools')}\n            </p>\n          </Box>\n          <Box width={1} className='panel' mt={4}>\n            {tokenPairs ? (\n              <PairTable data={tokenPairs} />\n            ) : (\n              <Skeleton variant='rect' width='100%' height={150} />\n            )}\n          </Box>\n        </>\n      ) : (\n        <Skeleton width='100%' height={100} />\n      )}\n    </>\n  );\n};\n\nexport default AnalyticsTokenDetails;\n"]},"metadata":{},"sourceType":"module"}