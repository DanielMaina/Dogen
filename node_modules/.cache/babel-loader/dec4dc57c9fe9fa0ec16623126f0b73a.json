{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/PoolsPage/YourLiquidityPools.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NoLiquidity from 'assets/images/NoLiquidityPool.png';\nimport { PoolFinderModal, PoolPositionCard } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairs } from 'data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks';\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst YourLiquidityPools = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useActiveWeb3React();\n  const [openPoolFinder, setOpenPoolFinder] = useState(false);\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(_ref => {\n    var _v2PairsBalances$liqu;\n\n    let {\n      liquidityToken\n    } = _ref;\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(_ref2 => {\n    let {\n      tokens\n    } = _ref2;\n    return tokens;\n  }));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(_ref3 => {\n    let [, pair] = _ref3;\n    return pair;\n  }).filter(v2Pair => Boolean(v2Pair));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openPoolFinder && /*#__PURE__*/_jsxDEV(PoolFinderModal, {\n      open: openPoolFinder,\n      onClose: () => setOpenPoolFinder(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"weight-600\",\n      children: t('yourliquidityPools')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      children: v2IsLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"100%\",\n          height: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : allV2PairsWithLiquidity.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"liquidityText\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            i18nKey: \"poolMissingComment\",\n            components: {\n              pspan: /*#__PURE__*/_jsxDEV(\"small\", {\n                onClick: () => setOpenPoolFinder(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 26\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), allV2PairsWithLiquidity.map((pair, ind) => /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(PoolPositionCard, {\n            pair: pair\n          }, pair.liquidityToken.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: NoLiquidity,\n          alt: \"No Liquidity\",\n          className: \"noLiquidityImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small liquidityText\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            i18nKey: \"poolMissingComment\",\n            components: {\n              pspan: /*#__PURE__*/_jsxDEV(\"small\", {\n                onClick: () => setOpenPoolFinder(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 26\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(YourLiquidityPools, \"nVI07021nVBqAimWjyMaM5aEE5M=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, usePairs];\n});\n\n_c = YourLiquidityPools;\nexport default YourLiquidityPools;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourLiquidityPools\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/PoolsPage/YourLiquidityPools.tsx"],"names":["React","useMemo","useState","Box","Skeleton","NoLiquidity","PoolFinderModal","PoolPositionCard","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","useTokenBalancesWithLoadingIndicator","Trans","useTranslation","YourLiquidityPools","t","account","openPoolFinder","setOpenPoolFinder","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","pspan","ind"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { Pair } from '@uniswap/sdk';\nimport { Box } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NoLiquidity from 'assets/images/NoLiquidityPool.png';\nimport { PoolFinderModal, PoolPositionCard } from 'components';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairs } from 'data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks';\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks';\nimport { Trans, useTranslation } from 'react-i18next';\n\nconst YourLiquidityPools: React.FC = () => {\n  const { t } = useTranslation();\n  const { account } = useActiveWeb3React();\n  const [openPoolFinder, setOpenPoolFinder] = useState(false);\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () =>\n      trackedTokenPairs.map((tokens) => ({\n        liquidityToken: toV2LiquidityToken(tokens),\n        tokens,\n      })),\n    [trackedTokenPairs],\n  );\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens],\n  );\n  const [\n    v2PairsBalances,\n    fetchingV2PairBalances,\n  ] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens,\n  );\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\n  );\n\n  const v2Pairs = usePairs(\n    liquidityTokensWithBalances.map(({ tokens }) => tokens),\n  );\n  const v2IsLoading =\n    fetchingV2PairBalances ||\n    v2Pairs?.length < liquidityTokensWithBalances.length ||\n    v2Pairs?.some((V2Pair) => !V2Pair);\n\n  const allV2PairsWithLiquidity = v2Pairs\n    .map(([, pair]) => pair)\n    .filter((v2Pair): v2Pair is Pair => Boolean(v2Pair));\n\n  return (\n    <>\n      {openPoolFinder && (\n        <PoolFinderModal\n          open={openPoolFinder}\n          onClose={() => setOpenPoolFinder(false)}\n        />\n      )}\n      <p className='weight-600'>{t('yourliquidityPools')}</p>\n      <Box mt={3}>\n        {v2IsLoading ? (\n          <Box width={1}>\n            <Skeleton width='100%' height={50} />\n          </Box>\n        ) : allV2PairsWithLiquidity.length > 0 ? (\n          <Box>\n            <small className='liquidityText'>\n              <Trans\n                i18nKey='poolMissingComment'\n                components={{\n                  pspan: <small onClick={() => setOpenPoolFinder(true)} />,\n                }}\n              />\n            </small>\n            {allV2PairsWithLiquidity.map((pair, ind) => (\n              <Box key={ind} mt={2}>\n                <PoolPositionCard\n                  key={pair.liquidityToken.address}\n                  pair={pair}\n                />\n              </Box>\n            ))}\n          </Box>\n        ) : (\n          <Box textAlign='center'>\n            <img\n              src={NoLiquidity}\n              alt='No Liquidity'\n              className='noLiquidityImage'\n            />\n            <p className='small liquidityText'>\n              <Trans\n                i18nKey='poolMissingComment'\n                components={{\n                  pspan: <small onClick={() => setOpenPoolFinder(true)} />,\n                }}\n              />\n            </p>\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default YourLiquidityPools;\n"]},"metadata":{},"sourceType":"module"}