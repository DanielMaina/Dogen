{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/PoolPositionCard/PoolPositionCardDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Button } from '@material-ui/core';\nimport { JSBI, Percent } from '@uniswap/sdk';\nimport { useActiveWeb3React } from 'hooks';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { useTotalSupply } from 'data/TotalSupply';\nimport { CurrencyLogo, RemoveLiquidityModal } from 'components';\nimport { currencyId, formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoolPositionCardDetails = _ref => {\n  _s();\n\n  let {\n    pair\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory();\n  const {\n    account\n  } = useActiveWeb3React();\n  const [openRemoveModal, setOpenRemoveModal] = useState(false);\n  const currency0 = unwrappedToken(pair.token0);\n  const currency1 = unwrappedToken(pair.token1);\n  const userPoolBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair.liquidityToken);\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken);\n  const poolTokenPercentage = !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw) ? new Percent(userPoolBalance.raw, totalPoolTokens.raw) : undefined;\n  const [token0Deposited, token1Deposited] = !!pair && !!totalPoolTokens && !!userPoolBalance && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw) ? [pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false), pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false)] : [undefined, undefined];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"poolPositionCardDetails\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"cardRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [t('yourPoolTokens'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: formatTokenAmount(userPoolBalance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"cardRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [t('pooled'), \" \", currency0.symbol, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: formatTokenAmount(token0Deposited)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            size: \"20px\",\n            currency: currency0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"cardRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [t('pooled'), \" \", currency1.symbol, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: formatTokenAmount(token1Deposited)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            size: \"20px\",\n            currency: currency1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"cardRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [t('yourPoolShare'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: poolTokenPercentage ? poolTokenPercentage.toSignificant() + '%' : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"poolButtonRow\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => history.push(`/analytics/pair/${pair.liquidityToken.address}`),\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: t('viewAnalytics')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            history.push(`/pools?currency0=${currencyId(currency0)}&currency1=${currencyId(currency1)}`);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: t('add')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            setOpenRemoveModal(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: t('remove')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), openRemoveModal && /*#__PURE__*/_jsxDEV(RemoveLiquidityModal, {\n      currency0: currency0,\n      currency1: currency1,\n      open: openRemoveModal,\n      onClose: () => setOpenRemoveModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PoolPositionCardDetails, \"lb+4MdsH0Bgc+Hf+92Zih8Hk+fs=\", false, function () {\n  return [useTranslation, useHistory, useActiveWeb3React, useTokenBalance, useTotalSupply];\n});\n\n_c = PoolPositionCardDetails;\nexport default PoolPositionCardDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolPositionCardDetails\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/PoolPositionCard/PoolPositionCardDetails.tsx"],"names":["React","useState","useHistory","Box","Button","JSBI","Percent","useActiveWeb3React","unwrappedToken","useTokenBalance","useTotalSupply","CurrencyLogo","RemoveLiquidityModal","currencyId","formatTokenAmount","useTranslation","PoolPositionCardDetails","pair","t","history","account","openRemoveModal","setOpenRemoveModal","currency0","token0","currency1","token1","userPoolBalance","undefined","liquidityToken","totalPoolTokens","poolTokenPercentage","greaterThanOrEqual","raw","token0Deposited","token1Deposited","getLiquidityValue","symbol","toSignificant","push","address"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Button } from '@material-ui/core';\nimport { Pair, JSBI, Percent } from '@uniswap/sdk';\nimport { useActiveWeb3React } from 'hooks';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { useTotalSupply } from 'data/TotalSupply';\nimport { CurrencyLogo, RemoveLiquidityModal } from 'components';\nimport { currencyId, formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\n\nconst PoolPositionCardDetails: React.FC<{ pair: Pair }> = ({ pair }) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const { account } = useActiveWeb3React();\n  const [openRemoveModal, setOpenRemoveModal] = useState(false);\n\n  const currency0 = unwrappedToken(pair.token0);\n  const currency1 = unwrappedToken(pair.token1);\n\n  const userPoolBalance = useTokenBalance(\n    account ?? undefined,\n    pair.liquidityToken,\n  );\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken);\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined;\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(\n            pair.token0,\n            totalPoolTokens,\n            userPoolBalance,\n            false,\n          ),\n          pair.getLiquidityValue(\n            pair.token1,\n            totalPoolTokens,\n            userPoolBalance,\n            false,\n          ),\n        ]\n      : [undefined, undefined];\n\n  return (\n    <>\n      <Box className='poolPositionCardDetails'>\n        <Box className='cardRow'>\n          <small>{t('yourPoolTokens')}:</small>\n          <small>{formatTokenAmount(userPoolBalance)}</small>\n        </Box>\n        <Box className='cardRow'>\n          <small>\n            {t('pooled')} {currency0.symbol}:\n          </small>\n          <Box>\n            <small>{formatTokenAmount(token0Deposited)}</small>\n            <CurrencyLogo size='20px' currency={currency0} />\n          </Box>\n        </Box>\n\n        <Box className='cardRow'>\n          <small>\n            {t('pooled')} {currency1.symbol}:\n          </small>\n          <Box>\n            <small>{formatTokenAmount(token1Deposited)}</small>\n            <CurrencyLogo size='20px' currency={currency1} />\n          </Box>\n        </Box>\n\n        <Box className='cardRow'>\n          <small>{t('yourPoolShare')}:</small>\n          <small>\n            {poolTokenPercentage\n              ? poolTokenPercentage.toSignificant() + '%'\n              : '-'}\n          </small>\n        </Box>\n\n        <Box className='poolButtonRow'>\n          <Button\n            variant='outlined'\n            onClick={() =>\n              history.push(`/analytics/pair/${pair.liquidityToken.address}`)\n            }\n          >\n            <small>{t('viewAnalytics')}</small>\n          </Button>\n          <Button\n            variant='contained'\n            onClick={() => {\n              history.push(\n                `/pools?currency0=${currencyId(\n                  currency0,\n                )}&currency1=${currencyId(currency1)}`,\n              );\n            }}\n          >\n            <small>{t('add')}</small>\n          </Button>\n          <Button\n            variant='contained'\n            onClick={() => {\n              setOpenRemoveModal(true);\n            }}\n          >\n            <small>{t('remove')}</small>\n          </Button>\n        </Box>\n      </Box>\n      {openRemoveModal && (\n        <RemoveLiquidityModal\n          currency0={currency0}\n          currency1={currency1}\n          open={openRemoveModal}\n          onClose={() => setOpenRemoveModal(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PoolPositionCardDetails;\n"]},"metadata":{},"sourceType":"module"}