{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/UnstakeQuickModal/UnstakeQuickModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { CustomModal, ColoredSlider, NumericalInput } from 'components';\nimport { useOldLairInfo, useNewLairInfo } from 'state/stake/hooks';\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/CloseIcon.svg\";\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useLairContract, useNewLairContract } from 'hooks/useContract';\nimport Web3 from 'web3';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3();\n\nconst UnstakeQuickModal = _ref => {\n  _s();\n\n  let {\n    open,\n    onClose,\n    isNew\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [attempting, setAttempting] = useState(false);\n  const addTransaction = useTransactionAdder();\n  const lairInfo = useOldLairInfo();\n  const newLairInfo = useNewLairInfo();\n  const laifInfoToUse = isNew ? newLairInfo : lairInfo;\n  const dQuickBalance = laifInfoToUse.dQUICKBalance;\n  const [typedValue, setTypedValue] = useState('');\n  const [stakePercent, setStakePercent] = useState(0);\n  const lairContract = useLairContract();\n  const newLairContract = useNewLairContract();\n  const lairContractToUse = isNew ? newLairContract : lairContract;\n  const error = Number(typedValue) > Number(dQuickBalance.toExact()) || !typedValue;\n\n  const onWithdraw = () => {\n    if (lairContractToUse && laifInfoToUse !== null && laifInfoToUse !== void 0 && laifInfoToUse.dQUICKBalance) {\n      setAttempting(true);\n      const balance = web3.utils.toWei(typedValue, 'ether');\n      lairContractToUse.leave(balance.toString(), {\n        gasLimit: 300000\n      }).then(async response => {\n        addTransaction(response, {\n          summary: `${t('unstake')} dQUICK`\n        });\n        await response.wait();\n        setAttempting(false);\n      }).catch(error => {\n        setAttempting(false);\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomModal, {\n    open: open,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      paddingX: 3,\n      paddingY: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [t('unstake'), \" dQUICK\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"cursor-pointer\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        className: \"bg-default border-gray14\",\n        borderRadius: \"10px\",\n        padding: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"dQUICK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [t('balance'), \": \", formatTokenAmount(dQuickBalance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(NumericalInput, {\n            placeholder: \"0\",\n            value: typedValue,\n            fontSize: 28,\n            onUserInput: value => {\n              const totalBalance = dQuickBalance ? Number(dQuickBalance.toExact()) : 0;\n              setTypedValue(value);\n              setStakePercent(totalBalance > 0 ? Number(value) / totalBalance * 100 : 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-primary text-bold cursor-pointer\",\n            onClick: () => {\n              setTypedValue(dQuickBalance ? dQuickBalance.toExact() : '0');\n              setStakePercent(100);\n            },\n            children: t('max')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            flex: 1,\n            mr: 2,\n            mt: 0.5,\n            children: /*#__PURE__*/_jsxDEV(ColoredSlider, {\n              min: 1,\n              max: 100,\n              step: 1,\n              value: stakePercent,\n              handleChange: (evt, value) => {\n                setStakePercent(value);\n                setTypedValue(dQuickBalance ? stakePercent < 100 ? (Number(dQuickBalance.toExact()) * stakePercent / 100).toString() : dQuickBalance.toExact() : '0');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [Math.min(stakePercent, 100).toLocaleString(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"stakeButton\",\n          disabled: !!error || attempting,\n          onClick: onWithdraw,\n          children: attempting ? `${t('unstaking')}...` : t('unstake')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UnstakeQuickModal, \"Lvd4H9H4oJ2CoJfPCaR2eHTyowQ=\", false, function () {\n  return [useTranslation, useTransactionAdder, useOldLairInfo, useNewLairInfo, useLairContract, useNewLairContract];\n});\n\n_c = UnstakeQuickModal;\nexport default UnstakeQuickModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnstakeQuickModal\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/UnstakeQuickModal/UnstakeQuickModal.tsx"],"names":["React","useState","Box","Button","CustomModal","ColoredSlider","NumericalInput","useOldLairInfo","useNewLairInfo","useTransactionAdder","useLairContract","useNewLairContract","Web3","formatTokenAmount","useTranslation","web3","UnstakeQuickModal","open","onClose","isNew","t","attempting","setAttempting","addTransaction","lairInfo","newLairInfo","laifInfoToUse","dQuickBalance","dQUICKBalance","typedValue","setTypedValue","stakePercent","setStakePercent","lairContract","newLairContract","lairContractToUse","error","Number","toExact","onWithdraw","balance","utils","toWei","leave","toString","gasLimit","then","response","summary","wait","catch","console","log","value","totalBalance","evt","Math","min","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { CustomModal, ColoredSlider, NumericalInput } from 'components';\nimport { useOldLairInfo, useNewLairInfo } from 'state/stake/hooks';\nimport { ReactComponent as CloseIcon } from 'assets/images/CloseIcon.svg';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useLairContract, useNewLairContract } from 'hooks/useContract';\nimport Web3 from 'web3';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\n\nconst web3 = new Web3();\n\ninterface UnstakeQuickModalProps {\n  open: boolean;\n  onClose: () => void;\n  isNew: boolean;\n}\n\nconst UnstakeQuickModal: React.FC<UnstakeQuickModalProps> = ({\n  open,\n  onClose,\n  isNew,\n}) => {\n  const { t } = useTranslation();\n  const [attempting, setAttempting] = useState(false);\n  const addTransaction = useTransactionAdder();\n  const lairInfo = useOldLairInfo();\n  const newLairInfo = useNewLairInfo();\n  const laifInfoToUse = isNew ? newLairInfo : lairInfo;\n  const dQuickBalance = laifInfoToUse.dQUICKBalance;\n  const [typedValue, setTypedValue] = useState('');\n  const [stakePercent, setStakePercent] = useState(0);\n\n  const lairContract = useLairContract();\n  const newLairContract = useNewLairContract();\n  const lairContractToUse = isNew ? newLairContract : lairContract;\n  const error =\n    Number(typedValue) > Number(dQuickBalance.toExact()) || !typedValue;\n\n  const onWithdraw = () => {\n    if (lairContractToUse && laifInfoToUse?.dQUICKBalance) {\n      setAttempting(true);\n      const balance = web3.utils.toWei(typedValue, 'ether');\n      lairContractToUse\n        .leave(balance.toString(), { gasLimit: 300000 })\n        .then(async (response: TransactionResponse) => {\n          addTransaction(response, {\n            summary: `${t('unstake')} dQUICK`,\n          });\n          await response.wait();\n          setAttempting(false);\n        })\n        .catch((error: any) => {\n          setAttempting(false);\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <CustomModal open={open} onClose={onClose}>\n      <Box paddingX={3} paddingY={4}>\n        <Box className='flex items-center justify-between'>\n          <h5>{t('unstake')} dQUICK</h5>\n          <CloseIcon className='cursor-pointer' onClick={onClose} />\n        </Box>\n        <Box\n          mt={3}\n          className='bg-default border-gray14'\n          borderRadius='10px'\n          padding='16px'\n        >\n          <Box className='flex items-center justify-between'>\n            <small>dQUICK</small>\n            <small>\n              {t('balance')}: {formatTokenAmount(dQuickBalance)}\n            </small>\n          </Box>\n          <Box mt={2} className='flex items-center'>\n            <NumericalInput\n              placeholder='0'\n              value={typedValue}\n              fontSize={28}\n              onUserInput={(value) => {\n                const totalBalance = dQuickBalance\n                  ? Number(dQuickBalance.toExact())\n                  : 0;\n                setTypedValue(value);\n                setStakePercent(\n                  totalBalance > 0 ? (Number(value) / totalBalance) * 100 : 0,\n                );\n              }}\n            />\n            <span\n              className='text-primary text-bold cursor-pointer'\n              onClick={() => {\n                setTypedValue(dQuickBalance ? dQuickBalance.toExact() : '0');\n                setStakePercent(100);\n              }}\n            >\n              {t('max')}\n            </span>\n          </Box>\n          <Box className='flex items-center'>\n            <Box flex={1} mr={2} mt={0.5}>\n              <ColoredSlider\n                min={1}\n                max={100}\n                step={1}\n                value={stakePercent}\n                handleChange={(evt, value) => {\n                  setStakePercent(value as number);\n                  setTypedValue(\n                    dQuickBalance\n                      ? stakePercent < 100\n                        ? (\n                            (Number(dQuickBalance.toExact()) * stakePercent) /\n                            100\n                          ).toString()\n                        : dQuickBalance.toExact()\n                      : '0',\n                  );\n                }}\n              />\n            </Box>\n            <small>{Math.min(stakePercent, 100).toLocaleString()}%</small>\n          </Box>\n        </Box>\n        <Box mt={3}>\n          <Button\n            className='stakeButton'\n            disabled={!!error || attempting}\n            onClick={onWithdraw}\n          >\n            {attempting ? `${t('unstaking')}...` : t('unstake')}\n          </Button>\n        </Box>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default UnstakeQuickModal;\n"]},"metadata":{},"sourceType":"module"}