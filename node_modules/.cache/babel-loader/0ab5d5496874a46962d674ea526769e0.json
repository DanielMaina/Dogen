{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/theme/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { ThemeProvider as StyledComponentsThemeProvider, css } from 'styled-components';\nimport { useIsDarkMode } from 'state/user/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  accumulator[size] = (a, b, c) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(a, b, c)}\n    }\n  `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport function colors(darkMode) {\n  return {\n    // base\n    white,\n    black,\n    // text\n    text1: darkMode ? '#FFFFFF' : '#000000',\n    text2: darkMode ? '#C3C5CB' : '#565A69',\n    text3: darkMode ? '#6C7284' : '#888D9B',\n    text4: darkMode ? '#565A69' : '#C3C5CB',\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\n    // backgrounds / greys\n    bg0: darkMode ? '#282d3d' : '#FFFFFF',\n    bg1: darkMode ? '#404557' : '#FFFFFF',\n    bg2: darkMode ? '#404557' : '#F7F8FA',\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\n    bg4: darkMode ? '#565A69' : '#CED0D9',\n    bg5: darkMode ? '#6C7284' : '#888D9B',\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#2891F9',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#2891F9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#cde6fe',\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#0A1647',\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#0A1647',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#cde6fe',\n    // other\n    red1: '#FF6871',\n    red2: '#F82D3A',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E',\n    blue1: '#2172E5' // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n\n  };\n}\nexport function theme(darkMode) {\n  return { ...colors(darkMode),\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24\n    },\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `\n  };\n}\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const darkMode = useIsDarkMode();\n  const themeObject = useMemo(() => theme(darkMode), [darkMode]);\n  return /*#__PURE__*/_jsxDEV(StyledComponentsThemeProvider, {\n    theme: themeObject,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"8JhpkCtVEP0a6BY1ck5+Kji+BQI=\", false, function () {\n  return [useIsDarkMode];\n});\n\n_c = ThemeProvider;\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/theme/index.tsx"],"names":["React","useMemo","ThemeProvider","StyledComponentsThemeProvider","css","useIsDarkMode","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","white","black","colors","darkMode","text1","text2","text3","text4","text5","bg0","bg1","bg2","bg3","bg4","bg5","modalBG","advancedBG","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","red1","red2","green1","yellow1","yellow2","blue1","theme","grids","sm","md","lg","shadow1","mediaWidth","flexColumnNoWrap","flexRowNoWrap","children","themeObject"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport {\n  ThemeProvider as StyledComponentsThemeProvider,\n  css,\n  DefaultTheme,\n} from 'styled-components';\nimport { useIsDarkMode } from 'state/user/hooks';\nimport { Colors } from './styled';\n\nconst MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280,\n};\n\nconst mediaWidthTemplates: {\n  [width in keyof typeof MEDIA_WIDTHS]: typeof css;\n} = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  (accumulator as any)[size] = (a: any, b: any, c: any) => css`\n    @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n      ${css(a, b, c)}\n    }\n  `;\n  return accumulator;\n}, {}) as any;\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport function colors(darkMode: boolean): Colors {\n  return {\n    // base\n    white,\n    black,\n\n    // text\n    text1: darkMode ? '#FFFFFF' : '#000000',\n    text2: darkMode ? '#C3C5CB' : '#565A69',\n    text3: darkMode ? '#6C7284' : '#888D9B',\n    text4: darkMode ? '#565A69' : '#C3C5CB',\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n    // backgrounds / greys\n    bg0: darkMode ? '#282d3d' : '#FFFFFF',\n    bg1: darkMode ? '#404557' : '#FFFFFF',\n    bg2: darkMode ? '#404557' : '#F7F8FA',\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\n    bg4: darkMode ? '#565A69' : '#CED0D9',\n    bg5: darkMode ? '#6C7284' : '#888D9B',\n\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\n\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#2891F9',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#2891F9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#cde6fe',\n\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#0A1647',\n\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#0A1647',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#cde6fe',\n\n    // other\n    red1: '#FF6871',\n    red2: '#F82D3A',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E',\n    blue1: '#2172E5',\n\n    // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n  };\n}\n\nexport function theme(darkMode: boolean): DefaultTheme {\n  return {\n    ...colors(darkMode),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24,\n    },\n\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n  };\n}\n\nconst ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const darkMode = useIsDarkMode();\n\n  const themeObject = useMemo(() => theme(darkMode), [darkMode]);\n\n  return (\n    <StyledComponentsThemeProvider theme={themeObject}>\n      {children}\n    </StyledComponentsThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n"]},"metadata":{},"sourceType":"module"}