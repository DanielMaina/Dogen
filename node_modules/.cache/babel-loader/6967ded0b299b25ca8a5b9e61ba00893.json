{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/ListSelect.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { memo, useCallback, useMemo, useState } from 'react';\nimport { ArrowLeft } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Box, Button, Popover, Divider } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReactComponent as DropDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/dropdown.svg\";\nimport { useFetchListCallback } from 'hooks/useFetchListCallback';\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/CloseIcon.svg\";\nimport { acceptListUpdate, removeList, selectList } from 'state/lists/actions';\nimport { useSelectedListUrl } from 'state/lists/hooks';\nimport listVersionLabel from 'utils/listVersionLabel';\nimport { parseENSAddress } from 'utils/parseENSAddress';\nimport uriToHttp from 'utils/uriToHttp';\nimport { QuestionHelper, ListLogo } from 'components';\nimport { useTranslation } from 'react-i18next';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListOrigin(_ref) {\n  _s();\n\n  let {\n    listUrl\n  } = _ref;\n  const ensName = useMemo(() => {\n    var _parseENSAddress;\n\n    return (_parseENSAddress = parseENSAddress(listUrl)) === null || _parseENSAddress === void 0 ? void 0 : _parseENSAddress.ensName;\n  }, [listUrl]);\n  const host = useMemo(() => {\n    if (ensName) return undefined;\n    const lowerListUrl = listUrl.toLowerCase();\n\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\n      return listUrl;\n    }\n\n    try {\n      const url = new URL(listUrl);\n      return url.host;\n    } catch (error) {\n      return undefined;\n    }\n  }, [listUrl, ensName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ensName !== null && ensName !== void 0 ? ensName : host\n  }, void 0, false);\n}\n\n_s(ListOrigin, \"SxtAwdTxOPoU+UHqf6mYStIkrko=\");\n\n_c = ListOrigin;\n\nfunction listUrlRowHTMLId(listUrl) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`;\n}\n\nconst ListRow = /*#__PURE__*/memo(_c2 = _s2(function ListRow(_ref2) {\n  _s2();\n\n  let {\n    listUrl,\n    onBack\n  } = _ref2;\n  const {\n    t\n  } = useTranslation();\n  const listsByUrl = useSelector(state => state.lists.byUrl);\n  const selectedListUrl = useSelectedListUrl();\n  const dispatch = useDispatch();\n  const {\n    current: list,\n    pendingUpdate: pending\n  } = listsByUrl[listUrl];\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isSelected = listUrl === selectedListUrl;\n  const selectThisList = useCallback(() => {\n    if (isSelected) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Select List',\n      label: listUrl\n    });\n    dispatch(selectList(listUrl));\n    onBack();\n  }, [dispatch, isSelected, listUrl, onBack]);\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from List Select',\n      label: listUrl\n    });\n    dispatch(acceptListUpdate(listUrl));\n  }, [dispatch, listUrl, pending]);\n  const handleRemoveList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Start Remove List',\n      label: listUrl\n    });\n\n    if (window.prompt(t('confirmRemoveList')) === t('REMOVE').toUpperCase()) {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Confirm Remove List',\n        label: listUrl\n      });\n      dispatch(removeList(listUrl));\n    }\n  }, [dispatch, listUrl, t]);\n  if (!list) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"listRow\",\n    id: listUrlRowHTMLId(listUrl),\n    children: [list.logoURI ? /*#__PURE__*/_jsxDEV(ListLogo, {\n      logoURI: list.logoURI,\n      alt: `${list.name} list logo`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '24px',\n        height: '24px',\n        marginRight: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"listname\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"styledListUrlText\",\n        title: listUrl,\n        children: /*#__PURE__*/_jsxDEV(ListOrigin, {\n          listUrl: listUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styledMenu\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        onClick: evt => {\n          setAnchorEl(evt.currentTarget);\n        },\n        children: /*#__PURE__*/_jsxDEV(DropDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        open: Boolean(anchorEl),\n        onClose: () => setAnchorEl(null),\n        anchorEl: anchorEl,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"popoverWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: list && listVersionLabel(list.version)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://tokenlists.org/token-list?url=${listUrl}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: t('viewList')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleRemoveList,\n              disabled: Object.keys(listsByUrl).length === 1,\n              children: t('removeList')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), pending && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAcceptListUpdate,\n              children: t('updateList')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isSelected ? /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      className: \"select-button\",\n      style: {\n        width: '5rem',\n        minWidth: '5rem',\n        padding: '0.5rem .35rem',\n        borderRadius: '12px',\n        fontSize: '14px'\n      },\n      children: t('selected')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: selectThisList,\n      children: t('select')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, listUrl, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}, \"4TZny7INLBUx1K31V1Z2DsJLQEw=\", false, function () {\n  return [useTranslation, useSelector, useSelectedListUrl, useDispatch];\n}));\n_c3 = ListRow;\n\nconst ListSelect = _ref3 => {\n  _s3();\n\n  var _lists$listUrlInput;\n\n  let {\n    onDismiss,\n    onBack\n  } = _ref3;\n  const {\n    t\n  } = useTranslation();\n  const [listUrlInput, setListUrlInput] = useState('');\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists.byUrl);\n  const adding = Boolean((_lists$listUrlInput = lists[listUrlInput]) === null || _lists$listUrlInput === void 0 ? void 0 : _lists$listUrlInput.loadingRequestId);\n  const [addError, setAddError] = useState(null);\n  const handleInput = useCallback(e => {\n    setListUrlInput(e.target.value);\n    setAddError(null);\n  }, []);\n  const fetchList = useFetchListCallback();\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList(listUrlInput).then(() => {\n      setListUrlInput('');\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List',\n        label: listUrlInput\n      });\n    }).catch(error => {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List Failed',\n        label: listUrlInput\n      });\n      setAddError(error.message);\n      dispatch(removeList(listUrlInput));\n    });\n  }, [adding, dispatch, fetchList, listUrlInput]);\n  const validUrl = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput));\n  }, [listUrlInput]);\n  const handleEnterKey = useCallback(e => {\n    if (validUrl && e.key === 'Enter') {\n      handleAddList();\n    }\n  }, [handleAddList, validUrl]);\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists);\n    return listUrls.filter(listUrl => {\n      return Boolean(lists[listUrl].current);\n    }).sort((u1, u2) => {\n      const {\n        current: l1\n      } = lists[u1];\n      const {\n        current: l2\n      } = lists[u2];\n\n      if (l1 && l2) {\n        return l1.name.toLowerCase() < l2.name.toLowerCase() ? -1 : l1.name.toLowerCase() === l2.name.toLowerCase() ? 0 : 1;\n      }\n\n      if (l1) return -1;\n      if (l2) return 1;\n      return 0;\n    });\n  }, [lists]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"manageList\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n        onClick: onBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('manageLists')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('addList')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: t('addListHelper')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"list-add-input\",\n          placeholder: t('listPlaceholder'),\n          value: listUrlInput,\n          onChange: handleInput,\n          onKeyDown: handleEnterKey,\n          style: {\n            height: '2.75rem',\n            borderRadius: 12,\n            padding: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddList,\n          disabled: !validUrl,\n          children: t('add')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), addError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textOverflow: 'ellipsis',\n          overflow: 'hidden'\n        },\n        children: addError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: sortedLists.map(listUrl => /*#__PURE__*/_jsxDEV(ListRow, {\n        listUrl: listUrl,\n        onBack: onBack\n      }, listUrl, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ListSelect, \"CKI5FVdGPtRc/WEBzBZ2Mx+AP1Y=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, useFetchListCallback];\n});\n\n_c4 = ListSelect;\nexport default ListSelect;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ListOrigin\");\n$RefreshReg$(_c2, \"ListRow$memo\");\n$RefreshReg$(_c3, \"ListRow\");\n$RefreshReg$(_c4, \"ListSelect\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/ListSelect.tsx"],"names":["React","memo","useCallback","useMemo","useState","ArrowLeft","ReactGA","Box","Button","Popover","Divider","useDispatch","useSelector","useFetchListCallback","acceptListUpdate","removeList","selectList","useSelectedListUrl","listVersionLabel","parseENSAddress","uriToHttp","QuestionHelper","ListLogo","useTranslation","ListOrigin","listUrl","ensName","host","undefined","lowerListUrl","toLowerCase","startsWith","url","URL","error","listUrlRowHTMLId","replace","ListRow","onBack","t","listsByUrl","state","lists","byUrl","selectedListUrl","dispatch","current","list","pendingUpdate","pending","anchorEl","setAnchorEl","isSelected","selectThisList","event","category","action","label","handleAcceptListUpdate","handleRemoveList","window","prompt","toUpperCase","logoURI","name","width","height","marginRight","evt","currentTarget","Boolean","vertical","horizontal","version","Object","keys","length","minWidth","padding","borderRadius","fontSize","ListSelect","onDismiss","listUrlInput","setListUrlInput","adding","loadingRequestId","addError","setAddError","handleInput","e","target","value","fetchList","handleAddList","then","catch","message","validUrl","handleEnterKey","key","sortedLists","listUrls","filter","sort","u1","u2","l1","l2","textOverflow","overflow","map"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { ArrowLeft } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Box, Button, Popover, Divider } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReactComponent as DropDown } from 'assets/images/dropdown.svg';\nimport { useFetchListCallback } from 'hooks/useFetchListCallback';\nimport { ReactComponent as CloseIcon } from 'assets/images/CloseIcon.svg';\n\nimport { AppDispatch, AppState } from 'state';\nimport { acceptListUpdate, removeList, selectList } from 'state/lists/actions';\nimport { useSelectedListUrl } from 'state/lists/hooks';\nimport listVersionLabel from 'utils/listVersionLabel';\nimport { parseENSAddress } from 'utils/parseENSAddress';\nimport uriToHttp from 'utils/uriToHttp';\nimport { QuestionHelper, ListLogo } from 'components';\nimport { useTranslation } from 'react-i18next';\n\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl]);\n  const host = useMemo(() => {\n    if (ensName) return undefined;\n    const lowerListUrl = listUrl.toLowerCase();\n    if (\n      lowerListUrl.startsWith('ipfs://') ||\n      lowerListUrl.startsWith('ipns://')\n    ) {\n      return listUrl;\n    }\n    try {\n      const url = new URL(listUrl);\n      return url.host;\n    } catch (error) {\n      return undefined;\n    }\n  }, [listUrl, ensName]);\n  return <>{ensName ?? host}</>;\n}\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`;\n}\n\nconst ListRow = memo(function ListRow({\n  listUrl,\n  onBack,\n}: {\n  listUrl: string;\n  onBack: () => void;\n}) {\n  const { t } = useTranslation();\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(\n    (state) => state.lists.byUrl,\n  );\n  const selectedListUrl = useSelectedListUrl();\n  const dispatch = useDispatch<AppDispatch>();\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl];\n  const [anchorEl, setAnchorEl] = useState<any>(null);\n\n  const isSelected = listUrl === selectedListUrl;\n\n  const selectThisList = useCallback(() => {\n    if (isSelected) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Select List',\n      label: listUrl,\n    });\n\n    dispatch(selectList(listUrl));\n    onBack();\n  }, [dispatch, isSelected, listUrl, onBack]);\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from List Select',\n      label: listUrl,\n    });\n    dispatch(acceptListUpdate(listUrl));\n  }, [dispatch, listUrl, pending]);\n\n  const handleRemoveList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Start Remove List',\n      label: listUrl,\n    });\n    if (window.prompt(t('confirmRemoveList')) === t('REMOVE').toUpperCase()) {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Confirm Remove List',\n        label: listUrl,\n      });\n      dispatch(removeList(listUrl));\n    }\n  }, [dispatch, listUrl, t]);\n\n  if (!list) return null;\n\n  return (\n    <Box className='listRow' key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {list.logoURI ? (\n        <ListLogo logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Box className='listname'>\n        <p>{list.name}</p>\n        <Box className='styledListUrlText' title={listUrl}>\n          <ListOrigin listUrl={listUrl} />\n        </Box>\n      </Box>\n      <div className='styledMenu'>\n        <Box\n          onClick={(evt) => {\n            setAnchorEl(evt.currentTarget);\n          }}\n        >\n          <DropDown />\n        </Box>\n\n        <Popover\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(null)}\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n          transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        >\n          <Box className='popoverWrapper'>\n            <p>{list && listVersionLabel(list.version)}</p>\n            <Divider />\n            <Box>\n              <a\n                href={`https://tokenlists.org/token-list?url=${listUrl}`}\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                {t('viewList')}\n              </a>\n              <Button\n                onClick={handleRemoveList}\n                disabled={Object.keys(listsByUrl).length === 1}\n              >\n                {t('removeList')}\n              </Button>\n              {pending && (\n                <Button onClick={handleAcceptListUpdate}>\n                  {t('updateList')}\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </Popover>\n      </div>\n      {isSelected ? (\n        <Button\n          disabled={true}\n          className='select-button'\n          style={{\n            width: '5rem',\n            minWidth: '5rem',\n            padding: '0.5rem .35rem',\n            borderRadius: '12px',\n            fontSize: '14px',\n          }}\n        >\n          {t('selected')}\n        </Button>\n      ) : (\n        <Button onClick={selectThisList}>{t('select')}</Button>\n      )}\n    </Box>\n  );\n});\n\ninterface ListSelectProps {\n  onDismiss: () => void;\n  onBack: () => void;\n}\n\nconst ListSelect: React.FC<ListSelectProps> = ({ onDismiss, onBack }) => {\n  const { t } = useTranslation();\n  const [listUrlInput, setListUrlInput] = useState<string>('');\n\n  const dispatch = useDispatch<AppDispatch>();\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(\n    (state) => state.lists.byUrl,\n  );\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId);\n  const [addError, setAddError] = useState<string | null>(null);\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value);\n    setAddError(null);\n  }, []);\n  const fetchList = useFetchListCallback();\n\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList(listUrlInput)\n      .then(() => {\n        setListUrlInput('');\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List',\n          label: listUrlInput,\n        });\n      })\n      .catch((error) => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List Failed',\n          label: listUrlInput,\n        });\n        setAddError(error.message);\n        dispatch(removeList(listUrlInput));\n      });\n  }, [adding, dispatch, fetchList, listUrlInput]);\n\n  const validUrl: boolean = useMemo(() => {\n    return (\n      uriToHttp(listUrlInput).length > 0 ||\n      Boolean(parseENSAddress(listUrlInput))\n    );\n  }, [listUrlInput]);\n\n  const handleEnterKey = useCallback(\n    (e) => {\n      if (validUrl && e.key === 'Enter') {\n        handleAddList();\n      }\n    },\n    [handleAddList, validUrl],\n  );\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists);\n    return listUrls\n      .filter((listUrl) => {\n        return Boolean(lists[listUrl].current);\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1];\n        const { current: l2 } = lists[u2];\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1;\n        }\n        if (l1) return -1;\n        if (l2) return 1;\n        return 0;\n      });\n  }, [lists]);\n\n  return (\n    <Box className='manageList'>\n      <Box className='header'>\n        <ArrowLeft onClick={onBack} />\n        <p>{t('manageLists')}</p>\n        <CloseIcon onClick={onDismiss} />\n      </Box>\n\n      <Divider />\n\n      <Box className='content'>\n        <Box>\n          <p>{t('addList')}</p>\n          <QuestionHelper text={t('addListHelper')} />\n        </Box>\n        <Box>\n          <input\n            type='text'\n            id='list-add-input'\n            placeholder={t('listPlaceholder')}\n            value={listUrlInput}\n            onChange={handleInput}\n            onKeyDown={handleEnterKey}\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\n          />\n          <Button onClick={handleAddList} disabled={!validUrl}>\n            {t('add')}\n          </Button>\n        </Box>\n        {addError ? (\n          <p style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </p>\n        ) : null}\n      </Box>\n\n      <Divider />\n\n      <Box>\n        {sortedLists.map((listUrl) => (\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ListSelect;\n"]},"metadata":{},"sourceType":"module"}