{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/AnalyticsSearch/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/SearchIcon.svg\";\nimport { client } from 'apollo/client';\nimport { TOKEN_SEARCH, PAIR_SEARCH, TOKEN_INFO_OLD } from 'apollo/queries';\nimport { getAllTokensOnUniswap, getAllPairsOnUniswap, getBlockFromTimestamp } from 'utils';\nimport { GlobalConst, MATIC_CHAIN } from 'constants/index';\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components';\nimport { Token } from '@uniswap/sdk';\nimport { getAddress } from '@ethersproject/address';\nimport 'components/styles/SearchWidget.scss';\nimport { useTranslation } from 'react-i18next';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(utc);\n\nconst AnalyticsSearch = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory();\n  const [searchVal, setSearchVal] = useState('');\n  const [searchValInput, setSearchValInput] = useDebouncedChangeHandler(searchVal, setSearchVal);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n  const wrapperRef = useRef(null);\n  const [searchedTokens, setSearchedTokens] = useState([]);\n  const [searchedPairs, setSearchedPairs] = useState([]);\n  const [tokensShown, setTokensShown] = useState(3);\n  const [pairsShown, setPairsShown] = useState(3);\n\n  const escapeRegExp = str => {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  };\n\n  const filteredTokens = useMemo(() => {\n    const uniqueTokens = [];\n    const found = {};\n\n    if (searchedTokens && searchedTokens.length > 0) {\n      searchedTokens.map(token => {\n        if (!found[token.id]) {\n          found[token.id] = true;\n          uniqueTokens.push(token);\n        }\n\n        return true;\n      });\n    }\n\n    const filtered = uniqueTokens && uniqueTokens.length > 0 ? uniqueTokens.sort((tokenA, tokenB) => {\n      return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1;\n    }).filter(token => {\n      if (GlobalConst.blacklists.TOKEN_BLACKLIST.includes(token.id)) {\n        return false;\n      }\n\n      const regexMatches = Object.keys(token).map(tokenEntryKey => {\n        const isAddress = searchVal.slice(0, 2) === '0x';\n\n        if (tokenEntryKey === 'id' && isAddress) {\n          return token[tokenEntryKey].match(new RegExp(escapeRegExp(searchVal), 'i'));\n        }\n\n        if (tokenEntryKey === 'symbol' && !isAddress) {\n          return token[tokenEntryKey].match(new RegExp(escapeRegExp(searchVal), 'i'));\n        }\n\n        if (tokenEntryKey === 'name' && !isAddress) {\n          return token[tokenEntryKey].match(new RegExp(escapeRegExp(searchVal), 'i'));\n        }\n\n        return false;\n      });\n      return regexMatches.some(m => m);\n    }) : [];\n    return filtered;\n  }, [searchedTokens, searchVal]);\n  const filteredPairs = useMemo(() => {\n    const uniquePairs = [];\n    const pairsFound = {};\n    if (searchedPairs && searchedPairs.length > 0) searchedPairs.map(pair => {\n      if (!pairsFound[pair.id]) {\n        pairsFound[pair.id] = true;\n        uniquePairs.push(pair);\n      }\n\n      return true;\n    });\n    const filtered = uniquePairs ? uniquePairs.sort((pairA, pairB) => {\n      var _pairA$trackedReserve, _pairB$trackedReserve;\n\n      const pairAReserveETH = Number((_pairA$trackedReserve = pairA === null || pairA === void 0 ? void 0 : pairA.trackedReserveETH) !== null && _pairA$trackedReserve !== void 0 ? _pairA$trackedReserve : 0);\n      const pairBReserveETH = Number((_pairB$trackedReserve = pairB === null || pairB === void 0 ? void 0 : pairB.trackedReserveETH) !== null && _pairB$trackedReserve !== void 0 ? _pairB$trackedReserve : 0);\n      return pairAReserveETH > pairBReserveETH ? -1 : 1;\n    }).filter(pair => {\n      if (GlobalConst.blacklists.PAIR_BLACKLIST.includes(pair.id)) {\n        return false;\n      }\n\n      if (searchVal && searchVal.includes(' ')) {\n        var _searchVal$split$, _searchVal$split$2;\n\n        const pairA = (_searchVal$split$ = searchVal.split(' ')[0]) === null || _searchVal$split$ === void 0 ? void 0 : _searchVal$split$.toUpperCase();\n        const pairB = (_searchVal$split$2 = searchVal.split(' ')[1]) === null || _searchVal$split$2 === void 0 ? void 0 : _searchVal$split$2.toUpperCase();\n        return (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) && (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB));\n      }\n\n      if (searchVal && searchVal.includes('-')) {\n        var _searchVal$split$3, _searchVal$split$4;\n\n        const pairA = (_searchVal$split$3 = searchVal.split('-')[0]) === null || _searchVal$split$3 === void 0 ? void 0 : _searchVal$split$3.toUpperCase();\n        const pairB = (_searchVal$split$4 = searchVal.split('-')[1]) === null || _searchVal$split$4 === void 0 ? void 0 : _searchVal$split$4.toUpperCase();\n        return (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) && (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB));\n      }\n\n      const regexMatches = Object.keys(pair).map(field => {\n        const isAddress = searchVal.slice(0, 2) === '0x';\n\n        if (field === 'id' && isAddress) {\n          return pair[field].match(new RegExp(escapeRegExp(searchVal), 'i'));\n        }\n\n        if (field === 'token0' || field === 'token1') {\n          return pair[field].symbol.match(new RegExp(escapeRegExp(searchVal), 'i')) || pair[field].name.match(new RegExp(escapeRegExp(searchVal), 'i'));\n        }\n\n        return false;\n      });\n      return regexMatches.some(m => m);\n    }) : [];\n    return filtered;\n  }, [searchedPairs, searchVal]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const allTokensUniswap = await getAllTokensOnUniswap();\n        const allPairsUniswap = await getAllPairsOnUniswap();\n        let allTokens = allTokensUniswap !== null && allTokensUniswap !== void 0 ? allTokensUniswap : [];\n        let allPairs = allPairsUniswap !== null && allPairsUniswap !== void 0 ? allPairsUniswap : [];\n\n        if (searchVal.length > 0) {\n          var _tokens$data$asSymbol;\n\n          const tokens = await client.query({\n            query: TOKEN_SEARCH,\n            variables: {\n              value: searchVal ? searchVal.toUpperCase() : '',\n              id: searchVal\n            }\n          });\n          const pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: (_tokens$data$asSymbol = tokens.data.asSymbol) === null || _tokens$data$asSymbol === void 0 ? void 0 : _tokens$data$asSymbol.map(t => t.id),\n              id: searchVal\n            }\n          });\n          const foundPairs = pairs.data.as0.concat(pairs.data.as1).concat(pairs.data.asAddress);\n          allPairs = allPairs.concat(foundPairs.filter(searchedPair => {\n            let included = false;\n            allPairs.map(pair => {\n              if (pair.id === searchedPair.id) {\n                included = true;\n              }\n\n              return true;\n            });\n            return !included;\n          }));\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName);\n          allTokens = allTokens.concat(foundTokens.filter(searchedToken => {\n            let included = false;\n            allTokens.map(token => {\n              if (token.id === searchedToken.id) {\n                included = true;\n              }\n\n              return true;\n            });\n            return !included;\n          }));\n        }\n\n        const foundTokensWithData = await Promise.all(allTokens.map(async token => {\n          const utcCurrentTime = dayjs();\n          const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix();\n          const oneDayBlock = await getBlockFromTimestamp(utcOneDayBack);\n          const oneDayResult = await client.query({\n            query: TOKEN_INFO_OLD(oneDayBlock, token.id),\n            fetchPolicy: 'network-only'\n          });\n\n          if (oneDayResult && oneDayResult.data && oneDayResult.data.tokens && oneDayResult.data.tokens.length > 0) {\n            var _token$tradeVolumeUSD, _oneDayHistory$tradeV;\n\n            const oneDayHistory = oneDayResult.data.tokens[0];\n            const oneDayVolumeUSD = ((_token$tradeVolumeUSD = token === null || token === void 0 ? void 0 : token.tradeVolumeUSD) !== null && _token$tradeVolumeUSD !== void 0 ? _token$tradeVolumeUSD : 0) - ((_oneDayHistory$tradeV = oneDayHistory === null || oneDayHistory === void 0 ? void 0 : oneDayHistory.tradeVolumeUSD) !== null && _oneDayHistory$tradeV !== void 0 ? _oneDayHistory$tradeV : 0);\n            return { ...token,\n              oneDayVolumeUSD\n            };\n          }\n\n          return token;\n        }));\n        setSearchedTokens(foundTokensWithData);\n        setSearchedPairs(allPairs);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [searchVal]);\n\n  const handleClick = e => {\n    if (!(menuRef.current && menuRef.current.contains(e.target)) && !(wrapperRef.current && wrapperRef.current.contains(e.target))) {\n      setPairsShown(3);\n      setTokensShown(3);\n      setMenuOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"searchWidgetWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"searchWidgetInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: t('searchTokenPair'),\n        value: searchValInput,\n        ref: menuRef,\n        onFocus: () => setMenuOpen(true),\n        onChange: evt => setSearchValInput(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      className: \"searchWidgetContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: t('pairs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), filteredPairs.slice(0, pairsShown).map((val, ind) => {\n        const currency0 = new Token(MATIC_CHAIN, getAddress(val.token0.id), val.token0.decimals);\n        const currency1 = new Token(MATIC_CHAIN, getAddress(val.token1.id), val.token1.decimals);\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: \"searchWidgetRow\",\n          onClick: () => {\n            history.push(`/analytics/pair/${val.id}`);\n            setMenuOpen(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currency0,\n            currency1: currency1,\n            size: 28\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [val.token0.symbol, \" - \", val.token1.symbol, \" \", t('pair')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"searchWidgetShowMore\",\n        onClick: () => setPairsShown(pairsShown + 5),\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: t('showMore')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: t('tokens')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), filteredTokens.slice(0, tokensShown).map((val, ind) => {\n        const currency = new Token(MATIC_CHAIN, getAddress(val.id), val.decimals);\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: \"searchWidgetRow\",\n          onClick: () => {\n            history.push(`/analytics/token/${val.id}`);\n            setMenuOpen(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currency,\n            size: \"28px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [val.name, \" \", val.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"searchWidgetShowMore\",\n        onClick: () => setTokensShown(tokensShown + 5),\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: t('showMore')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnalyticsSearch, \"AU8cM8b5JrOIwOQ4QsX/jpRUVMs=\", false, function () {\n  return [useTranslation, useHistory, useDebouncedChangeHandler];\n});\n\n_c = AnalyticsSearch;\nexport default _c2 = /*#__PURE__*/React.memo(AnalyticsSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnalyticsSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/AnalyticsSearch/index.tsx"],"names":["React","useEffect","useState","useRef","useMemo","useHistory","Box","client","TOKEN_SEARCH","PAIR_SEARCH","TOKEN_INFO_OLD","getAllTokensOnUniswap","getAllPairsOnUniswap","getBlockFromTimestamp","GlobalConst","MATIC_CHAIN","CurrencyLogo","DoubleCurrencyLogo","Token","getAddress","useTranslation","dayjs","utc","useDebouncedChangeHandler","extend","AnalyticsSearch","t","history","searchVal","setSearchVal","searchValInput","setSearchValInput","menuOpen","setMenuOpen","menuRef","wrapperRef","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","tokensShown","setTokensShown","pairsShown","setPairsShown","escapeRegExp","str","replace","filteredTokens","uniqueTokens","found","length","map","token","id","push","filtered","sort","tokenA","tokenB","oneDayVolumeUSD","filter","blacklists","TOKEN_BLACKLIST","includes","regexMatches","Object","keys","tokenEntryKey","isAddress","slice","match","RegExp","some","m","filteredPairs","uniquePairs","pairsFound","pair","pairA","pairB","pairAReserveETH","Number","trackedReserveETH","pairBReserveETH","PAIR_BLACKLIST","split","toUpperCase","token0","symbol","token1","field","name","fetchData","allTokensUniswap","allPairsUniswap","allTokens","allPairs","tokens","query","variables","value","pairs","data","asSymbol","foundPairs","as0","concat","as1","asAddress","searchedPair","included","foundTokens","asName","searchedToken","foundTokensWithData","Promise","all","utcCurrentTime","utcOneDayBack","subtract","unix","oneDayBlock","oneDayResult","fetchPolicy","oneDayHistory","tradeVolumeUSD","e","console","log","handleClick","current","contains","target","document","addEventListener","removeEventListener","evt","val","ind","currency0","decimals","currency1","currency","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { ReactComponent as SearchIcon } from 'assets/images/SearchIcon.svg';\nimport { client } from 'apollo/client';\nimport { TOKEN_SEARCH, PAIR_SEARCH, TOKEN_INFO_OLD } from 'apollo/queries';\nimport {\n  getAllTokensOnUniswap,\n  getAllPairsOnUniswap,\n  getBlockFromTimestamp,\n} from 'utils';\nimport { GlobalConst, MATIC_CHAIN } from 'constants/index';\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { getAddress } from '@ethersproject/address';\nimport 'components/styles/SearchWidget.scss';\nimport { useTranslation } from 'react-i18next';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\ndayjs.extend(utc);\n\nconst AnalyticsSearch: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [searchVal, setSearchVal] = useState('');\n  const [searchValInput, setSearchValInput] = useDebouncedChangeHandler(\n    searchVal,\n    setSearchVal,\n  );\n  const [menuOpen, setMenuOpen] = useState(false);\n  const menuRef = useRef<any>(null);\n  const wrapperRef = useRef<any>(null);\n  const [searchedTokens, setSearchedTokens] = useState<any[]>([]);\n  const [searchedPairs, setSearchedPairs] = useState<any[]>([]);\n  const [tokensShown, setTokensShown] = useState(3);\n  const [pairsShown, setPairsShown] = useState(3);\n\n  const escapeRegExp = (str: string) => {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  };\n\n  const filteredTokens = useMemo(() => {\n    const uniqueTokens: any[] = [];\n    const found: any = {};\n    if (searchedTokens && searchedTokens.length > 0) {\n      searchedTokens.map((token) => {\n        if (!found[token.id]) {\n          found[token.id] = true;\n          uniqueTokens.push(token);\n        }\n        return true;\n      });\n    }\n    const filtered =\n      uniqueTokens && uniqueTokens.length > 0\n        ? uniqueTokens\n            .sort((tokenA, tokenB) => {\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1;\n            })\n            .filter((token) => {\n              if (GlobalConst.blacklists.TOKEN_BLACKLIST.includes(token.id)) {\n                return false;\n              }\n              const regexMatches = Object.keys(token).map((tokenEntryKey) => {\n                const isAddress = searchVal.slice(0, 2) === '0x';\n                if (tokenEntryKey === 'id' && isAddress) {\n                  return token[tokenEntryKey].match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  );\n                }\n                if (tokenEntryKey === 'symbol' && !isAddress) {\n                  return token[tokenEntryKey].match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  );\n                }\n                if (tokenEntryKey === 'name' && !isAddress) {\n                  return token[tokenEntryKey].match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  );\n                }\n                return false;\n              });\n              return regexMatches.some((m) => m);\n            })\n        : [];\n    return filtered;\n  }, [searchedTokens, searchVal]);\n\n  const filteredPairs = useMemo(() => {\n    const uniquePairs: any[] = [];\n    const pairsFound: any = {};\n    if (searchedPairs && searchedPairs.length > 0)\n      searchedPairs.map((pair) => {\n        if (!pairsFound[pair.id]) {\n          pairsFound[pair.id] = true;\n          uniquePairs.push(pair);\n        }\n        return true;\n      });\n\n    const filtered = uniquePairs\n      ? uniquePairs\n          .sort((pairA, pairB) => {\n            const pairAReserveETH = Number(pairA?.trackedReserveETH ?? 0);\n            const pairBReserveETH = Number(pairB?.trackedReserveETH ?? 0);\n            return pairAReserveETH > pairBReserveETH ? -1 : 1;\n          })\n          .filter((pair) => {\n            if (GlobalConst.blacklists.PAIR_BLACKLIST.includes(pair.id)) {\n              return false;\n            }\n            if (searchVal && searchVal.includes(' ')) {\n              const pairA = searchVal.split(' ')[0]?.toUpperCase();\n              const pairB = searchVal.split(' ')[1]?.toUpperCase();\n              return (\n                (pair.token0.symbol.includes(pairA) ||\n                  pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) ||\n                  pair.token1.symbol.includes(pairB))\n              );\n            }\n            if (searchVal && searchVal.includes('-')) {\n              const pairA = searchVal.split('-')[0]?.toUpperCase();\n              const pairB = searchVal.split('-')[1]?.toUpperCase();\n              return (\n                (pair.token0.symbol.includes(pairA) ||\n                  pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) ||\n                  pair.token1.symbol.includes(pairB))\n              );\n            }\n            const regexMatches = Object.keys(pair).map((field) => {\n              const isAddress = searchVal.slice(0, 2) === '0x';\n              if (field === 'id' && isAddress) {\n                return pair[field].match(\n                  new RegExp(escapeRegExp(searchVal), 'i'),\n                );\n              }\n              if (field === 'token0' || field === 'token1') {\n                return (\n                  pair[field].symbol.match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  ) ||\n                  pair[field].name.match(\n                    new RegExp(escapeRegExp(searchVal), 'i'),\n                  )\n                );\n              }\n              return false;\n            });\n            return regexMatches.some((m) => m);\n          })\n      : [];\n    return filtered;\n  }, [searchedPairs, searchVal]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const allTokensUniswap = await getAllTokensOnUniswap();\n        const allPairsUniswap = await getAllPairsOnUniswap();\n        let allTokens = allTokensUniswap ?? [];\n        let allPairs = allPairsUniswap ?? [];\n        if (searchVal.length > 0) {\n          const tokens = await client.query({\n            query: TOKEN_SEARCH,\n            variables: {\n              value: searchVal ? searchVal.toUpperCase() : '',\n              id: searchVal,\n            },\n          });\n\n          const pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: tokens.data.asSymbol?.map((t: any) => t.id),\n              id: searchVal,\n            },\n          });\n\n          const foundPairs = pairs.data.as0\n            .concat(pairs.data.as1)\n            .concat(pairs.data.asAddress);\n\n          allPairs = allPairs.concat(\n            foundPairs.filter((searchedPair: any) => {\n              let included = false;\n              allPairs.map((pair) => {\n                if (pair.id === searchedPair.id) {\n                  included = true;\n                }\n                return true;\n              });\n              return !included;\n            }),\n          );\n\n          const foundTokens = tokens.data.asSymbol\n            .concat(tokens.data.asAddress)\n            .concat(tokens.data.asName);\n\n          allTokens = allTokens.concat(\n            foundTokens.filter((searchedToken: any) => {\n              let included = false;\n              allTokens.map((token) => {\n                if (token.id === searchedToken.id) {\n                  included = true;\n                }\n                return true;\n              });\n              return !included;\n            }),\n          );\n        }\n\n        const foundTokensWithData = await Promise.all(\n          allTokens.map(async (token: any) => {\n            const utcCurrentTime = dayjs();\n            const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix();\n            const oneDayBlock = await getBlockFromTimestamp(utcOneDayBack);\n            const oneDayResult = await client.query({\n              query: TOKEN_INFO_OLD(oneDayBlock, token.id),\n              fetchPolicy: 'network-only',\n            });\n            if (\n              oneDayResult &&\n              oneDayResult.data &&\n              oneDayResult.data.tokens &&\n              oneDayResult.data.tokens.length > 0\n            ) {\n              const oneDayHistory = oneDayResult.data.tokens[0];\n              const oneDayVolumeUSD =\n                (token?.tradeVolumeUSD ?? 0) -\n                (oneDayHistory?.tradeVolumeUSD ?? 0);\n              return { ...token, oneDayVolumeUSD };\n            }\n            return token;\n          }),\n        );\n        setSearchedTokens(foundTokensWithData);\n        setSearchedPairs(allPairs);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchData();\n  }, [searchVal]);\n\n  const handleClick = (e: any) => {\n    if (\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\n    ) {\n      setPairsShown(3);\n      setTokensShown(3);\n      setMenuOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  return (\n    <Box className='searchWidgetWrapper'>\n      <Box className='searchWidgetInput'>\n        <input\n          placeholder={t('searchTokenPair')}\n          value={searchValInput}\n          ref={menuRef}\n          onFocus={() => setMenuOpen(true)}\n          onChange={(evt) => setSearchValInput(evt.target.value)}\n        />\n        <Box display='flex'>\n          <SearchIcon />\n        </Box>\n      </Box>\n      {menuOpen && (\n        <div ref={wrapperRef} className='searchWidgetContent'>\n          <h6>{t('pairs')}</h6>\n          {filteredPairs.slice(0, pairsShown).map((val, ind) => {\n            const currency0 = new Token(\n              MATIC_CHAIN,\n              getAddress(val.token0.id),\n              val.token0.decimals,\n            );\n            const currency1 = new Token(\n              MATIC_CHAIN,\n              getAddress(val.token1.id),\n              val.token1.decimals,\n            );\n            return (\n              <Box\n                key={ind}\n                className='searchWidgetRow'\n                onClick={() => {\n                  history.push(`/analytics/pair/${val.id}`);\n                  setMenuOpen(false);\n                }}\n              >\n                <DoubleCurrencyLogo\n                  currency0={currency0}\n                  currency1={currency1}\n                  size={28}\n                />\n                <small>\n                  {val.token0.symbol} - {val.token1.symbol} {t('pair')}\n                </small>\n              </Box>\n            );\n          })}\n          <Box\n            className='searchWidgetShowMore'\n            onClick={() => setPairsShown(pairsShown + 5)}\n          >\n            <small>{t('showMore')}</small>\n          </Box>\n          <h6>{t('tokens')}</h6>\n          {filteredTokens.slice(0, tokensShown).map((val, ind) => {\n            const currency = new Token(\n              MATIC_CHAIN,\n              getAddress(val.id),\n              val.decimals,\n            );\n            return (\n              <Box\n                key={ind}\n                className='searchWidgetRow'\n                onClick={() => {\n                  history.push(`/analytics/token/${val.id}`);\n                  setMenuOpen(false);\n                }}\n              >\n                <CurrencyLogo currency={currency} size='28px' />\n                <small>\n                  {val.name} {val.symbol}\n                </small>\n              </Box>\n            );\n          })}\n          <Box\n            className='searchWidgetShowMore'\n            onClick={() => setTokensShown(tokensShown + 5)}\n          >\n            <small>{t('showMore')}</small>\n          </Box>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(AnalyticsSearch);\n"]},"metadata":{},"sourceType":"module"}