{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/WalletModal/Option.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Option = _ref => {\n  _s();\n\n  let {\n    link = null,\n    onClick,\n    header,\n    subheader = null,\n    icon,\n    active = false,\n    id\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n\n  const content = /*#__PURE__*/_jsxDEV(Box, {\n    className: \"optionCardClickable\",\n    id: id,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex items-center\",\n      my: 0.5,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: 'Icon',\n        width: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: 8\n        },\n        children: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), active && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"optionConnectedDot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('connected')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), subheader && /*#__PURE__*/_jsxDEV(Box, {\n      my: 0.5,\n      width: 1,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: subheader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n\n  if (link) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"optionLink\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  return content;\n};\n\n_s(Option, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Option;\nexport default Option;\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/WalletModal/Option.tsx"],"names":["React","Box","useTranslation","Option","link","onClick","header","subheader","icon","active","id","t","content","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAeA,MAAMC,MAA6B,GAAG,QAQhC;AAAA;;AAAA,MARiC;AACrCC,IAAAA,IAAI,GAAG,IAD8B;AAErCC,IAAAA,OAFqC;AAGrCC,IAAAA,MAHqC;AAIrCC,IAAAA,SAAS,GAAG,IAJyB;AAKrCC,IAAAA,IALqC;AAMrCC,IAAAA,MAAM,GAAG,KAN4B;AAOrCC,IAAAA;AAPqC,GAQjC;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,EAA5B;;AACA,QAAMU,OAAO,gBACX,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,EAAE,EAAEF,EAAzC;AAA6C,IAAA,OAAO,EAAEL,OAAtD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,EAAE,EAAE,GAAvC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEG,IAAV;AAAgB,QAAA,GAAG,EAAE,MAArB;AAA6B,QAAA,KAAK,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,KAAK,EAAE;AAAEK,UAAAA,UAAU,EAAE;AAAd,SAAV;AAAA,kBAA8BP;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGG,MAAM,iBACL,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQE,CAAC,CAAC,WAAD;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAWGJ,SAAS,iBACR,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,GAAT;AAAc,MAAA,KAAK,EAAE,CAArB;AAAA,6BACE;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,MAAIH,IAAJ,EAAU;AACR,wBACE;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,qBAHN;AAIE,MAAA,SAAS,EAAC,YAJZ;AAAA,gBAMGQ;AANH;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,SAAOA,OAAP;AACD,CA3CD;;GAAMT,M;UASUD,c;;;KATVC,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\ninterface OptionProps {\n  link?: string | null;\n  clickable?: boolean;\n  size?: number | null;\n  onClick?: () => void;\n  color: string;\n  header: React.ReactNode;\n  subheader: React.ReactNode | null;\n  icon: string;\n  active?: boolean;\n  id: string;\n}\n\nconst Option: React.FC<OptionProps> = ({\n  link = null,\n  onClick,\n  header,\n  subheader = null,\n  icon,\n  active = false,\n  id,\n}) => {\n  const { t } = useTranslation();\n  const content = (\n    <Box className='optionCardClickable' id={id} onClick={onClick}>\n      <Box className='flex items-center' my={0.5}>\n        <img src={icon} alt={'Icon'} width={24} />\n        <p style={{ marginLeft: 8 }}>{header}</p>\n      </Box>\n      {active && (\n        <Box className='flex items-center'>\n          <Box className='optionConnectedDot' />\n          <small>{t('connected')}</small>\n        </Box>\n      )}\n      {subheader && (\n        <Box my={0.5} width={1}>\n          <span>{subheader}</span>\n        </Box>\n      )}\n    </Box>\n  );\n  if (link) {\n    return (\n      <a\n        href={link}\n        target='_blank'\n        rel='noopener noreferrer'\n        className='optionLink'\n      >\n        {content}\n      </a>\n    );\n  }\n\n  return content;\n};\n\nexport default Option;\n"]},"metadata":{},"sourceType":"module"}