{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/RewardSlider/RewardSliderItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { DoubleCurrencyLogo } from 'components';\nimport { ReactComponent as HelpIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/HelpIcon.svg\";\nimport { formatAPY, getAPYWithFee, getStakedAmountStakingInfo, getTVLStaking } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RewardSliderItem = _ref => {\n  _s();\n\n  var _info$tokens$0$symbol, _info$tokens$1$symbol, _info$oneDayFee;\n\n  let {\n    info,\n    stakingAPY\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory();\n  const stakedAmounts = getStakedAmountStakingInfo(info);\n  const tvl = getTVLStaking(stakedAmounts === null || stakedAmounts === void 0 ? void 0 : stakedAmounts.totalStakedUSD, stakedAmounts === null || stakedAmounts === void 0 ? void 0 : stakedAmounts.totalStakedBase);\n  const lpInfo = info;\n  const dualInfo = info;\n  const lprewards = lpInfo.rate * lpInfo.rewardTokenPrice;\n  const dualrewards = dualInfo.rateA * dualInfo.rewardTokenAPrice + dualInfo.rateB * dualInfo.rewardTokenBPrice;\n  let apyWithFee;\n\n  if (stakingAPY && stakingAPY > 0) {\n    var _info$perMonthReturnI;\n\n    apyWithFee = formatAPY(getAPYWithFee((_info$perMonthReturnI = info.perMonthReturnInRewards) !== null && _info$perMonthReturnI !== void 0 ? _info$perMonthReturnI : 0, stakingAPY));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"rewardsSliderItem bg-palette\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"rewardIcon\",\n        children: /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: info.tokens[0],\n          currency1: info.tokens[1],\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [(_info$tokens$0$symbol = info.tokens[0].symbol) === null || _info$tokens$0$symbol === void 0 ? void 0 : _info$tokens$0$symbol.toUpperCase(), \"-\", (_info$tokens$1$symbol = info.tokens[1].symbol) === null || _info$tokens$1$symbol === void 0 ? void 0 : _info$tokens$1$symbol.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray22\",\n        children: t('24hFees')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", ((_info$oneDayFee = info === null || info === void 0 ? void 0 : info.oneDayFee) !== null && _info$oneDayFee !== void 0 ? _info$oneDayFee : 0).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray22\",\n        children: t('rewards')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", (lprewards ? lprewards : dualrewards).toLocaleString(), \" / \", t('day')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray22\",\n        children: t('tvl')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tvl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray22\",\n        children: [t('apr'), /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"rewardApyWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: [apyWithFee, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: \"30px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        onClick: () => {\n          history.push(`/pools?currency0=${info.tokens[0].address}&currency1=${info.tokens[1].address}`);\n        },\n        children: t('depositLP')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RewardSliderItem, \"8pKm9cV0uTIUkUTmo7pWasI0KAY=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c = RewardSliderItem;\nexport default RewardSliderItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"RewardSliderItem\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/RewardSlider/RewardSliderItem.tsx"],"names":["React","Box","Button","useHistory","DoubleCurrencyLogo","formatAPY","getAPYWithFee","getStakedAmountStakingInfo","getTVLStaking","useTranslation","RewardSliderItem","info","stakingAPY","t","history","stakedAmounts","tvl","totalStakedUSD","totalStakedBase","lpInfo","dualInfo","lprewards","rate","rewardTokenPrice","dualrewards","rateA","rewardTokenAPrice","rateB","rewardTokenBPrice","apyWithFee","perMonthReturnInRewards","tokens","symbol","toUpperCase","oneDayFee","toLocaleString","push","address"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { DualStakingInfo, StakingInfo } from 'types';\nimport { DoubleCurrencyLogo } from 'components';\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon.svg';\nimport {\n  formatAPY,\n  getAPYWithFee,\n  getStakedAmountStakingInfo,\n  getTVLStaking,\n} from 'utils';\nimport { useTranslation } from 'react-i18next';\n\ninterface RewardSliderItemProps {\n  info: StakingInfo | DualStakingInfo;\n  stakingAPY: number;\n}\n\nconst RewardSliderItem: React.FC<RewardSliderItemProps> = ({\n  info,\n  stakingAPY,\n}) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const stakedAmounts = getStakedAmountStakingInfo(info);\n  const tvl = getTVLStaking(\n    stakedAmounts?.totalStakedUSD,\n    stakedAmounts?.totalStakedBase,\n  );\n\n  const lpInfo = info as StakingInfo;\n  const dualInfo = info as DualStakingInfo;\n  const lprewards = lpInfo.rate * lpInfo.rewardTokenPrice;\n  const dualrewards =\n    dualInfo.rateA * dualInfo.rewardTokenAPrice +\n    dualInfo.rateB * dualInfo.rewardTokenBPrice;\n\n  let apyWithFee;\n  if (stakingAPY && stakingAPY > 0) {\n    apyWithFee = formatAPY(\n      getAPYWithFee(info.perMonthReturnInRewards ?? 0, stakingAPY),\n    );\n  }\n\n  return (\n    <Box className='rewardsSliderItem bg-palette'>\n      <Box mb={4}>\n        <Box className='rewardIcon'>\n          <DoubleCurrencyLogo\n            currency0={info.tokens[0]}\n            currency1={info.tokens[1]}\n            size={32}\n          />\n        </Box>\n        <h5>\n          {info.tokens[0].symbol?.toUpperCase()}-\n          {info.tokens[1].symbol?.toUpperCase()}\n        </h5>\n      </Box>\n      <Box className='row'>\n        <p className='text-gray22'>{t('24hFees')}</p>\n        <p>${(info?.oneDayFee ?? 0).toLocaleString()}</p>\n      </Box>\n      <Box className='row'>\n        <p className='text-gray22'>{t('rewards')}</p>\n        <p>\n          ${(lprewards ? lprewards : dualrewards).toLocaleString()} / {t('day')}\n        </p>\n      </Box>\n      <Box className='row'>\n        <p className='text-gray22'>{t('tvl')}</p>\n        <p>{tvl}</p>\n      </Box>\n      <Box className='row'>\n        <p className='text-gray22'>\n          {t('apr')}\n          <HelpIcon />\n        </p>\n        <Box className='rewardApyWrapper'>\n          <p className='text-success'>{apyWithFee}%</p>\n        </Box>\n      </Box>\n      <Box mt='30px'>\n        <Button\n          fullWidth\n          onClick={() => {\n            history.push(\n              `/pools?currency0=${info.tokens[0].address}&currency1=${info.tokens[1].address}`,\n            );\n          }}\n        >\n          {t('depositLP')}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default RewardSliderItem;\n"]},"metadata":{},"sourceType":"module"}