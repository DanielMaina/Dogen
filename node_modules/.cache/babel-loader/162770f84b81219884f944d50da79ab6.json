{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/DragonPage/DragonsLair.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { useOldLairInfo, useNewLairInfo } from 'state/stake/hooks';\nimport { CurrencyLogo, StakeQuickModal, UnstakeQuickModal } from 'components';\nimport { ReactComponent as PriceExchangeIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/PriceExchangeIcon.svg\";\nimport { formatTokenAmount, useLairDQUICKAPY } from 'utils';\nimport { useUSDCPriceToken } from 'utils/useUSDCPrice';\nimport { useTranslation } from 'react-i18next';\nimport { GlobalValue } from 'constants/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragonsLair = _ref => {\n  _s();\n\n  var _lairInfoToUse$dQUICK, _lairInfoToUse$QUICKt;\n\n  let {\n    isNew\n  } = _ref;\n  const quickToken = isNew ? GlobalValue.tokens.COMMON.NEW_QUICK : GlobalValue.tokens.COMMON.OLD_QUICK;\n  const quickPrice = useUSDCPriceToken(quickToken);\n  const [isQUICKRate, setIsQUICKRate] = useState(false);\n  const [openStakeModal, setOpenStakeModal] = useState(false);\n  const [openUnstakeModal, setOpenUnstakeModal] = useState(false);\n  const lairInfo = useOldLairInfo();\n  const newLairInfo = useNewLairInfo();\n  const lairInfoToUse = isNew ? newLairInfo : lairInfo;\n  const APY = useLairDQUICKAPY(isNew, lairInfoToUse);\n  const dQUICKtoQUICK = (_lairInfoToUse$dQUICK = lairInfoToUse.dQUICKtoQUICK) === null || _lairInfoToUse$dQUICK === void 0 ? void 0 : _lairInfoToUse$dQUICK.toFixed(4, {\n    groupSeparator: ','\n  });\n  const QUICKtodQUICK = (_lairInfoToUse$QUICKt = lairInfoToUse.QUICKtodQUICK) === null || _lairInfoToUse$QUICKt === void 0 ? void 0 : _lairInfoToUse$QUICKt.toFixed(4, {\n    groupSeparator: ','\n  });\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    zIndex: 3,\n    children: [openStakeModal && /*#__PURE__*/_jsxDEV(StakeQuickModal, {\n      open: openStakeModal,\n      onClose: () => setOpenStakeModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), openUnstakeModal && /*#__PURE__*/_jsxDEV(UnstakeQuickModal, {\n      open: openUnstakeModal,\n      onClose: () => setOpenUnstakeModal(false),\n      isNew: isNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        currency: quickToken,\n        size: \"32px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 1.5,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small line-height-1\",\n          children: \"QUICK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-hint\",\n          children: t('stakeQUICKTitle')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"dragonLairRow\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [t('total'), \" QUICK\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: lairInfoToUse ? lairInfoToUse.totalQuickBalance.toFixed(2, {\n          groupSeparator: ','\n        }) : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"dragonLairRow\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('tvl')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"$\", (Number(lairInfoToUse.totalQuickBalance.toExact()) * quickPrice).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"dragonLairRow\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('apy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-success\",\n        children: [APY, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"dragonLairRow\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('yourdeposits')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: formatTokenAmount(lairInfoToUse.QUICKBalance)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"quickTodQuick border-secondary1\",\n      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        currency: quickToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          margin: '0 8px'\n        },\n        children: [isQUICKRate ? 1 : dQUICKtoQUICK.toLocaleString(), \" QUICK =\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        currency: quickToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          margin: '0 8px'\n        },\n        children: [isQUICKRate ? QUICKtodQUICK.toLocaleString() : 1, \" dQUICK\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PriceExchangeIcon, {\n        className: \"cursor-pointer\",\n        onClick: () => setIsQUICKRate(!isQUICKRate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), !isNew && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"stakeButton bg-primary\",\n      onClick: () => setOpenStakeModal(true),\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('stake')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"stakeButton bg-transparent\",\n      onClick: () => setOpenUnstakeModal(true),\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: t('unstake')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-secondary\",\n        children: t('unstakeQUICKDesc')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DragonsLair, \"h7tGfvwGJhMjn2eAnoKOE38B6bs=\", false, function () {\n  return [useUSDCPriceToken, useOldLairInfo, useNewLairInfo, useLairDQUICKAPY, useTranslation];\n});\n\n_c = DragonsLair;\nexport default DragonsLair;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragonsLair\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/DragonPage/DragonsLair.tsx"],"names":["React","useState","Box","useOldLairInfo","useNewLairInfo","CurrencyLogo","StakeQuickModal","UnstakeQuickModal","formatTokenAmount","useLairDQUICKAPY","useUSDCPriceToken","useTranslation","GlobalValue","DragonsLair","isNew","quickToken","tokens","COMMON","NEW_QUICK","OLD_QUICK","quickPrice","isQUICKRate","setIsQUICKRate","openStakeModal","setOpenStakeModal","openUnstakeModal","setOpenUnstakeModal","lairInfo","newLairInfo","lairInfoToUse","APY","dQUICKtoQUICK","toFixed","groupSeparator","QUICKtodQUICK","t","totalQuickBalance","Number","toExact","toLocaleString","QUICKBalance","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport { useOldLairInfo, useNewLairInfo } from 'state/stake/hooks';\nimport { CurrencyLogo, StakeQuickModal, UnstakeQuickModal } from 'components';\nimport { ReactComponent as PriceExchangeIcon } from 'assets/images/PriceExchangeIcon.svg';\nimport { formatTokenAmount, useLairDQUICKAPY } from 'utils';\nimport { useUSDCPriceToken } from 'utils/useUSDCPrice';\nimport { useTranslation } from 'react-i18next';\nimport { GlobalValue } from 'constants/index';\n\nconst DragonsLair: React.FC<{ isNew: boolean }> = ({ isNew }) => {\n  const quickToken = isNew\n    ? GlobalValue.tokens.COMMON.NEW_QUICK\n    : GlobalValue.tokens.COMMON.OLD_QUICK;\n  const quickPrice = useUSDCPriceToken(quickToken);\n  const [isQUICKRate, setIsQUICKRate] = useState(false);\n  const [openStakeModal, setOpenStakeModal] = useState(false);\n  const [openUnstakeModal, setOpenUnstakeModal] = useState(false);\n  const lairInfo = useOldLairInfo();\n  const newLairInfo = useNewLairInfo();\n  const lairInfoToUse = isNew ? newLairInfo : lairInfo;\n  const APY = useLairDQUICKAPY(isNew, lairInfoToUse);\n  const dQUICKtoQUICK = lairInfoToUse.dQUICKtoQUICK?.toFixed(4, {\n    groupSeparator: ',',\n  });\n  const QUICKtodQUICK = lairInfoToUse.QUICKtodQUICK?.toFixed(4, {\n    groupSeparator: ',',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Box position='relative' zIndex={3}>\n      {openStakeModal && (\n        <StakeQuickModal\n          open={openStakeModal}\n          onClose={() => setOpenStakeModal(false)}\n        />\n      )}\n      {openUnstakeModal && (\n        <UnstakeQuickModal\n          open={openUnstakeModal}\n          onClose={() => setOpenUnstakeModal(false)}\n          isNew={isNew}\n        />\n      )}\n      <Box display='flex'>\n        <CurrencyLogo currency={quickToken} size='32px' />\n        <Box ml={1.5}>\n          <p className='small line-height-1'>QUICK</p>\n          <span className='text-hint'>{t('stakeQUICKTitle')}</span>\n        </Box>\n      </Box>\n      <Box className='dragonLairRow'>\n        <small>{t('total')} QUICK</small>\n        <small>\n          {lairInfoToUse\n            ? lairInfoToUse.totalQuickBalance.toFixed(2, {\n                groupSeparator: ',',\n              })\n            : 0}\n        </small>\n      </Box>\n      <Box className='dragonLairRow'>\n        <small>{t('tvl')}</small>\n        <small>\n          $\n          {(\n            Number(lairInfoToUse.totalQuickBalance.toExact()) * quickPrice\n          ).toLocaleString()}\n        </small>\n      </Box>\n      <Box className='dragonLairRow'>\n        <small>{t('apy')}</small>\n        <small className='text-success'>{APY}%</small>\n      </Box>\n      <Box className='dragonLairRow'>\n        <small>{t('yourdeposits')}</small>\n        <small>{formatTokenAmount(lairInfoToUse.QUICKBalance)}</small>\n      </Box>\n      <Box className='quickTodQuick border-secondary1'>\n        <CurrencyLogo currency={quickToken} />\n        <small style={{ margin: '0 8px' }}>\n          {isQUICKRate ? 1 : dQUICKtoQUICK.toLocaleString()} QUICK =\n        </small>\n        <CurrencyLogo currency={quickToken} />\n        <small style={{ margin: '0 8px' }}>\n          {isQUICKRate ? QUICKtodQUICK.toLocaleString() : 1} dQUICK\n        </small>\n        <PriceExchangeIcon\n          className='cursor-pointer'\n          onClick={() => setIsQUICKRate(!isQUICKRate)}\n        />\n      </Box>\n      {!isNew && (\n        <Box\n          className='stakeButton bg-primary'\n          onClick={() => setOpenStakeModal(true)}\n        >\n          <small>{t('stake')}</small>\n        </Box>\n      )}\n      <Box\n        className='stakeButton bg-transparent'\n        onClick={() => setOpenUnstakeModal(true)}\n      >\n        <small>{t('unstake')}</small>\n      </Box>\n      <Box mt={3} textAlign='center'>\n        <span className='text-secondary'>{t('unstakeQUICKDesc')}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DragonsLair;\n"]},"metadata":{},"sourceType":"module"}