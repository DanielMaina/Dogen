{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/RemoveLiquidityModal/RemoveLiquidityModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { ArrowLeft, ArrowDown } from 'react-feather';\nimport { Box, Button } from '@material-ui/core';\nimport { ETHER, JSBI, Percent } from '@uniswap/sdk';\nimport ReactGA from 'react-ga';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { GlobalConst } from 'constants/index';\nimport { CustomModal, DoubleCurrencyLogo, ColoredSlider, CurrencyLogo, TransactionConfirmationModal, TransactionErrorContent, ConfirmationModalContent, NumericalInput } from 'components';\nimport { useDerivedBurnInfo, useBurnState, useBurnActionHandlers } from 'state/burn/hooks';\nimport { Field } from 'state/burn/actions';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { useTransactionAdder, useTransactionFinalizer } from 'state/transactions/hooks';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairContract } from 'hooks/useContract';\nimport { calculateGasMargin, calculateSlippageAmount, formatTokenAmount } from 'utils';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport { useApproveCallback, ApprovalState } from 'hooks/useApproveCallback';\nimport { useRouterContract } from 'hooks/useContract';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useTotalSupply } from 'data/TotalSupply';\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/CloseIcon.svg\";\nimport 'components/styles/RemoveLiquidityModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RemoveLiquidityModal = _ref => {\n  _s();\n\n  var _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _pair$liquidityToken;\n\n  let {\n    currency0,\n    currency1,\n    open,\n    onClose\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [txPending, setTxPending] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false);\n  const [removeErrorMessage, setRemoveErrorMessage] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [txHash, setTxHash] = useState('');\n  const addTransaction = useTransactionAdder();\n  const finalizedTransaction = useTransactionFinalizer();\n  const {\n    chainId,\n    account,\n    library\n  } = useActiveWeb3React();\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currency0, chainId), wrappedCurrency(currency1, chainId)], [currency0, currency1, chainId]);\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error\n  } = useDerivedBurnInfo(currency0, currency1);\n  const deadline = useTransactionDeadline();\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const onUserInput = useCallback((field, typedValue) => {\n    return _onUserInput(field, typedValue);\n  }, [_onUserInput]);\n  const onLiquidityInput = useCallback(typedValue => onUserInput(Field.LIQUIDITY, typedValue), [onUserInput]);\n  const liquidityPercentChangeCallback = useCallback(value => {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback);\n  const userPoolBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const totalPoolTokens = useTotalSupply(pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const poolTokenPercentage = !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw) ? new Percent(userPoolBalance.raw, totalPoolTokens.raw) : undefined;\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toExact()) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toExact()) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toExact()) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  };\n  const [token0Deposited, token1Deposited] = !!pair && !!totalPoolTokens && !!userPoolBalance && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw) ? [pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false), pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false)] : [undefined, undefined];\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address);\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], chainId ? GlobalConst.addresses.ROUTER_ADDRESS[chainId] : undefined);\n\n  const onAttemptToApprove = async () => {\n    if (!pairContract || !pair || !library || !deadline) {\n      setErrorMsg(t('missingdependencies'));\n      return;\n    }\n\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n\n    if (!liquidityAmount) {\n      setErrorMsg(t('missingliquidity'));\n      return;\n    }\n\n    setApproving(true);\n\n    try {\n      await approveCallback();\n      setApproving(false);\n    } catch (e) {\n      setApproving(false);\n    }\n  };\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    setTxHash('');\n  }, []);\n  const router = useRouterContract();\n\n  const onRemove = async () => {\n    if (!chainId || !library || !account || !deadline || !router) throw new Error(t('missingdependencies'));\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error(t('noInputAmounts'));\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error(t('noLiquidity'));\n    const currencyBIsETH = currency1 === ETHER;\n    const oneCurrencyIsETH = currency0 === ETHER || currencyBIsETH;\n    if (!tokenA || !tokenB) throw new Error(t('cannotWrap'));\n    let methodNames, args; // we have approval, use normal remove liquidity\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens'];\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadline.toHexString()];\n      } // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity'];\n        args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      }\n    } else {\n      throw new Error(t('confirmWithoutApproval'));\n    }\n\n    const safeGasEstimates = await Promise.all(methodNames.map(methodName => router.estimateGas[methodName](...args).then(calculateGasMargin).catch(error => {\n      console.error(`estimateGas failed`, methodName, args, error);\n      return undefined;\n    })));\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate => BigNumber.isBigNumber(safeGasEstimate)); // all estimations failed...\n\n    if (indexOfSuccessfulEstimation === -1) {\n      throw new Error(t('transactionWouldFail'));\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then(async response => {\n        setAttemptingTxn(false);\n        setTxPending(true);\n        const summary = t('removeLiquidityMsg', {\n          amount1: formatTokenAmount(parsedAmounts[Field.CURRENCY_A]),\n          symbol1: currency0.symbol,\n          amount2: formatTokenAmount(parsedAmounts[Field.CURRENCY_B]),\n          symbol2: currency1.symbol\n        });\n        addTransaction(response, {\n          summary\n        });\n        setTxHash(response.hash);\n\n        try {\n          const receipt = await response.wait();\n          finalizedTransaction(receipt, {\n            summary\n          });\n          setTxPending(false);\n        } catch (error) {\n          setTxPending(false);\n          setRemoveErrorMessage(t('errorInTx'));\n        }\n\n        ReactGA.event({\n          category: 'Liquidity',\n          action: 'Remove',\n          label: [currency0.symbol, currency1.symbol].join('/')\n        });\n      }).catch(error => {\n        setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        console.error(error);\n      });\n    }\n  };\n\n  const modalHeader = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center\",\n        mt: 10,\n        mb: 3,\n        children: /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: currency0,\n          currency1: currency1,\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 6,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"weight-600\",\n          children: [t('removingLP', {\n            amount: formattedAmounts[Field.LIQUIDITY],\n            symbol1: currency0.symbol,\n            symbol2: currency1.symbol\n          }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), t('youwillreceive'), ' ', formatTokenAmount(parsedAmounts[Field.CURRENCY_A]), ' ', currency0.symbol, \" \", t('and'), ' ', formatTokenAmount(parsedAmounts[Field.CURRENCY_B]), ' ', currency1.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 3,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-secondary\",\n          children: t('outputEstimated', {\n            slippage: allowedSlippage / 100\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          className: \"removeButton\",\n          onClick: onRemove,\n          children: t('confirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomModal, {\n    open: open,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      paddingX: 3,\n      paddingY: 4,\n      children: [showConfirm && /*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n        isOpen: showConfirm,\n        onDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        txPending: txPending,\n        hash: txHash,\n        content: () => removeErrorMessage ? /*#__PURE__*/_jsxDEV(TransactionErrorContent, {\n          onDismiss: handleDismissConfirmation,\n          message: removeErrorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title: t('removingLiquidity'),\n          onDismiss: handleDismissConfirmation,\n          content: modalHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }, this),\n        pendingText: \"\",\n        modalContent: txPending ? t('submittedTxRemoveLiquidity') : t('successRemovedLiquidity')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"text-secondary cursor-pointer\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: t('removeLiquidity')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"cursor-pointer\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"removeLiquidityInput\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: [currency0.symbol, \" / \", currency1.symbol, \" LP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [t('balance'), \": \", formatTokenAmount(userPoolBalance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(NumericalInput, {\n            placeholder: \"0\",\n            value: formattedAmounts[Field.LIQUIDITY],\n            fontSize: 28,\n            onUserInput: value => {\n              onLiquidityInput(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            flex: 1,\n            mr: 2,\n            mt: 0.5,\n            children: /*#__PURE__*/_jsxDEV(ColoredSlider, {\n              min: 1,\n              max: 100,\n              step: 1,\n              value: innerLiquidityPercentage,\n              handleChange: (event, value) => setInnerLiquidityPercentage(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center\",\n        my: 3,\n        children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n          className: \"text-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"removeLiquidityInfo bg-secondary1\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [t('pooled'), \" \", currency0.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatTokenAmount(token0Deposited)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue7\",\n            children: [\"- \", t('withdraw'), \" \", currency0.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue7\",\n            children: formattedAmounts[Field.CURRENCY_A]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [t('pooled'), \" \", currency1.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatTokenAmount(token1Deposited)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue7\",\n            children: [\"- \", t('withdraw'), \" \", currency1.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue7\",\n            children: formattedAmounts[Field.CURRENCY_B]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: t('yourPoolShare')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: poolTokenPercentage ? poolTokenPercentage.toSignificant() + '%' : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), pair && /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-between items-center\",\n        mt: 2,\n        px: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"1 \", currency0.symbol, \" =\", ' ', tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', ' ', currency1.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"1 \", currency1.symbol, \" =\", ' ', tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', ' ', currency0.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"removeButton\",\n          onClick: onAttemptToApprove,\n          disabled: approving || approval !== ApprovalState.NOT_APPROVED,\n          children: approving ? `${t('approving')}...` : approval === ApprovalState.APPROVED ? t('approved') : t('approve')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"removeButton\",\n          onClick: () => {\n            setShowConfirm(true);\n          },\n          disabled: Boolean(error) || approval !== ApprovalState.APPROVED,\n          children: error || t('remove')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-error\",\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RemoveLiquidityModal, \"FVtzsPtjRDlnGyEHfK0SqcojljA=\", false, function () {\n  return [useTranslation, useTransactionAdder, useTransactionFinalizer, useActiveWeb3React, useBurnState, useDerivedBurnInfo, useTransactionDeadline, useBurnActionHandlers, useUserSlippageTolerance, useDebouncedChangeHandler, useTokenBalance, useTotalSupply, usePairContract, useApproveCallback, useRouterContract];\n});\n\n_c = RemoveLiquidityModal;\nexport default RemoveLiquidityModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveLiquidityModal\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/RemoveLiquidityModal/RemoveLiquidityModal.tsx"],"names":["React","useState","useMemo","useCallback","ArrowLeft","ArrowDown","Box","Button","ETHER","JSBI","Percent","ReactGA","BigNumber","GlobalConst","CustomModal","DoubleCurrencyLogo","ColoredSlider","CurrencyLogo","TransactionConfirmationModal","TransactionErrorContent","ConfirmationModalContent","NumericalInput","useDerivedBurnInfo","useBurnState","useBurnActionHandlers","Field","useUserSlippageTolerance","useTransactionAdder","useTransactionFinalizer","useTokenBalance","useActiveWeb3React","usePairContract","calculateGasMargin","calculateSlippageAmount","formatTokenAmount","useDebouncedChangeHandler","useTransactionDeadline","useApproveCallback","ApprovalState","useRouterContract","wrappedCurrency","useTotalSupply","useTranslation","RemoveLiquidityModal","currency0","currency1","open","onClose","t","showConfirm","setShowConfirm","txPending","setTxPending","approving","setApproving","attemptingTxn","setAttemptingTxn","removeErrorMessage","setRemoveErrorMessage","errorMsg","setErrorMsg","txHash","setTxHash","addTransaction","finalizedTransaction","chainId","account","library","tokenA","tokenB","independentField","typedValue","pair","parsedAmounts","error","deadline","onUserInput","_onUserInput","allowedSlippage","field","onLiquidityInput","LIQUIDITY","liquidityPercentChangeCallback","value","LIQUIDITY_PERCENT","toString","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","parseInt","toFixed","userPoolBalance","undefined","liquidityToken","totalPoolTokens","poolTokenPercentage","greaterThanOrEqual","raw","formattedAmounts","equalTo","lessThan","toExact","CURRENCY_A","CURRENCY_B","token0Deposited","token1Deposited","getLiquidityValue","token0","token1","pairContract","address","approval","approveCallback","addresses","ROUTER_ADDRESS","onAttemptToApprove","liquidityAmount","e","handleDismissConfirmation","router","onRemove","Error","currencyAmountA","currencyAmountB","amountsMin","currencyBIsETH","oneCurrencyIsETH","methodNames","args","APPROVED","toHexString","safeGasEstimates","Promise","all","map","methodName","estimateGas","then","catch","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","summary","amount1","symbol1","symbol","amount2","symbol2","hash","receipt","wait","event","category","action","label","join","modalHeader","amount","slippage","toSignificant","priceOf","NOT_APPROVED","Boolean"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport { Contract } from '@ethersproject/contracts';\nimport { ArrowLeft, ArrowDown } from 'react-feather';\nimport { Box, Button } from '@material-ui/core';\nimport { Currency, ETHER, JSBI, Percent } from '@uniswap/sdk';\nimport ReactGA from 'react-ga';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { GlobalConst } from 'constants/index';\nimport {\n  CustomModal,\n  DoubleCurrencyLogo,\n  ColoredSlider,\n  CurrencyLogo,\n  TransactionConfirmationModal,\n  TransactionErrorContent,\n  ConfirmationModalContent,\n  NumericalInput,\n} from 'components';\nimport {\n  useDerivedBurnInfo,\n  useBurnState,\n  useBurnActionHandlers,\n} from 'state/burn/hooks';\nimport { Field } from 'state/burn/actions';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport {\n  useTransactionAdder,\n  useTransactionFinalizer,\n} from 'state/transactions/hooks';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { useActiveWeb3React } from 'hooks';\nimport { usePairContract } from 'hooks/useContract';\nimport {\n  calculateGasMargin,\n  calculateSlippageAmount,\n  formatTokenAmount,\n} from 'utils';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport { useApproveCallback, ApprovalState } from 'hooks/useApproveCallback';\nimport { useRouterContract } from 'hooks/useContract';\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\nimport { useTotalSupply } from 'data/TotalSupply';\nimport { ReactComponent as CloseIcon } from 'assets/images/CloseIcon.svg';\nimport 'components/styles/RemoveLiquidityModal.scss';\nimport { useTranslation } from 'react-i18next';\n\ninterface RemoveLiquidityModalProps {\n  currency0: Currency;\n  currency1: Currency;\n  open: boolean;\n  onClose: () => void;\n}\n\nconst RemoveLiquidityModal: React.FC<RemoveLiquidityModalProps> = ({\n  currency0,\n  currency1,\n  open,\n  onClose,\n}) => {\n  const { t } = useTranslation();\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [txPending, setTxPending] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false);\n  const [removeErrorMessage, setRemoveErrorMessage] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [txHash, setTxHash] = useState('');\n  const addTransaction = useTransactionAdder();\n  const finalizedTransaction = useTransactionFinalizer();\n  const { chainId, account, library } = useActiveWeb3React();\n  const [tokenA, tokenB] = useMemo(\n    () => [\n      wrappedCurrency(currency0, chainId),\n      wrappedCurrency(currency1, chainId),\n    ],\n    [currency0, currency1, chainId],\n  );\n\n  const { independentField, typedValue } = useBurnState();\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(\n    currency0,\n    currency1,\n  );\n  const deadline = useTransactionDeadline();\n  const { onUserInput: _onUserInput } = useBurnActionHandlers();\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      return _onUserInput(field, typedValue);\n    },\n    [_onUserInput],\n  );\n\n  const onLiquidityInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n    [onUserInput],\n  );\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n    },\n    [onUserInput],\n  );\n\n  const [\n    innerLiquidityPercentage,\n    setInnerLiquidityPercentage,\n  ] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback,\n  );\n  const userPoolBalance = useTokenBalance(\n    account ?? undefined,\n    pair?.liquidityToken,\n  );\n  const totalPoolTokens = useTotalSupply(pair?.liquidityToken);\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined;\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo(\n      '0',\n    )\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY\n        ? typedValue\n        : parsedAmounts[Field.LIQUIDITY]?.toExact() ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A\n        ? typedValue\n        : parsedAmounts[Field.CURRENCY_A]?.toExact() ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B\n        ? typedValue\n        : parsedAmounts[Field.CURRENCY_B]?.toExact() ?? '',\n  };\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(\n            pair.token0,\n            totalPoolTokens,\n            userPoolBalance,\n            false,\n          ),\n          pair.getLiquidityValue(\n            pair.token1,\n            totalPoolTokens,\n            userPoolBalance,\n            false,\n          ),\n        ]\n      : [undefined, undefined];\n\n  const pairContract: Contract | null = usePairContract(\n    pair?.liquidityToken?.address,\n  );\n  const [approval, approveCallback] = useApproveCallback(\n    parsedAmounts[Field.LIQUIDITY],\n    chainId ? GlobalConst.addresses.ROUTER_ADDRESS[chainId] : undefined,\n  );\n  const onAttemptToApprove = async () => {\n    if (!pairContract || !pair || !library || !deadline) {\n      setErrorMsg(t('missingdependencies'));\n      return;\n    }\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) {\n      setErrorMsg(t('missingliquidity'));\n      return;\n    }\n    setApproving(true);\n    try {\n      await approveCallback();\n      setApproving(false);\n    } catch (e) {\n      setApproving(false);\n    }\n  };\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    setTxHash('');\n  }, []);\n\n  const router = useRouterContract();\n\n  const onRemove = async () => {\n    if (!chainId || !library || !account || !deadline || !router)\n      throw new Error(t('missingdependencies'));\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB,\n    } = parsedAmounts;\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error(t('noInputAmounts'));\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(\n        currencyAmountA,\n        allowedSlippage,\n      )[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(\n        currencyAmountB,\n        allowedSlippage,\n      )[0],\n    };\n\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error(t('noLiquidity'));\n\n    const currencyBIsETH = currency1 === ETHER;\n    const oneCurrencyIsETH = currency0 === ETHER || currencyBIsETH;\n\n    if (!tokenA || !tokenB) throw new Error(t('cannotWrap'));\n\n    let methodNames: string[],\n      args: Array<string | string[] | number | boolean>;\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = [\n          'removeLiquidityETH',\n          'removeLiquidityETHSupportingFeeOnTransferTokens',\n        ];\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[\n            currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B\n          ].toString(),\n          amountsMin[\n            currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A\n          ].toString(),\n          account,\n          deadline.toHexString(),\n        ];\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity'];\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ];\n      }\n    } else {\n      throw new Error(t('confirmWithoutApproval'));\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((error) => {\n            console.error(`estimateGas failed`, methodName, args, error);\n            return undefined;\n          }),\n      ),\n    );\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(\n      (safeGasEstimate) => BigNumber.isBigNumber(safeGasEstimate),\n    );\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      throw new Error(t('transactionWouldFail'));\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then(async (response: TransactionResponse) => {\n          setAttemptingTxn(false);\n          setTxPending(true);\n          const summary = t('removeLiquidityMsg', {\n            amount1: formatTokenAmount(parsedAmounts[Field.CURRENCY_A]),\n            symbol1: currency0.symbol,\n            amount2: formatTokenAmount(parsedAmounts[Field.CURRENCY_B]),\n            symbol2: currency1.symbol,\n          });\n\n          addTransaction(response, {\n            summary,\n          });\n\n          setTxHash(response.hash);\n\n          try {\n            const receipt = await response.wait();\n            finalizedTransaction(receipt, {\n              summary,\n            });\n            setTxPending(false);\n          } catch (error) {\n            setTxPending(false);\n            setRemoveErrorMessage(t('errorInTx'));\n          }\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Remove',\n            label: [currency0.symbol, currency1.symbol].join('/'),\n          });\n        })\n        .catch((error: Error) => {\n          setAttemptingTxn(false);\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(error);\n        });\n    }\n  };\n\n  const modalHeader = () => {\n    return (\n      <Box>\n        <Box className='flex justify-center' mt={10} mb={3}>\n          <DoubleCurrencyLogo\n            currency0={currency0}\n            currency1={currency1}\n            size={48}\n          />\n        </Box>\n        <Box mb={6} textAlign='center'>\n          <p className='weight-600'>\n            {t('removingLP', {\n              amount: formattedAmounts[Field.LIQUIDITY],\n              symbol1: currency0.symbol,\n              symbol2: currency1.symbol,\n            })}\n            <br />\n            {t('youwillreceive')}{' '}\n            {formatTokenAmount(parsedAmounts[Field.CURRENCY_A])}{' '}\n            {currency0.symbol} {t('and')}{' '}\n            {formatTokenAmount(parsedAmounts[Field.CURRENCY_B])}{' '}\n            {currency1.symbol}\n          </p>\n        </Box>\n        <Box mb={3} textAlign='center'>\n          <small className='text-secondary'>\n            {t('outputEstimated', { slippage: allowedSlippage / 100 })}\n          </small>\n        </Box>\n        <Box mt={2}>\n          <Button fullWidth className='removeButton' onClick={onRemove}>\n            {t('confirm')}\n          </Button>\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <CustomModal open={open} onClose={onClose}>\n      <Box paddingX={3} paddingY={4}>\n        {showConfirm && (\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            txPending={txPending}\n            hash={txHash}\n            content={() =>\n              removeErrorMessage ? (\n                <TransactionErrorContent\n                  onDismiss={handleDismissConfirmation}\n                  message={removeErrorMessage}\n                />\n              ) : (\n                <ConfirmationModalContent\n                  title={t('removingLiquidity')}\n                  onDismiss={handleDismissConfirmation}\n                  content={modalHeader}\n                />\n              )\n            }\n            pendingText=''\n            modalContent={\n              txPending\n                ? t('submittedTxRemoveLiquidity')\n                : t('successRemovedLiquidity')\n            }\n          />\n        )}\n        <Box className='flex items-center justify-between'>\n          <ArrowLeft\n            className='text-secondary cursor-pointer'\n            onClick={onClose}\n          />\n          <h6>{t('removeLiquidity')}</h6>\n          <CloseIcon className='cursor-pointer' onClick={onClose} />\n        </Box>\n        <Box className='removeLiquidityInput'>\n          <Box className='flex items-center justify-between'>\n            <small>\n              {currency0.symbol} / {currency1.symbol} LP\n            </small>\n            <small>\n              {t('balance')}: {formatTokenAmount(userPoolBalance)}\n            </small>\n          </Box>\n          <Box mt={2}>\n            <NumericalInput\n              placeholder='0'\n              value={formattedAmounts[Field.LIQUIDITY]}\n              fontSize={28}\n              onUserInput={(value) => {\n                onLiquidityInput(value);\n              }}\n            />\n          </Box>\n          <Box className='flex items-center'>\n            <Box flex={1} mr={2} mt={0.5}>\n              <ColoredSlider\n                min={1}\n                max={100}\n                step={1}\n                value={innerLiquidityPercentage}\n                handleChange={(event, value) =>\n                  setInnerLiquidityPercentage(value as number)\n                }\n              />\n            </Box>\n            <small>{formattedAmounts[Field.LIQUIDITY_PERCENT]}%</small>\n          </Box>\n        </Box>\n        <Box className='flex justify-center' my={3}>\n          <ArrowDown className='text-secondary' />\n        </Box>\n        <Box className='removeLiquidityInfo bg-secondary1'>\n          <Box>\n            <p>\n              {t('pooled')} {currency0.symbol}\n            </p>\n            <Box>\n              <p>{formatTokenAmount(token0Deposited)}</p>\n              <CurrencyLogo currency={currency0} />\n            </Box>\n          </Box>\n          <Box>\n            <p className='text-blue7'>\n              - {t('withdraw')} {currency0.symbol}\n            </p>\n            <p className='text-blue7'>{formattedAmounts[Field.CURRENCY_A]}</p>\n          </Box>\n          <Box>\n            <p>\n              {t('pooled')} {currency1.symbol}\n            </p>\n            <Box>\n              <p>{formatTokenAmount(token1Deposited)}</p>\n              <CurrencyLogo currency={currency1} />\n            </Box>\n          </Box>\n          <Box>\n            <p className='text-blue7'>\n              - {t('withdraw')} {currency1.symbol}\n            </p>\n            <p className='text-blue7'>{formattedAmounts[Field.CURRENCY_B]}</p>\n          </Box>\n          <Box>\n            <p>{t('yourPoolShare')}</p>\n            <p>\n              {poolTokenPercentage\n                ? poolTokenPercentage.toSignificant() + '%'\n                : '-'}\n            </p>\n          </Box>\n        </Box>\n        {pair && (\n          <Box className='flex justify-between items-center' mt={2} px={2}>\n            <small>\n              1 {currency0.symbol} ={' '}\n              {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'}{' '}\n              {currency1.symbol}\n            </small>\n            <small>\n              1 {currency1.symbol} ={' '}\n              {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'}{' '}\n              {currency0.symbol}\n            </small>\n          </Box>\n        )}\n        <Box mt={2} className='flex justify-between items-center'>\n          <Button\n            className='removeButton'\n            onClick={onAttemptToApprove}\n            disabled={approving || approval !== ApprovalState.NOT_APPROVED}\n          >\n            {approving\n              ? `${t('approving')}...`\n              : approval === ApprovalState.APPROVED\n              ? t('approved')\n              : t('approve')}\n          </Button>\n          <Button\n            className='removeButton'\n            onClick={() => {\n              setShowConfirm(true);\n            }}\n            disabled={Boolean(error) || approval !== ApprovalState.APPROVED}\n          >\n            {error || t('remove')}\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <p className='text-error'>{errorMsg}</p>\n        </Box>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default RemoveLiquidityModal;\n"]},"metadata":{},"sourceType":"module"}