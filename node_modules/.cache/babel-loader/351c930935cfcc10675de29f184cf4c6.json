{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CurrencyRow.tsx\",\n    _s = $RefreshSig$();\n\nimport { ETHER, Token } from '@uniswap/sdk';\nimport React from 'react';\nimport { Box, Tooltip, CircularProgress, ListItem } from '@material-ui/core';\nimport { useActiveWeb3React } from 'hooks';\nimport { WrappedTokenInfo } from 'state/lists/hooks';\nimport { useAddUserToken, useRemoveUserAddedToken } from 'state/user/hooks';\nimport { useCurrencyBalance } from 'state/wallet/hooks';\nimport { useIsUserAddedToken } from 'hooks/Tokens';\nimport { CurrencyLogo } from 'components';\nimport { getTokenLogoURL } from 'utils/getTokenLogoURL';\nimport { PlusHelper } from 'components/QuestionHelper';\nimport { ReactComponent as TokenSelectedIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/TokenSelected.svg\";\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction currencyKey(currency) {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : '';\n}\n\nfunction Balance(_ref) {\n  let {\n    balance\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"small\",\n    title: balance.toExact(),\n    children: formatTokenAmount(balance)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Balance;\n\nfunction TokenTags(_ref2) {\n  let {\n    currency\n  } = _ref2;\n\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  const tags = currency.tags;\n  if (!tags || tags.length === 0) return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 42\n  }, this);\n  const tag = tags[0];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: tag.description,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"tag\",\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), tags.length > 1 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: tags.slice(1).map(_ref3 => {\n        let {\n          name,\n          description\n        } = _ref3;\n        return `${name}: ${description}`;\n      }).join('; \\n'),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"tag\",\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TokenTags;\n\nconst CurrencyRow = _ref4 => {\n  _s();\n\n  let {\n    currency,\n    onSelect,\n    isSelected,\n    otherSelected,\n    style,\n    isOnSelectedList\n  } = _ref4;\n  const {\n    t\n  } = useTranslation();\n  const {\n    ethereum\n  } = window;\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const key = currencyKey(currency);\n  const usdPrice = useUSDCPrice(currency);\n  const balance = useCurrencyBalance(account !== null && account !== void 0 ? account : undefined, currency);\n  const customAdded = useIsUserAddedToken(currency);\n  const removeToken = useRemoveUserAddedToken();\n  const addToken = useAddUserToken();\n  const isMetamask = ethereum && ethereum.isMetaMask && Number(ethereum.chainId) === 2000 && isOnSelectedList;\n\n  const addTokenToMetamask = (tokenAddress, tokenSymbol, tokenDecimals, tokenImage) => {\n    if (ethereum) {\n      ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress,\n            // The address that the token is at.\n            symbol: tokenSymbol,\n            // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals,\n            // The number of decimals in the token\n            image: tokenImage // A string url of the token logo\n\n          }\n        }\n      }).catch(error => {\n        if (error.code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          console.log('We can encrypt anything without the key.');\n        } else {\n          console.error(error);\n        }\n      });\n    }\n  }; // only show add or remove buttons if not on selected list\n\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    style: style,\n    selected: otherSelected || isSelected,\n    onClick: () => {\n      if (!isSelected && !otherSelected) onSelect();\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"currencyRow\",\n      children: [(otherSelected || isSelected) && /*#__PURE__*/_jsxDEV(TokenSelectedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        currency: currency,\n        size: \"32px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 1,\n        height: 32,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"currencySymbol\",\n            children: currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), isMetamask && currency !== ETHER && /*#__PURE__*/_jsxDEV(Box, {\n            className: \"cursor-pointer\",\n            ml: \"2px\",\n            onClick: event => {\n              addTokenToMetamask(currency.address, currency.symbol, currency.decimals, getTokenLogoURL(currency.address));\n              event.stopPropagation();\n            },\n            children: /*#__PURE__*/_jsxDEV(PlusHelper, {\n              text: t('addToMetamask')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), isOnSelectedList ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"currencyName\",\n          children: currency.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: customAdded ? t('addedByUser') : t('foundByAddress')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 0.5,\n            className: \"text-primary\",\n            onClick: event => {\n              event.stopPropagation();\n\n              if (customAdded) {\n                if (chainId && currency instanceof Token) removeToken(chainId, currency.address);\n              } else {\n                if (currency instanceof Token) addToken(currency);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: customAdded ? `(${t('remove')})` : `(${t('add')}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenTags, {\n        currency: currency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"right\",\n        children: balance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Balance, {\n            balance: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-secondary\",\n            children: [\"$\", (Number(balance.toExact()) * (usdPrice ? Number(usdPrice.toSignificant()) : 0)).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : account ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrencyRow, \"Ce9CirFmCfoPSH6HWoLpO9w0Ijg=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useUSDCPrice, useCurrencyBalance, useIsUserAddedToken, useRemoveUserAddedToken, useAddUserToken];\n});\n\n_c3 = CurrencyRow;\nexport default CurrencyRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Balance\");\n$RefreshReg$(_c2, \"TokenTags\");\n$RefreshReg$(_c3, \"CurrencyRow\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CurrencySearchModal/CurrencyRow.tsx"],"names":["ETHER","Token","React","Box","Tooltip","CircularProgress","ListItem","useActiveWeb3React","WrappedTokenInfo","useAddUserToken","useRemoveUserAddedToken","useCurrencyBalance","useIsUserAddedToken","CurrencyLogo","getTokenLogoURL","PlusHelper","useUSDCPrice","formatTokenAmount","useTranslation","currencyKey","currency","address","Balance","balance","toExact","TokenTags","tags","length","tag","description","name","id","slice","map","join","CurrencyRow","onSelect","isSelected","otherSelected","style","isOnSelectedList","t","ethereum","window","account","chainId","key","usdPrice","undefined","customAdded","removeToken","addToken","isMetamask","isMetaMask","Number","addTokenToMetamask","tokenAddress","tokenSymbol","tokenDecimals","tokenImage","request","method","params","type","options","symbol","decimals","image","catch","error","code","console","log","event","stopPropagation","toSignificant","toLocaleString"],"mappings":"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","sourcesContent":["import { CurrencyAmount, ETHER, Token } from '@uniswap/sdk';\nimport React from 'react';\nimport { Box, Tooltip, CircularProgress, ListItem } from '@material-ui/core';\nimport { useActiveWeb3React } from 'hooks';\nimport { WrappedTokenInfo } from 'state/lists/hooks';\nimport { useAddUserToken, useRemoveUserAddedToken } from 'state/user/hooks';\nimport { useCurrencyBalance } from 'state/wallet/hooks';\nimport { useIsUserAddedToken } from 'hooks/Tokens';\nimport { CurrencyLogo } from 'components';\nimport { getTokenLogoURL } from 'utils/getTokenLogoURL';\nimport { PlusHelper } from 'components/QuestionHelper';\nimport { ReactComponent as TokenSelectedIcon } from 'assets/images/TokenSelected.svg';\nimport useUSDCPrice from 'utils/useUSDCPrice';\nimport { formatTokenAmount } from 'utils';\nimport { useTranslation } from 'react-i18next';\n\nfunction currencyKey(currency: Token): string {\n  return currency instanceof Token\n    ? currency.address\n    : currency === ETHER\n    ? 'ETHER'\n    : '';\n}\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return (\n    <p className='small' title={balance.toExact()}>\n      {formatTokenAmount(balance)}\n    </p>\n  );\n}\n\nfunction TokenTags({ currency }: { currency: Token }) {\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return <span />;\n  }\n\n  const tags = currency.tags;\n  if (!tags || tags.length === 0) return <span />;\n\n  const tag = tags[0];\n  return (\n    <Box>\n      <Tooltip title={tag.description}>\n        <Box className='tag' key={tag.id}>\n          {tag.name}\n        </Box>\n      </Tooltip>\n      {tags.length > 1 ? (\n        <Tooltip\n          title={tags\n            .slice(1)\n            .map(({ name, description }) => `${name}: ${description}`)\n            .join('; \\n')}\n        >\n          <Box className='tag'>...</Box>\n        </Tooltip>\n      ) : null}\n    </Box>\n  );\n}\n\ninterface CurrenyRowProps {\n  currency: Token;\n  onSelect: () => void;\n  isSelected: boolean;\n  otherSelected: boolean;\n  style: any;\n  isOnSelectedList?: boolean;\n}\n\nconst CurrencyRow: React.FC<CurrenyRowProps> = ({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n  isOnSelectedList,\n}) => {\n  const { t } = useTranslation();\n\n  const { ethereum } = window as any;\n  const { account, chainId } = useActiveWeb3React();\n  const key = currencyKey(currency);\n\n  const usdPrice = useUSDCPrice(currency);\n  const balance = useCurrencyBalance(account ?? undefined, currency);\n  const customAdded = useIsUserAddedToken(currency);\n\n  const removeToken = useRemoveUserAddedToken();\n  const addToken = useAddUserToken();\n  const isMetamask =\n    ethereum &&\n    ethereum.isMetaMask &&\n    Number(ethereum.chainId) === 2000 &&\n    isOnSelectedList;\n\n  const addTokenToMetamask = (\n    tokenAddress: any,\n    tokenSymbol: any,\n    tokenDecimals: any,\n    tokenImage: any,\n  ) => {\n    if (ethereum) {\n      ethereum\n        .request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20', // Initially only supports ERC20, but eventually more!\n            options: {\n              address: tokenAddress, // The address that the token is at.\n              symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n              decimals: tokenDecimals, // The number of decimals in the token\n              image: tokenImage, // A string url of the token logo\n            },\n          },\n        })\n        .catch((error: any) => {\n          if (error.code === 4001) {\n            // EIP-1193 userRejectedRequest error\n            console.log('We can encrypt anything without the key.');\n          } else {\n            console.error(error);\n          }\n        });\n    }\n  };\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <ListItem\n      button\n      style={style}\n      key={key}\n      selected={otherSelected || isSelected}\n      onClick={() => {\n        if (!isSelected && !otherSelected) onSelect();\n      }}\n    >\n      <Box className='currencyRow'>\n        {(otherSelected || isSelected) && <TokenSelectedIcon />}\n        <CurrencyLogo currency={currency} size='32px' />\n        <Box ml={1} height={32}>\n          <Box className='flex items-center'>\n            <small className='currencySymbol'>{currency.symbol}</small>\n            {isMetamask && currency !== ETHER && (\n              <Box\n                className='cursor-pointer'\n                ml='2px'\n                onClick={(event: any) => {\n                  addTokenToMetamask(\n                    currency.address,\n                    currency.symbol,\n                    currency.decimals,\n                    getTokenLogoURL(currency.address),\n                  );\n                  event.stopPropagation();\n                }}\n              >\n                <PlusHelper text={t('addToMetamask')} />\n              </Box>\n            )}\n          </Box>\n          {isOnSelectedList ? (\n            <span className='currencyName'>{currency.name}</span>\n          ) : (\n            <Box className='flex items-center'>\n              <span>\n                {customAdded ? t('addedByUser') : t('foundByAddress')}\n              </span>\n              <Box\n                ml={0.5}\n                className='text-primary'\n                onClick={(event) => {\n                  event.stopPropagation();\n                  if (customAdded) {\n                    if (chainId && currency instanceof Token)\n                      removeToken(chainId, currency.address);\n                  } else {\n                    if (currency instanceof Token) addToken(currency);\n                  }\n                }}\n              >\n                <span>{customAdded ? `(${t('remove')})` : `(${t('add')}`}</span>\n              </Box>\n            </Box>\n          )}\n        </Box>\n\n        <Box flex={1}></Box>\n        <TokenTags currency={currency} />\n        <Box textAlign='right'>\n          {balance ? (\n            <>\n              <Balance balance={balance} />\n              <span className='text-secondary'>\n                $\n                {(\n                  Number(balance.toExact()) *\n                  (usdPrice ? Number(usdPrice.toSignificant()) : 0)\n                ).toLocaleString()}\n              </span>\n            </>\n          ) : account ? (\n            <CircularProgress size={24} color='secondary' />\n          ) : null}\n        </Box>\n      </Box>\n    </ListItem>\n  );\n};\n\nexport default CurrencyRow;\n"]},"metadata":{},"sourceType":"module"}