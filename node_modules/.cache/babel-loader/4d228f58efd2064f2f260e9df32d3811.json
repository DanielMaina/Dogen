{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CustomSwitch/CustomSwitch.tsx\";\nimport React from 'react';\nimport { Box } from '@material-ui/core';\nimport 'components/styles/CustomSwitch.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomSwitch = _ref => {\n  let {\n    width,\n    height,\n    items,\n    isLarge\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    width: width,\n    height: height,\n    children: items.map((item, index) => {\n      const returnBorderRadius = ind => {\n        return index === ind ? 8 : 0; // this makes border radius for individual switch item\n      };\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        className: `switchItem${item.condition ? ' activeSwitchItem' : ''}\n            `,\n        style: {\n          // makes left border radius for the first switch item and right border radius for the last switch item\n          borderTopLeftRadius: returnBorderRadius(0),\n          borderBottomLeftRadius: returnBorderRadius(0),\n          borderTopRightRadius: returnBorderRadius(items.length - 1),\n          borderBottomRightRadius: returnBorderRadius(items.length - 1)\n        },\n        onClick: item.onClick,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: isLarge ? '' : 'small',\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomSwitch;\nexport default CustomSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSwitch\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/CustomSwitch/CustomSwitch.tsx"],"names":["React","Box","CustomSwitch","width","height","items","isLarge","map","item","index","returnBorderRadius","ind","condition","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","length","borderBottomRightRadius","onClick","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAO,qCAAP;;;AAeA,MAAMC,YAAyC,GAAG,QAK5C;AAAA,MAL6C;AACjDC,IAAAA,KADiD;AAEjDC,IAAAA,MAFiD;AAGjDC,IAAAA,KAHiD;AAIjDC,IAAAA;AAJiD,GAK7C;AACJ,sBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAEH,KAA3B;AAAkC,IAAA,MAAM,EAAEC,MAA1C;AAAA,cACGC,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,YAAMC,kBAAkB,GAAIC,GAAD,IAAiB;AAC1C,eAAOF,KAAK,KAAKE,GAAV,GAAgB,CAAhB,GAAoB,CAA3B,CAD0C,CACZ;AAC/B,OAFD;;AAGA,0BACE,QAAC,GAAD;AAEE,QAAA,SAAS,EAAG,aAAYH,IAAI,CAACI,SAAL,GAAiB,mBAAjB,GAAuC,EAAG;AAC9E,aAHU;AAIE,QAAA,KAAK,EAAE;AACL;AACAC,UAAAA,mBAAmB,EAAEH,kBAAkB,CAAC,CAAD,CAFlC;AAGLI,UAAAA,sBAAsB,EAAEJ,kBAAkB,CAAC,CAAD,CAHrC;AAILK,UAAAA,oBAAoB,EAAEL,kBAAkB,CAACL,KAAK,CAACW,MAAN,GAAe,CAAhB,CAJnC;AAKLC,UAAAA,uBAAuB,EAAEP,kBAAkB,CAACL,KAAK,CAACW,MAAN,GAAe,CAAhB;AALtC,SAJT;AAWE,QAAA,OAAO,EAAER,IAAI,CAACU,OAXhB;AAAA,+BAaE;AAAG,UAAA,SAAS,EAAEZ,OAAO,GAAG,EAAH,GAAQ,OAA7B;AAAA,oBAAuCE,IAAI,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA;AAbF,SACOV,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,KArBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAhCD;;KAAMP,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Box } from '@material-ui/core';\nimport 'components/styles/CustomSwitch.scss';\n\ninterface SwitchItems {\n  text: string;\n  onClick: () => void;\n  condition: boolean;\n}\n\ninterface CustomSwitchProps {\n  width: number;\n  height: number;\n  items: SwitchItems[];\n  isLarge?: boolean;\n}\n\nconst CustomSwitch: React.FC<CustomSwitchProps> = ({\n  width,\n  height,\n  items,\n  isLarge,\n}) => {\n  return (\n    <Box display='flex' width={width} height={height}>\n      {items.map((item, index) => {\n        const returnBorderRadius = (ind: number) => {\n          return index === ind ? 8 : 0; // this makes border radius for individual switch item\n        };\n        return (\n          <Box\n            key={index}\n            className={`switchItem${item.condition ? ' activeSwitchItem' : ''}\n            `}\n            style={{\n              // makes left border radius for the first switch item and right border radius for the last switch item\n              borderTopLeftRadius: returnBorderRadius(0),\n              borderBottomLeftRadius: returnBorderRadius(0),\n              borderTopRightRadius: returnBorderRadius(items.length - 1),\n              borderBottomRightRadius: returnBorderRadius(items.length - 1),\n            }}\n            onClick={item.onClick}\n          >\n            <p className={isLarge ? '' : 'small'}>{item.text}</p>\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default CustomSwitch;\n"]},"metadata":{},"sourceType":"module"}