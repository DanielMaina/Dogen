{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/FarmCard/FarmCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { DoubleCurrencyLogo, CurrencyLogo } from 'components';\nimport CircleInfoIcon from \"assets/images/circleinfo.svg\";\nimport FarmCardDetails from './FarmCardDetails';\nimport { getAPYWithFee, getRewardRate, getStakedAmountStakingInfo, getTVLStaking, getEarnedUSDLPFarm, getEarnedUSDDualFarm, formatTokenAmount, formatAPY } from 'utils';\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\nimport 'components/styles/FarmCard.scss';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FarmCard = _ref => {\n  _s();\n\n  let {\n    stakingInfo,\n    stakingAPY,\n    isLPFarm\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    breakpoints\n  } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [isExpandCard, setExpandCard] = useState(false);\n  const lpStakingInfo = stakingInfo;\n  const dualStakingInfo = stakingInfo;\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1);\n  const stakedAmounts = getStakedAmountStakingInfo(stakingInfo);\n  let apyWithFee = 0;\n\n  if (stakingAPY && stakingAPY > 0 && stakingInfo.perMonthReturnInRewards) {\n    apyWithFee = formatAPY(getAPYWithFee(stakingInfo.perMonthReturnInRewards, stakingAPY));\n  }\n\n  const tvl = getTVLStaking(stakedAmounts === null || stakedAmounts === void 0 ? void 0 : stakedAmounts.totalStakedUSD, stakedAmounts === null || stakedAmounts === void 0 ? void 0 : stakedAmounts.totalStakedBase);\n  const lpPoolRate = getRewardRate(lpStakingInfo.totalRewardRate, lpStakingInfo.rewardToken);\n  const dualPoolRateA = getRewardRate(dualStakingInfo.totalRewardRateA, dualStakingInfo.rewardTokenA);\n  const dualPoolRateB = getRewardRate(dualStakingInfo.totalRewardRateB, dualStakingInfo.rewardTokenB);\n  const earnedUSDStr = isLPFarm ? getEarnedUSDLPFarm(lpStakingInfo) : getEarnedUSDDualFarm(dualStakingInfo);\n  const lpRewards = lpStakingInfo.rewardTokenPrice * lpStakingInfo.rate;\n  const dualRewards = dualStakingInfo.rateA * dualStakingInfo.rewardTokenAPrice + dualStakingInfo.rateB * dualStakingInfo.rewardTokenBPrice;\n\n  const renderPool = width => /*#__PURE__*/_jsxDEV(Box, {\n    className: \"flex items-center\",\n    width: width,\n    children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n      currency0: currency0,\n      currency1: currency1,\n      size: 28\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ml: 1.5,\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [currency0.symbol, \" / \", currency1.symbol, \" LP\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: `farmLPCard ${isExpandCard ? 'highlightedCard' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"farmLPCardUp\",\n      onClick: () => setExpandCard(!isExpandCard),\n      children: isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderPool(isExpandCard ? 0.95 : 0.7), !isExpandCard && /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.25,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: t('apy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ml: 0.5,\n              height: 16,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: CircleInfoIcon,\n                alt: 'arrow up'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 0.5,\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-success\",\n              children: [apyWithFee, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.05,\n          className: \"flex justify-end text-primary\",\n          children: isExpandCard ? /*#__PURE__*/_jsxDEV(KeyboardArrowUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderPool(0.3), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.2,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: tvl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.25,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"small\",\n            children: [\"$\", (isLPFarm ? lpRewards : dualRewards).toLocaleString(), \" /\", ' ', t('day')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), isLPFarm ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"small\",\n            children: lpPoolRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"small\",\n              children: dualPoolRateA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"small\",\n              children: dualPoolRateB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.15,\n          className: \"flex justify-center items-center text-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: [apyWithFee, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 0.5,\n            height: 16,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: CircleInfoIcon,\n              alt: 'arrow up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.2,\n          textAlign: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: earnedUSDStr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), isLPFarm ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex items-center justify-end\",\n            children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: lpStakingInfo.rewardToken,\n              size: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                marginLeft: 5\n              },\n              children: [formatTokenAmount(lpStakingInfo.earnedAmount), \"\\xA0\", lpStakingInfo.rewardToken.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex items-center justify-end\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                currency: unwrappedToken(dualStakingInfo.rewardTokenA),\n                size: \"16px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  marginLeft: 5\n                },\n                children: [formatTokenAmount(dualStakingInfo.earnedAmountA), \"\\xA0\", dualStakingInfo.rewardTokenA.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex items-center justify-end\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                currency: unwrappedToken(dualStakingInfo.rewardTokenB),\n                size: \"16px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  marginLeft: 5\n                },\n                children: [formatTokenAmount(dualStakingInfo.earnedAmountB), \"\\xA0\", dualStakingInfo.rewardTokenB.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isExpandCard && /*#__PURE__*/_jsxDEV(FarmCardDetails, {\n      stakingInfo: stakingInfo,\n      stakingAPY: stakingAPY,\n      isLPFarm: isLPFarm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmCard, \"S6FpSXjIpI3bLSdLcBFSUXhm2Z0=\", false, function () {\n  return [useTranslation, useTheme, useMediaQuery];\n});\n\n_c = FarmCard;\nexport default FarmCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmCard\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/FarmCard/FarmCard.tsx"],"names":["React","useState","Box","useMediaQuery","useTheme","unwrappedToken","DoubleCurrencyLogo","CurrencyLogo","FarmCardDetails","getAPYWithFee","getRewardRate","getStakedAmountStakingInfo","getTVLStaking","getEarnedUSDLPFarm","getEarnedUSDDualFarm","formatTokenAmount","formatAPY","KeyboardArrowDown","KeyboardArrowUp","useTranslation","FarmCard","stakingInfo","stakingAPY","isLPFarm","t","breakpoints","isMobile","down","isExpandCard","setExpandCard","lpStakingInfo","dualStakingInfo","token0","tokens","token1","currency0","currency1","stakedAmounts","apyWithFee","perMonthReturnInRewards","tvl","totalStakedUSD","totalStakedBase","lpPoolRate","totalRewardRate","rewardToken","dualPoolRateA","totalRewardRateA","rewardTokenA","dualPoolRateB","totalRewardRateB","rewardTokenB","earnedUSDStr","lpRewards","rewardTokenPrice","rate","dualRewards","rateA","rewardTokenAPrice","rateB","rewardTokenBPrice","renderPool","width","symbol","CircleInfoIcon","toLocaleString","marginLeft","earnedAmount","earnedAmountA","earnedAmountB"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { DualStakingInfo, StakingInfo } from 'types';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { DoubleCurrencyLogo, CurrencyLogo } from 'components';\nimport CircleInfoIcon from 'assets/images/circleinfo.svg';\nimport FarmCardDetails from './FarmCardDetails';\nimport {\n  getAPYWithFee,\n  getRewardRate,\n  getStakedAmountStakingInfo,\n  getTVLStaking,\n  getEarnedUSDLPFarm,\n  getEarnedUSDDualFarm,\n  formatTokenAmount,\n  formatAPY,\n} from 'utils';\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons';\nimport 'components/styles/FarmCard.scss';\nimport { useTranslation } from 'react-i18next';\n\nconst FarmCard: React.FC<{\n  stakingInfo: StakingInfo | DualStakingInfo;\n  stakingAPY: number;\n  isLPFarm?: boolean;\n}> = ({ stakingInfo, stakingAPY, isLPFarm }) => {\n  const { t } = useTranslation();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const [isExpandCard, setExpandCard] = useState(false);\n\n  const lpStakingInfo = stakingInfo as StakingInfo;\n  const dualStakingInfo = stakingInfo as DualStakingInfo;\n\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1);\n\n  const stakedAmounts = getStakedAmountStakingInfo(stakingInfo);\n\n  let apyWithFee: number | string = 0;\n\n  if (stakingAPY && stakingAPY > 0 && stakingInfo.perMonthReturnInRewards) {\n    apyWithFee = formatAPY(\n      getAPYWithFee(stakingInfo.perMonthReturnInRewards, stakingAPY),\n    );\n  }\n\n  const tvl = getTVLStaking(\n    stakedAmounts?.totalStakedUSD,\n    stakedAmounts?.totalStakedBase,\n  );\n\n  const lpPoolRate = getRewardRate(\n    lpStakingInfo.totalRewardRate,\n    lpStakingInfo.rewardToken,\n  );\n\n  const dualPoolRateA = getRewardRate(\n    dualStakingInfo.totalRewardRateA,\n    dualStakingInfo.rewardTokenA,\n  );\n  const dualPoolRateB = getRewardRate(\n    dualStakingInfo.totalRewardRateB,\n    dualStakingInfo.rewardTokenB,\n  );\n\n  const earnedUSDStr = isLPFarm\n    ? getEarnedUSDLPFarm(lpStakingInfo)\n    : getEarnedUSDDualFarm(dualStakingInfo);\n\n  const lpRewards = lpStakingInfo.rewardTokenPrice * lpStakingInfo.rate;\n  const dualRewards =\n    dualStakingInfo.rateA * dualStakingInfo.rewardTokenAPrice +\n    dualStakingInfo.rateB * dualStakingInfo.rewardTokenBPrice;\n\n  const renderPool = (width: number) => (\n    <Box className='flex items-center' width={width}>\n      <DoubleCurrencyLogo\n        currency0={currency0}\n        currency1={currency1}\n        size={28}\n      />\n      <Box ml={1.5}>\n        <small>\n          {currency0.symbol} / {currency1.symbol} LP\n        </small>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <Box className={`farmLPCard ${isExpandCard ? 'highlightedCard' : ''}`}>\n      <Box\n        className='farmLPCardUp'\n        onClick={() => setExpandCard(!isExpandCard)}\n      >\n        {isMobile ? (\n          <>\n            {renderPool(isExpandCard ? 0.95 : 0.7)}\n            {!isExpandCard && (\n              <Box width={0.25}>\n                <Box className='flex items-center'>\n                  <span className='text-secondary'>{t('apy')}</span>\n                  <Box ml={0.5} height={16}>\n                    <img src={CircleInfoIcon} alt={'arrow up'} />\n                  </Box>\n                </Box>\n                <Box mt={0.5}>\n                  <small className='text-success'>{apyWithFee}%</small>\n                </Box>\n              </Box>\n            )}\n            <Box width={0.05} className='flex justify-end text-primary'>\n              {isExpandCard ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n            </Box>\n          </>\n        ) : (\n          <>\n            {renderPool(0.3)}\n            <Box width={0.2} textAlign='center'>\n              <small>{tvl}</small>\n            </Box>\n            <Box width={0.25} textAlign='center'>\n              <p className='small'>\n                ${(isLPFarm ? lpRewards : dualRewards).toLocaleString()} /{' '}\n                {t('day')}\n              </p>\n              {isLPFarm ? (\n                <p className='small'>{lpPoolRate}</p>\n              ) : (\n                <>\n                  <p className='small'>{dualPoolRateA}</p>\n                  <p className='small'>{dualPoolRateB}</p>\n                </>\n              )}\n            </Box>\n            <Box\n              width={0.15}\n              className='flex justify-center items-center text-success'\n            >\n              <small>{apyWithFee}%</small>\n              <Box ml={0.5} height={16}>\n                <img src={CircleInfoIcon} alt={'arrow up'} />\n              </Box>\n            </Box>\n            <Box width={0.2} textAlign='right'>\n              <small>{earnedUSDStr}</small>\n              {isLPFarm ? (\n                <Box className='flex items-center justify-end'>\n                  <CurrencyLogo\n                    currency={lpStakingInfo.rewardToken}\n                    size='16px'\n                  />\n                  <small style={{ marginLeft: 5 }}>\n                    {formatTokenAmount(lpStakingInfo.earnedAmount)}\n                    &nbsp;{lpStakingInfo.rewardToken.symbol}\n                  </small>\n                </Box>\n              ) : (\n                <>\n                  <Box className='flex items-center justify-end'>\n                    <CurrencyLogo\n                      currency={unwrappedToken(dualStakingInfo.rewardTokenA)}\n                      size='16px'\n                    />\n                    <small style={{ marginLeft: 5 }}>\n                      {formatTokenAmount(dualStakingInfo.earnedAmountA)}\n                      &nbsp;{dualStakingInfo.rewardTokenA.symbol}\n                    </small>\n                  </Box>\n                  <Box className='flex items-center justify-end'>\n                    <CurrencyLogo\n                      currency={unwrappedToken(dualStakingInfo.rewardTokenB)}\n                      size='16px'\n                    />\n                    <small style={{ marginLeft: 5 }}>\n                      {formatTokenAmount(dualStakingInfo.earnedAmountB)}\n                      &nbsp;{dualStakingInfo.rewardTokenB.symbol}\n                    </small>\n                  </Box>\n                </>\n              )}\n            </Box>\n          </>\n        )}\n      </Box>\n\n      {isExpandCard && (\n        <FarmCardDetails\n          stakingInfo={stakingInfo}\n          stakingAPY={stakingAPY}\n          isLPFarm={isLPFarm}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default FarmCard;\n"]},"metadata":{},"sourceType":"module"}