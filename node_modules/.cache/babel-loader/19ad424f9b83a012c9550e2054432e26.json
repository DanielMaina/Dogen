{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/TokensTable/TokensTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Divider } from '@material-ui/core';\nimport { getAddress } from '@ethersproject/address';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { CurrencyLogo, CustomTable } from 'components';\nimport { GlobalConst } from 'constants/index';\nimport { formatNumber, getFormattedPrice, getPriceClass } from 'utils';\nimport { useBookmarkTokens } from 'state/application/hooks';\nimport { ReactComponent as StarChecked } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/StarChecked.svg\";\nimport { ReactComponent as StarUnchecked } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/StarUnchecked.svg\";\nimport 'components/styles/TokensTable.scss';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst liquidityHeadCellIndex = 4;\n\nconst TokensTable = _ref => {\n  _s();\n\n  let {\n    data,\n    showPagination = true\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const tokenHeadCells = [{\n    id: 'tokenName',\n    numeric: false,\n    label: t('name'),\n    sortKey: item => item.name\n  }, {\n    id: 'tokenPrice',\n    numeric: false,\n    label: t('price'),\n    sortKey: item => item.priceUSD\n  }, {\n    id: 'tokenUpPercent',\n    numeric: false,\n    label: t('24hPer'),\n    sortKey: item => item.priceChangeUSD\n  }, {\n    id: 'tokenVolume',\n    numeric: false,\n    label: t('24hVol'),\n    sortKey: item => item.oneDayVolumeUSD\n  }, {\n    id: 'tokenLiquidity',\n    numeric: false,\n    label: t('liquidity'),\n    align: 'right',\n    sortKey: item => item.totalLiquidityUSD\n  }];\n  const {\n    bookmarkTokens,\n    addBookmarkToken,\n    removeBookmarkToken\n  } = useBookmarkTokens();\n\n  const mobileHTML = (token, index) => {\n    const tokenCurrency = new Token(ChainId.MAINNET, getAddress(token.id), Number(token.decimals), token.symbol, token.name);\n    const priceClass = getPriceClass(Number(token.priceChangeUSD));\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: index === 0 ? 0 : 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center\",\n        mb: 1,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          mr: 1,\n          onClick: () => {\n            const tokenIndex = bookmarkTokens.indexOf(token.id);\n\n            if (tokenIndex === -1) {\n              addBookmarkToken(token.id);\n            } else {\n              removeBookmarkToken(token.id);\n            }\n          },\n          children: bookmarkTokens.indexOf(token.id) > -1 ? /*#__PURE__*/_jsxDEV(StarChecked, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(StarUnchecked, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"no-decoration\",\n          to: `/analytics/token/${tokenCurrency.address}`,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: tokenCurrency,\n              size: \"28px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ml: 1,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray25\",\n                children: [token.name, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-hint\",\n                  children: [\"(\", token.symbol, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mobileRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('price')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", formatNumber(token.priceUSD)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mobileRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('24hPer')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: `priceChangeWrapper ${priceClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [getFormattedPrice(Number(token.priceChangeUSD)), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mobileRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('24hVol')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", formatNumber(token.oneDayVolumeUSD)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mobileRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('liquidity')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", formatNumber(token.totalLiquidityUSD)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  const desktopHTML = token => {\n    const tokenCurrency = new Token(ChainId.MAINNET, getAddress(token.id), Number(token.decimals), token.symbol, token.name);\n    const priceClass = getPriceClass(Number(token.priceChangeUSD));\n    return [{\n      html: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          mr: 1,\n          onClick: () => {\n            const tokenIndex = bookmarkTokens.indexOf(token.id);\n\n            if (tokenIndex === -1) {\n              addBookmarkToken(token.id);\n            } else {\n              removeBookmarkToken(token.id);\n            }\n          },\n          children: bookmarkTokens.indexOf(token.id) > -1 ? /*#__PURE__*/_jsxDEV(StarChecked, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(StarUnchecked, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"no-decoration\",\n          to: `/analytics/token/${tokenCurrency.address}`,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: tokenCurrency,\n              size: \"28px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ml: 1,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray25\",\n                children: [token.name, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-hint\",\n                  children: [\"(\", token.symbol, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, {\n      html: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", formatNumber(token.priceUSD)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, {\n      html: /*#__PURE__*/_jsxDEV(Box, {\n        className: `priceChangeWrapper ${priceClass}`,\n        mr: 2,\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [getFormattedPrice(Number(token.priceChangeUSD)), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, {\n      html: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", formatNumber(token.oneDayVolumeUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }, this)\n    }, {\n      html: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", formatNumber(token.totalLiquidityUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }, this)\n    }];\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomTable, {\n    defaultOrderBy: tokenHeadCells[liquidityHeadCellIndex],\n    defaultOrder: \"desc\",\n    showPagination: showPagination,\n    headCells: tokenHeadCells,\n    rowsPerPage: GlobalConst.utils.ROWSPERPAGE,\n    data: data,\n    mobileHTML: mobileHTML,\n    desktopHTML: desktopHTML\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokensTable, \"Id1ppr/WF+H2Bv/tNuqXKN8LDqI=\", false, function () {\n  return [useTranslation, useBookmarkTokens];\n});\n\n_c = TokensTable;\nexport default TokensTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokensTable\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/TokensTable/TokensTable.tsx"],"names":["React","Link","Box","Divider","getAddress","ChainId","Token","CurrencyLogo","CustomTable","GlobalConst","formatNumber","getFormattedPrice","getPriceClass","useBookmarkTokens","useTranslation","liquidityHeadCellIndex","TokensTable","data","showPagination","t","tokenHeadCells","id","numeric","label","sortKey","item","name","priceUSD","priceChangeUSD","oneDayVolumeUSD","align","totalLiquidityUSD","bookmarkTokens","addBookmarkToken","removeBookmarkToken","mobileHTML","token","index","tokenCurrency","MAINNET","Number","decimals","symbol","priceClass","tokenIndex","indexOf","address","desktopHTML","html","utils","ROWSPERPAGE"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,cAA/B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,YAA1C;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,aAA1C,QAA+D,OAA/D;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;;AAGA,OAAO,oCAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAOA,MAAMC,sBAAsB,GAAG,CAA/B;;AAEA,MAAMC,WAAuC,GAAG,QAG1C;AAAA;;AAAA,MAH2C;AAC/CC,IAAAA,IAD+C;AAE/CC,IAAAA,cAAc,GAAG;AAF8B,GAG3C;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,QAAMM,cAAc,GAAG,CACrB;AACEC,IAAAA,EAAE,EAAE,WADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,MAAD,CAHV;AAIEK,IAAAA,OAAO,EAAGC,IAAD,IAAeA,IAAI,CAACC;AAJ/B,GADqB,EAOrB;AACEL,IAAAA,EAAE,EAAE,YADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,OAAD,CAHV;AAIEK,IAAAA,OAAO,EAAGC,IAAD,IAAeA,IAAI,CAACE;AAJ/B,GAPqB,EAarB;AACEN,IAAAA,EAAE,EAAE,gBADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,QAAD,CAHV;AAIEK,IAAAA,OAAO,EAAGC,IAAD,IAAeA,IAAI,CAACG;AAJ/B,GAbqB,EAmBrB;AACEP,IAAAA,EAAE,EAAE,aADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,QAAD,CAHV;AAIEK,IAAAA,OAAO,EAAGC,IAAD,IAAeA,IAAI,CAACI;AAJ/B,GAnBqB,EAyBrB;AACER,IAAAA,EAAE,EAAE,gBADN;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,KAAK,EAAEJ,CAAC,CAAC,WAAD,CAHV;AAIEW,IAAAA,KAAK,EAAE,OAJT;AAKEN,IAAAA,OAAO,EAAGC,IAAD,IAAeA,IAAI,CAACM;AAL/B,GAzBqB,CAAvB;AAiCA,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA;AAHI,MAIFrB,iBAAiB,EAJrB;;AAKA,QAAMsB,UAAU,GAAG,CAACC,KAAD,EAAaC,KAAb,KAA+B;AAChD,UAAMC,aAAa,GAAG,IAAIhC,KAAJ,CACpBD,OAAO,CAACkC,OADY,EAEpBnC,UAAU,CAACgC,KAAK,CAACf,EAAP,CAFU,EAGpBmB,MAAM,CAACJ,KAAK,CAACK,QAAP,CAHc,EAIpBL,KAAK,CAACM,MAJc,EAKpBN,KAAK,CAACV,IALc,CAAtB;AAOA,UAAMiB,UAAU,GAAG/B,aAAa,CAAC4B,MAAM,CAACJ,KAAK,CAACR,cAAP,CAAP,CAAhC;AACA,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAES,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAA3B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAAA,gCACE,QAAC,GAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMO,UAAU,GAAGZ,cAAc,CAACa,OAAf,CAAuBT,KAAK,CAACf,EAA7B,CAAnB;;AACA,gBAAIuB,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrBX,cAAAA,gBAAgB,CAACG,KAAK,CAACf,EAAP,CAAhB;AACD,aAFD,MAEO;AACLa,cAAAA,mBAAmB,CAACE,KAAK,CAACf,EAAP,CAAnB;AACD;AACF,WAVH;AAAA,oBAYGW,cAAc,CAACa,OAAf,CAAuBT,KAAK,CAACf,EAA7B,IAAmC,CAAC,CAApC,gBACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADD,gBAGC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE,QAAC,IAAD;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,EAAE,EAAG,oBAAmBiB,aAAa,CAACQ,OAAQ,EAFhD;AAAA,iCAIE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACE,QAAC,YAAD;AAAc,cAAA,QAAQ,EAAER,aAAxB;AAAuC,cAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,aAAb;AAAA,2BACGF,KAAK,CAACV,IADT,EACe,GADf,eAEE;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,kCAA8BU,KAAK,CAACM,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAnCF,eAoCE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAIvB,CAAC,CAAC,OAAD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAKT,YAAY,CAAC0B,KAAK,CAACT,QAAP,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,eAwCE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAIR,CAAC,CAAC,QAAD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAG,sBAAqBwB,UAAW,EAAjD;AAAA,iCACE;AAAA,uBAAQhC,iBAAiB,CAAC6B,MAAM,CAACJ,KAAK,CAACR,cAAP,CAAP,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF,eA8CE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAIT,CAAC,CAAC,QAAD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAKT,YAAY,CAAC0B,KAAK,CAACP,eAAP,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,eAkDE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAIV,CAAC,CAAC,WAAD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAKT,YAAY,CAAC0B,KAAK,CAACL,iBAAP,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyDD,GAlED;;AAoEA,QAAMgB,WAAW,GAAIX,KAAD,IAAgB;AAClC,UAAME,aAAa,GAAG,IAAIhC,KAAJ,CACpBD,OAAO,CAACkC,OADY,EAEpBnC,UAAU,CAACgC,KAAK,CAACf,EAAP,CAFU,EAGpBmB,MAAM,CAACJ,KAAK,CAACK,QAAP,CAHc,EAIpBL,KAAK,CAACM,MAJc,EAKpBN,KAAK,CAACV,IALc,CAAtB;AAOA,UAAMiB,UAAU,GAAG/B,aAAa,CAAC4B,MAAM,CAACJ,KAAK,CAACR,cAAP,CAAP,CAAhC;AAEA,WAAO,CACL;AACEoB,MAAAA,IAAI,eACF,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE,QAAC,GAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMJ,UAAU,GAAGZ,cAAc,CAACa,OAAf,CAAuBT,KAAK,CAACf,EAA7B,CAAnB;;AACA,gBAAIuB,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrBX,cAAAA,gBAAgB,CAACG,KAAK,CAACf,EAAP,CAAhB;AACD,aAFD,MAEO;AACLa,cAAAA,mBAAmB,CAACE,KAAK,CAACf,EAAP,CAAnB;AACD;AACF,WAVH;AAAA,oBAYGW,cAAc,CAACa,OAAf,CAAuBT,KAAK,CAACf,EAA7B,IAAmC,CAAC,CAApC,gBACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADD,gBAGC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE,QAAC,IAAD;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,EAAE,EAAG,oBAAmBiB,aAAa,CAACQ,OAAQ,EAFhD;AAAA,iCAIE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACE,QAAC,YAAD;AAAc,cAAA,QAAQ,EAAER,aAAxB;AAAuC,cAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,aAAb;AAAA,2BACGF,KAAK,CAACV,IADT,EACe,GADf,eAEE;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,kCAA8BU,KAAK,CAACM,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,KADK,EAuCL;AACEM,MAAAA,IAAI,eACF,QAAC,GAAD;AAAA,+BACE;AAAA,0BAAKtC,YAAY,CAAC0B,KAAK,CAACT,QAAP,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ,KAvCK,EA8CL;AACEqB,MAAAA,IAAI,eACF,QAAC,GAAD;AAAK,QAAA,SAAS,EAAG,sBAAqBL,UAAW,EAAjD;AAAoD,QAAA,EAAE,EAAE,CAAxD;AAAA,+BACE;AAAA,qBAAQhC,iBAAiB,CAAC6B,MAAM,CAACJ,KAAK,CAACR,cAAP,CAAP,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ,KA9CK,EAqDL;AACEoB,MAAAA,IAAI,eAAE;AAAA,wBAAKtC,YAAY,CAAC0B,KAAK,CAACP,eAAP,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADR,KArDK,EAwDL;AACEmB,MAAAA,IAAI,eAAE;AAAA,wBAAKtC,YAAY,CAAC0B,KAAK,CAACL,iBAAP,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADR,KAxDK,CAAP;AA4DD,GAtED;;AAwEA,sBACE,QAAC,WAAD;AACE,IAAA,cAAc,EAAEX,cAAc,CAACL,sBAAD,CADhC;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,cAAc,EAAEG,cAHlB;AAIE,IAAA,SAAS,EAAEE,cAJb;AAKE,IAAA,WAAW,EAAEX,WAAW,CAACwC,KAAZ,CAAkBC,WALjC;AAME,IAAA,IAAI,EAAEjC,IANR;AAOE,IAAA,UAAU,EAAEkB,UAPd;AAQE,IAAA,WAAW,EAAEY;AARf;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnMD;;GAAM/B,W;UAIUF,c,EAsCVD,iB;;;KA1CAG,W;AAqMN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Divider } from '@material-ui/core';\nimport { getAddress } from '@ethersproject/address';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { CurrencyLogo, CustomTable } from 'components';\nimport { GlobalConst } from 'constants/index';\nimport { formatNumber, getFormattedPrice, getPriceClass } from 'utils';\nimport { useBookmarkTokens } from 'state/application/hooks';\nimport { ReactComponent as StarChecked } from 'assets/images/StarChecked.svg';\nimport { ReactComponent as StarUnchecked } from 'assets/images/StarUnchecked.svg';\nimport 'components/styles/TokensTable.scss';\nimport { useTranslation } from 'react-i18next';\n\ninterface TokensTableProps {\n  data: any[];\n  showPagination?: boolean;\n}\n\nconst liquidityHeadCellIndex = 4;\n\nconst TokensTable: React.FC<TokensTableProps> = ({\n  data,\n  showPagination = true,\n}) => {\n  const { t } = useTranslation();\n  const tokenHeadCells = [\n    {\n      id: 'tokenName',\n      numeric: false,\n      label: t('name'),\n      sortKey: (item: any) => item.name,\n    },\n    {\n      id: 'tokenPrice',\n      numeric: false,\n      label: t('price'),\n      sortKey: (item: any) => item.priceUSD,\n    },\n    {\n      id: 'tokenUpPercent',\n      numeric: false,\n      label: t('24hPer'),\n      sortKey: (item: any) => item.priceChangeUSD,\n    },\n    {\n      id: 'tokenVolume',\n      numeric: false,\n      label: t('24hVol'),\n      sortKey: (item: any) => item.oneDayVolumeUSD,\n    },\n    {\n      id: 'tokenLiquidity',\n      numeric: false,\n      label: t('liquidity'),\n      align: 'right',\n      sortKey: (item: any) => item.totalLiquidityUSD,\n    },\n  ];\n  const {\n    bookmarkTokens,\n    addBookmarkToken,\n    removeBookmarkToken,\n  } = useBookmarkTokens();\n  const mobileHTML = (token: any, index: number) => {\n    const tokenCurrency = new Token(\n      ChainId.MAINNET,\n      getAddress(token.id),\n      Number(token.decimals),\n      token.symbol,\n      token.name,\n    );\n    const priceClass = getPriceClass(Number(token.priceChangeUSD));\n    return (\n      <Box mt={index === 0 ? 0 : 3}>\n        <Box className='flex items-center' mb={1}>\n          <Box\n            display='flex'\n            mr={1}\n            onClick={() => {\n              const tokenIndex = bookmarkTokens.indexOf(token.id);\n              if (tokenIndex === -1) {\n                addBookmarkToken(token.id);\n              } else {\n                removeBookmarkToken(token.id);\n              }\n            }}\n          >\n            {bookmarkTokens.indexOf(token.id) > -1 ? (\n              <StarChecked />\n            ) : (\n              <StarUnchecked />\n            )}\n          </Box>\n          <Link\n            className='no-decoration'\n            to={`/analytics/token/${tokenCurrency.address}`}\n          >\n            <Box className='flex items-center'>\n              <CurrencyLogo currency={tokenCurrency} size='28px' />\n              <Box ml={1}>\n                <p className='text-gray25'>\n                  {token.name}{' '}\n                  <span className='text-hint'>({token.symbol})</span>\n                </p>\n              </Box>\n            </Box>\n          </Link>\n        </Box>\n        <Divider />\n        <Box className='mobileRow'>\n          <p>{t('price')}</p>\n          <p>${formatNumber(token.priceUSD)}</p>\n        </Box>\n        <Box className='mobileRow'>\n          <p>{t('24hPer')}</p>\n          <Box className={`priceChangeWrapper ${priceClass}`}>\n            <small>{getFormattedPrice(Number(token.priceChangeUSD))}%</small>\n          </Box>\n        </Box>\n        <Box className='mobileRow'>\n          <p>{t('24hVol')}</p>\n          <p>${formatNumber(token.oneDayVolumeUSD)}</p>\n        </Box>\n        <Box className='mobileRow'>\n          <p>{t('liquidity')}</p>\n          <p>${formatNumber(token.totalLiquidityUSD)}</p>\n        </Box>\n      </Box>\n    );\n  };\n\n  const desktopHTML = (token: any) => {\n    const tokenCurrency = new Token(\n      ChainId.MAINNET,\n      getAddress(token.id),\n      Number(token.decimals),\n      token.symbol,\n      token.name,\n    );\n    const priceClass = getPriceClass(Number(token.priceChangeUSD));\n\n    return [\n      {\n        html: (\n          <Box className='flex items-center'>\n            <Box\n              display='flex'\n              mr={1}\n              onClick={() => {\n                const tokenIndex = bookmarkTokens.indexOf(token.id);\n                if (tokenIndex === -1) {\n                  addBookmarkToken(token.id);\n                } else {\n                  removeBookmarkToken(token.id);\n                }\n              }}\n            >\n              {bookmarkTokens.indexOf(token.id) > -1 ? (\n                <StarChecked />\n              ) : (\n                <StarUnchecked />\n              )}\n            </Box>\n            <Link\n              className='no-decoration'\n              to={`/analytics/token/${tokenCurrency.address}`}\n            >\n              <Box className='flex items-center'>\n                <CurrencyLogo currency={tokenCurrency} size='28px' />\n                <Box ml={1}>\n                  <p className='text-gray25'>\n                    {token.name}{' '}\n                    <span className='text-hint'>({token.symbol})</span>\n                  </p>\n                </Box>\n              </Box>\n            </Link>\n          </Box>\n        ),\n      },\n      {\n        html: (\n          <Box>\n            <p>${formatNumber(token.priceUSD)}</p>\n          </Box>\n        ),\n      },\n      {\n        html: (\n          <Box className={`priceChangeWrapper ${priceClass}`} mr={2}>\n            <small>{getFormattedPrice(Number(token.priceChangeUSD))}%</small>\n          </Box>\n        ),\n      },\n      {\n        html: <p>${formatNumber(token.oneDayVolumeUSD)}</p>,\n      },\n      {\n        html: <p>${formatNumber(token.totalLiquidityUSD)}</p>,\n      },\n    ];\n  };\n\n  return (\n    <CustomTable\n      defaultOrderBy={tokenHeadCells[liquidityHeadCellIndex]}\n      defaultOrder='desc'\n      showPagination={showPagination}\n      headCells={tokenHeadCells}\n      rowsPerPage={GlobalConst.utils.ROWSPERPAGE}\n      data={data}\n      mobileHTML={mobileHTML}\n      desktopHTML={desktopHTML}\n    />\n  );\n};\n\nexport default TokensTable;\n"]},"metadata":{},"sourceType":"module"}