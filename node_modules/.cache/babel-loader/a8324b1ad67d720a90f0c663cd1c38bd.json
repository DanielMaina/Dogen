{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar querystring_1 = tslib_1.__importDefault(require(\"querystring\"));\n\nvar WindowMode_1 = require(\"../models/WindowMode\");\n\nvar PopupWindow_1 = require(\"../popup/PopupWindow\");\n\nvar EventTypes_1 = require(\"../types/EventTypes\");\n\nvar Utils_1 = tslib_1.__importDefault(require(\"../utils/Utils\"));\n\nvar Security =\n/** @class */\nfunction () {\n  function Security() {}\n\n  Security.getConfig = function (clientId) {\n    return {\n      'clientId': clientId || Utils_1.default.env.CONNECT_JS_CLIENT_ID,\n      'realm': Utils_1.default.env.CONNECT_JS_REALM,\n      'url': Utils_1.default.urls.login,\n      'ssl-required': Utils_1.default.env.CONNECT_JS_SSL_REQUIRED,\n      'public-client': Utils_1.default.env.CONNECT_JS_PUBLIC_CLIENT\n    };\n  };\n\n  Security.login = function (clientId, options) {\n    switch (options && options.windowMode) {\n      case WindowMode_1.WindowMode.POPUP:\n        return Security.loginPopup(clientId, options);\n      // case WindowMode.IFRAME:\n      //     return Security.initLoginIFrame(clientId, options && options.iFrameSelector || '#login-iframe');\n\n      default:\n        return Security.loginRedirect(clientId, options);\n    }\n  }; // public static initLoginIFrame(clientId: string, iFrameSelector: string) {\n  //     return new Promise(async (resolve: (value?: LoginResult | PromiseLike<LoginResult>) => void, reject: (reason?: any) => void) => {\n  //         Security.loginListener = await Security.createLoginListener(clientId, EventTypes.AUTHENTICATE, resolve, reject);\n  //         window.addEventListener('message', Security.loginListener);\n  //         Security.initialiseLoginIFrame(clientId, iFrameSelector);\n  //     }) as Promise<LoginResult>;\n  // }\n\n\n  Security.loginRedirect = function (clientId, options) {\n    var config = Security.getConfig(clientId);\n    var loginOptions = {};\n\n    if (options && options.idpHint) {\n      loginOptions.idpHint = options.idpHint;\n    }\n\n    return this.keycloakLogin(config, options);\n  };\n\n  Security.loginPopup = function (clientId, options) {\n    var closePopup = options ? options.closePopup : true;\n    return Promise.race([Security.initialiseAuthenticatedListener(clientId, EventTypes_1.EventTypes.AUTHENTICATE, closePopup), Security.initialiseLoginPopup(clientId, options)]);\n  };\n\n  Security.checkAuthenticated = function (clientId) {\n    var authenticatedPromise = Security.initialiseAuthenticatedListener(clientId, EventTypes_1.EventTypes.CHECK_AUTHENTICATED);\n    Security.initialiseCheckAuthenticatedIFrame(clientId);\n    return authenticatedPromise;\n  };\n\n  Security.logout = function (auth) {\n    var _this = this;\n\n    if (auth.authenticated && auth.clientId) {\n      return new Promise(function (resolve, reject) {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          var params_1, searchParams, _a;\n\n          return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!auth.clientId) return [3\n                /*break*/\n                , 3];\n                params_1 = {\n                  client_id: auth.clientId,\n                  refresh_token: auth.refreshToken\n                };\n                searchParams = Object.keys(params_1).map(function (key) {\n                  return encodeURIComponent(key) + '=' + encodeURIComponent(params_1[key]);\n                }).join('&');\n                return [4\n                /*yield*/\n                , fetch(Utils_1.default.urls.login + '/realms/Arkane/protocol/openid-connect/logout', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n                  },\n                  body: searchParams\n                })];\n\n              case 1:\n                _b.sent();\n\n                _a = Security;\n                return [4\n                /*yield*/\n                , Security.createLogoutListener(EventTypes_1.EventTypes.LOGOUT, auth, resolve, reject)];\n\n              case 2:\n                _a.logoutListener = _b.sent();\n                window.addEventListener('message', Security.logoutListener);\n                Security.initialiseLogoutIFrame(auth.clientId);\n                _b.label = 3;\n\n              case 3:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    } else {\n      return Promise.resolve();\n    }\n  };\n\n  Object.defineProperty(Security, \"checkAuthenticatedURI\", {\n    get: function () {\n      return Utils_1.default.urls.connect + \"/checkAuthenticated\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Security, \"authenticateURI\", {\n    get: function () {\n      return Utils_1.default.urls.connect + \"/authenticate\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Security, \"logoutURI\", {\n    get: function () {\n      return Utils_1.default.urls.connect + \"/logout\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Security.initialiseLoginPopup = function (clientId, options) {\n    var origin = window.location.href.replace(window.location.search, '');\n    var url = Security.authenticateURI + \"?\" + querystring_1.default.stringify({\n      clientId: clientId,\n      origin: origin,\n      env: Utils_1.default.rawEnvironment\n    });\n\n    if (options && options.idpHint) {\n      var kcIdpHint = options.idpHint;\n\n      if (kcIdpHint === 'twitter' || kcIdpHint === 'facebook') {\n        kcIdpHint = 'arkane-' + kcIdpHint;\n      }\n\n      url += \"&\" + querystring_1.default.stringify({\n        kc_idp_hint: kcIdpHint\n      });\n    }\n\n    Security.popupWindow = PopupWindow_1.PopupWindow.openNew(url, {\n      useOverlay: false\n    });\n    return Security.initialiseIsLoginPopupClosedInterval();\n  };\n\n  Security.initialiseIsLoginPopupClosedInterval = function () {\n    return new Promise(function (resolve, reject) {\n      Security.isLoginPopupClosedInterval = window.setInterval(function () {\n        if (Security.popupWindow.closed) {\n          Security.clearIsLoginPopupClosedInterval();\n          Security.cleanUp(EventTypes_1.EventTypes.AUTHENTICATE);\n          resolve({\n            authenticated: false\n          });\n        }\n      }, 2000);\n    });\n  };\n\n  Security.clearIsLoginPopupClosedInterval = function () {\n    clearInterval(Security.isLoginPopupClosedInterval);\n    delete Security.isLoginPopupClosedInterval;\n  }; // private static initialiseLoginIFrame(clientId: string, iframeSelector: string): HTMLIFrameElement {\n  //     const iframe = document.querySelector(iframeSelector) as HTMLIFrameElement;\n  //     const origin = window.location.href.replace(window.location.search, '');\n  //     iframe.src = `${Security.authenticateURI}?${QueryString.stringify({clientId: clientId, origin: origin, env: Utils.rawEnvironment})}`;\n  //     return iframe;\n  // }\n\n\n  Security.initialiseCheckAuthenticatedIFrame = function (clientId) {\n    return this.initialiseIFrame(clientId, Security.AUTH_IFRAME_ID, Security.checkAuthenticatedURI);\n  };\n\n  Security.initialiseLogoutIFrame = function (clientId) {\n    return this.initialiseIFrame(clientId, Security.LOGOUT_IFRAME_ID, Security.logoutURI);\n  };\n\n  Security.initialiseIFrame = function (clientId, iframeID, uri) {\n    var iframe = document.getElementById(iframeID);\n    var isIframeInBody = true;\n\n    if (!iframe) {\n      isIframeInBody = false;\n      iframe = document.createElement('iframe');\n    }\n\n    var origin = window.location.href.replace(window.location.search, '');\n    iframe.src = uri + \"?\" + querystring_1.default.stringify({\n      clientId: clientId,\n      origin: origin,\n      env: Utils_1.default.rawEnvironment\n    });\n    iframe.hidden = true;\n    iframe.id = iframeID;\n    iframe.setAttribute('style', 'display: none!important;');\n    document.body.appendChild(iframe);\n\n    if (!isIframeInBody) {\n      document.body.appendChild(iframe);\n    }\n\n    return iframe;\n  };\n\n  Security.setUpdateTokenInterval = function () {\n    var _this = this;\n\n    if (Security.updateTokenInterval) {\n      clearInterval(Security.updateTokenInterval);\n      Security.updateTokenInterval = null;\n    }\n\n    Security.updateTokenInterval = setInterval(function () {\n      return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        return tslib_1.__generator(this, function (_a) {\n          new Promise(function (resolve, reject) {\n            if (Security.keycloak) {\n              Security.keycloak.updateToken(70).then(function (refreshed) {\n                resolve(refreshed);\n              });\n            } else {\n              reject(false);\n            }\n          }).then(function (refreshed) {\n            if (refreshed) {\n              if (Security.onTokenUpdate && Security.keycloak.token) {\n                Security.onTokenUpdate(Security.keycloak.token);\n              }\n            }\n          }).catch(function () {\n            console.error('failed to refresh token');\n            clearInterval(Security.updateTokenInterval);\n            Security.updateTokenInterval = null;\n          });\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    }, 60000);\n  };\n\n  Security.keycloakLogin = function (config, loginOptions) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var Keycloak;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.resolve().then(function () {\n              return tslib_1.__importStar(require('keycloak-js'));\n            })];\n\n          case 1:\n            Keycloak = _a.sent();\n            Security.keycloak = Keycloak.default(config);\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              Security.keycloak.init({}).then(function () {\n                return Security.keycloak.login(loginOptions).then(function (authenticated) {\n                  if (authenticated) {\n                    Security.setUpdateTokenInterval();\n                  }\n\n                  resolve({\n                    keycloak: Security.keycloak,\n                    authenticated: authenticated\n                  });\n                }).catch(function (e) {\n                  reject(e);\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  Security.initKeycloak = function (config, initOptions) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var Keycloak;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.resolve().then(function () {\n              return tslib_1.__importStar(require('keycloak-js'));\n            })];\n\n          case 1:\n            Keycloak = _a.sent();\n            Security.keycloak = Keycloak.default(config);\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              Security.keycloak.init(initOptions).then(function (authenticated) {\n                if (authenticated) {\n                  Security.setUpdateTokenInterval();\n                }\n\n                resolve({\n                  keycloak: Security.keycloak,\n                  authenticated: authenticated\n                });\n              }).catch(function (e) {\n                reject(e);\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  Security.removeLoginState = function () {\n    var url = window.location.href;\n    var fragmentIndex = url.indexOf('#');\n\n    if (fragmentIndex !== -1) {\n      var newURL = url.substring(0, fragmentIndex);\n      window.history.replaceState({}, '', newURL);\n    }\n  };\n\n  Security.cleanUp = function (eventType, closePopup) {\n    if (closePopup === void 0) {\n      closePopup = true;\n    }\n\n    if (Security.authenticatedListener) {\n      window.removeEventListener('message', Security.authenticatedListener);\n      delete Security.authenticatedListener;\n    }\n\n    if (eventType === EventTypes_1.EventTypes.CHECK_AUTHENTICATED) {\n      var iframe = document.getElementById(Security.AUTH_IFRAME_ID);\n\n      if (iframe) {\n        iframe.remove();\n      }\n    } else if (eventType === EventTypes_1.EventTypes.AUTHENTICATE) {\n      if (closePopup && Security.popupWindow && !Security.popupWindow.closed) {\n        Security.popupWindow.close();\n      }\n    }\n  };\n\n  Security.AUTH_IFRAME_ID = 'arkane-auth-iframe';\n  Security.LOGOUT_IFRAME_ID = 'arkane-logout-iframe';\n\n  Security.initialiseAuthenticatedListener = function (clientId, eventType, closePopup) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          Security.authenticatedListener = function (message) {\n            return tslib_1.__awaiter(_this, void 0, void 0, function () {\n              var keycloakResult, initOptions, loginResult, e_1;\n              return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!(message && message.origin === Utils_1.default.urls.connect && message.data && message.data.type === eventType)) return [3\n                    /*break*/\n                    , 6];\n\n                    if (Security.isLoginPopupClosedInterval) {\n                      Security.clearIsLoginPopupClosedInterval();\n                    }\n\n                    if (!message.data.authenticated) return [3\n                    /*break*/\n                    , 5];\n                    _a.label = 1;\n\n                  case 1:\n                    _a.trys.push([1, 3,, 4]);\n\n                    Security.cleanUp(eventType, closePopup);\n                    keycloakResult = message.data.keycloak;\n                    initOptions = {\n                      onLoad: 'check-sso',\n                      token: keycloakResult.token,\n                      refreshToken: keycloakResult.refreshToken,\n                      idToken: keycloakResult.idToken,\n                      timeSkew: keycloakResult.timeSkew,\n                      checkLoginIframe: false\n                    }; // Remove the login state from the URL when tokens are already present (the checkAuthenticated iframe already handled it)\n\n                    Security.removeLoginState();\n                    return [4\n                    /*yield*/\n                    , Security.initKeycloak(Security.getConfig(clientId), initOptions)];\n\n                  case 2:\n                    loginResult = _a.sent();\n                    resolve({\n                      keycloak: loginResult.keycloak,\n                      authenticated: loginResult.authenticated,\n                      popupWindow: Security.popupWindow\n                    });\n                    return [3\n                    /*break*/\n                    , 4];\n\n                  case 3:\n                    e_1 = _a.sent();\n                    reject({\n                      error: e_1\n                    });\n                    return [3\n                    /*break*/\n                    , 4];\n\n                  case 4:\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 5:\n                    resolve({\n                      authenticated: false\n                    });\n                    _a.label = 6;\n\n                  case 6:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          };\n\n          window.addEventListener('message', Security.authenticatedListener);\n        })];\n      });\n    });\n  };\n\n  Security.createLogoutListener = function (eventType, auth, resolve, reject) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , function (message) {\n          if (message && message.origin === Utils_1.default.urls.connect && message.data && message.data.type === eventType) {\n            if (auth.authenticated) {\n              if (!message.data.authenticated) {\n                auth.onAuthLogout && auth.onAuthLogout();\n                resolve();\n              } else {\n                reject();\n              }\n            } else {\n              resolve();\n            }\n          }\n        }];\n      });\n    });\n  };\n\n  return Security;\n}();\n\nexports.Security = Security;","map":{"version":3,"sources":["../../../src/connect/Security.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar querystring_1 = tslib_1.__importDefault(require(\"querystring\"));\nvar WindowMode_1 = require(\"../models/WindowMode\");\nvar PopupWindow_1 = require(\"../popup/PopupWindow\");\nvar EventTypes_1 = require(\"../types/EventTypes\");\nvar Utils_1 = tslib_1.__importDefault(require(\"../utils/Utils\"));\nvar Security = /** @class */ (function () {\n    function Security() {\n    }\n    Security.getConfig = function (clientId) {\n        return {\n            'clientId': clientId || Utils_1.default.env.CONNECT_JS_CLIENT_ID,\n            'realm': Utils_1.default.env.CONNECT_JS_REALM,\n            'url': Utils_1.default.urls.login,\n            'ssl-required': Utils_1.default.env.CONNECT_JS_SSL_REQUIRED,\n            'public-client': Utils_1.default.env.CONNECT_JS_PUBLIC_CLIENT,\n        };\n    };\n    Security.login = function (clientId, options) {\n        switch (options && options.windowMode) {\n            case WindowMode_1.WindowMode.POPUP:\n                return Security.loginPopup(clientId, options);\n            // case WindowMode.IFRAME:\n            //     return Security.initLoginIFrame(clientId, options && options.iFrameSelector || '#login-iframe');\n            default:\n                return Security.loginRedirect(clientId, options);\n        }\n    };\n    // public static initLoginIFrame(clientId: string, iFrameSelector: string) {\n    //     return new Promise(async (resolve: (value?: LoginResult | PromiseLike<LoginResult>) => void, reject: (reason?: any) => void) => {\n    //         Security.loginListener = await Security.createLoginListener(clientId, EventTypes.AUTHENTICATE, resolve, reject);\n    //         window.addEventListener('message', Security.loginListener);\n    //         Security.initialiseLoginIFrame(clientId, iFrameSelector);\n    //     }) as Promise<LoginResult>;\n    // }\n    Security.loginRedirect = function (clientId, options) {\n        var config = Security.getConfig(clientId);\n        var loginOptions = {};\n        if (options && options.idpHint) {\n            loginOptions.idpHint = options.idpHint;\n        }\n        return this.keycloakLogin(config, options);\n    };\n    Security.loginPopup = function (clientId, options) {\n        var closePopup = options ? options.closePopup : true;\n        return Promise.race([\n            Security.initialiseAuthenticatedListener(clientId, EventTypes_1.EventTypes.AUTHENTICATE, closePopup),\n            Security.initialiseLoginPopup(clientId, options),\n        ]);\n    };\n    Security.checkAuthenticated = function (clientId) {\n        var authenticatedPromise = Security.initialiseAuthenticatedListener(clientId, EventTypes_1.EventTypes.CHECK_AUTHENTICATED);\n        Security.initialiseCheckAuthenticatedIFrame(clientId);\n        return authenticatedPromise;\n    };\n    Security.logout = function (auth) {\n        var _this = this;\n        if (auth.authenticated && auth.clientId) {\n            return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var params_1, searchParams, _a;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (!auth.clientId) return [3 /*break*/, 3];\n                            params_1 = {\n                                client_id: auth.clientId,\n                                refresh_token: auth.refreshToken\n                            };\n                            searchParams = Object.keys(params_1).map(function (key) {\n                                return encodeURIComponent(key) + '=' + encodeURIComponent(params_1[key]);\n                            }).join('&');\n                            return [4 /*yield*/, fetch(Utils_1.default.urls.login + '/realms/Arkane/protocol/openid-connect/logout', {\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n                                    },\n                                    body: searchParams\n                                })];\n                        case 1:\n                            _b.sent();\n                            _a = Security;\n                            return [4 /*yield*/, Security.createLogoutListener(EventTypes_1.EventTypes.LOGOUT, auth, resolve, reject)];\n                        case 2:\n                            _a.logoutListener = _b.sent();\n                            window.addEventListener('message', Security.logoutListener);\n                            Security.initialiseLogoutIFrame(auth.clientId);\n                            _b.label = 3;\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            }); });\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    Object.defineProperty(Security, \"checkAuthenticatedURI\", {\n        get: function () {\n            return Utils_1.default.urls.connect + \"/checkAuthenticated\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Security, \"authenticateURI\", {\n        get: function () {\n            return Utils_1.default.urls.connect + \"/authenticate\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Security, \"logoutURI\", {\n        get: function () {\n            return Utils_1.default.urls.connect + \"/logout\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Security.initialiseLoginPopup = function (clientId, options) {\n        var origin = window.location.href.replace(window.location.search, '');\n        var url = Security.authenticateURI + \"?\" + querystring_1.default.stringify({ clientId: clientId, origin: origin, env: Utils_1.default.rawEnvironment });\n        if (options && options.idpHint) {\n            var kcIdpHint = options.idpHint;\n            if (kcIdpHint === 'twitter' || kcIdpHint === 'facebook') {\n                kcIdpHint = 'arkane-' + kcIdpHint;\n            }\n            url += \"&\" + querystring_1.default.stringify({ kc_idp_hint: kcIdpHint });\n        }\n        Security.popupWindow = PopupWindow_1.PopupWindow.openNew(url, { useOverlay: false });\n        return Security.initialiseIsLoginPopupClosedInterval();\n    };\n    Security.initialiseIsLoginPopupClosedInterval = function () {\n        return new Promise(function (resolve, reject) {\n            Security.isLoginPopupClosedInterval = window.setInterval(function () {\n                if (Security.popupWindow.closed) {\n                    Security.clearIsLoginPopupClosedInterval();\n                    Security.cleanUp(EventTypes_1.EventTypes.AUTHENTICATE);\n                    resolve({ authenticated: false });\n                }\n            }, 2000);\n        });\n    };\n    Security.clearIsLoginPopupClosedInterval = function () {\n        clearInterval(Security.isLoginPopupClosedInterval);\n        delete Security.isLoginPopupClosedInterval;\n    };\n    // private static initialiseLoginIFrame(clientId: string, iframeSelector: string): HTMLIFrameElement {\n    //     const iframe = document.querySelector(iframeSelector) as HTMLIFrameElement;\n    //     const origin = window.location.href.replace(window.location.search, '');\n    //     iframe.src = `${Security.authenticateURI}?${QueryString.stringify({clientId: clientId, origin: origin, env: Utils.rawEnvironment})}`;\n    //     return iframe;\n    // }\n    Security.initialiseCheckAuthenticatedIFrame = function (clientId) {\n        return this.initialiseIFrame(clientId, Security.AUTH_IFRAME_ID, Security.checkAuthenticatedURI);\n    };\n    Security.initialiseLogoutIFrame = function (clientId) {\n        return this.initialiseIFrame(clientId, Security.LOGOUT_IFRAME_ID, Security.logoutURI);\n    };\n    Security.initialiseIFrame = function (clientId, iframeID, uri) {\n        var iframe = document.getElementById(iframeID);\n        var isIframeInBody = true;\n        if (!iframe) {\n            isIframeInBody = false;\n            iframe = document.createElement('iframe');\n        }\n        var origin = window.location.href.replace(window.location.search, '');\n        iframe.src = uri + \"?\" + querystring_1.default.stringify({ clientId: clientId, origin: origin, env: Utils_1.default.rawEnvironment });\n        iframe.hidden = true;\n        iframe.id = iframeID;\n        iframe.setAttribute('style', 'display: none!important;');\n        document.body.appendChild(iframe);\n        if (!isIframeInBody) {\n            document.body.appendChild(iframe);\n        }\n        return iframe;\n    };\n    Security.setUpdateTokenInterval = function () {\n        var _this = this;\n        if (Security.updateTokenInterval) {\n            clearInterval(Security.updateTokenInterval);\n            Security.updateTokenInterval = null;\n        }\n        Security.updateTokenInterval = setInterval(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                new Promise(function (resolve, reject) {\n                    if (Security.keycloak) {\n                        Security.keycloak.updateToken(70).then(function (refreshed) {\n                            resolve(refreshed);\n                        });\n                    }\n                    else {\n                        reject(false);\n                    }\n                }).then(function (refreshed) {\n                    if (refreshed) {\n                        if (Security.onTokenUpdate && Security.keycloak.token) {\n                            Security.onTokenUpdate(Security.keycloak.token);\n                        }\n                    }\n                }).catch(function () {\n                    console.error('failed to refresh token');\n                    clearInterval(Security.updateTokenInterval);\n                    Security.updateTokenInterval = null;\n                });\n                return [2 /*return*/];\n            });\n        }); }, 60000);\n    };\n    Security.keycloakLogin = function (config, loginOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var Keycloak;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve().then(function () { return tslib_1.__importStar(require('keycloak-js')); })];\n                    case 1:\n                        Keycloak = _a.sent();\n                        Security.keycloak = Keycloak.default(config);\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                Security.keycloak\n                                    .init({}).then(function () { return Security.keycloak\n                                    .login(loginOptions)\n                                    .then(function (authenticated) {\n                                    if (authenticated) {\n                                        Security.setUpdateTokenInterval();\n                                    }\n                                    resolve({\n                                        keycloak: Security.keycloak,\n                                        authenticated: authenticated,\n                                    });\n                                })\n                                    .catch(function (e) {\n                                    reject(e);\n                                }); });\n                            })];\n                }\n            });\n        });\n    };\n    Security.initKeycloak = function (config, initOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var Keycloak;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve().then(function () { return tslib_1.__importStar(require('keycloak-js')); })];\n                    case 1:\n                        Keycloak = _a.sent();\n                        Security.keycloak = Keycloak.default(config);\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                Security.keycloak\n                                    .init(initOptions)\n                                    .then(function (authenticated) {\n                                    if (authenticated) {\n                                        Security.setUpdateTokenInterval();\n                                    }\n                                    resolve({\n                                        keycloak: Security.keycloak,\n                                        authenticated: authenticated,\n                                    });\n                                })\n                                    .catch(function (e) {\n                                    reject(e);\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    Security.removeLoginState = function () {\n        var url = window.location.href;\n        var fragmentIndex = url.indexOf('#');\n        if (fragmentIndex !== -1) {\n            var newURL = url.substring(0, fragmentIndex);\n            window.history.replaceState({}, '', newURL);\n        }\n    };\n    Security.cleanUp = function (eventType, closePopup) {\n        if (closePopup === void 0) { closePopup = true; }\n        if (Security.authenticatedListener) {\n            window.removeEventListener('message', Security.authenticatedListener);\n            delete Security.authenticatedListener;\n        }\n        if (eventType === EventTypes_1.EventTypes.CHECK_AUTHENTICATED) {\n            var iframe = document.getElementById(Security.AUTH_IFRAME_ID);\n            if (iframe) {\n                iframe.remove();\n            }\n        }\n        else if (eventType === EventTypes_1.EventTypes.AUTHENTICATE) {\n            if (closePopup && Security.popupWindow && !Security.popupWindow.closed) {\n                Security.popupWindow.close();\n            }\n        }\n    };\n    Security.AUTH_IFRAME_ID = 'arkane-auth-iframe';\n    Security.LOGOUT_IFRAME_ID = 'arkane-logout-iframe';\n    Security.initialiseAuthenticatedListener = function (clientId, eventType, closePopup) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        Security.authenticatedListener = function (message) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                            var keycloakResult, initOptions, loginResult, e_1;\n                            return tslib_1.__generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!(message && message.origin === Utils_1.default.urls.connect && message.data && message.data.type === eventType)) return [3 /*break*/, 6];\n                                        if (Security.isLoginPopupClosedInterval) {\n                                            Security.clearIsLoginPopupClosedInterval();\n                                        }\n                                        if (!message.data.authenticated) return [3 /*break*/, 5];\n                                        _a.label = 1;\n                                    case 1:\n                                        _a.trys.push([1, 3, , 4]);\n                                        Security.cleanUp(eventType, closePopup);\n                                        keycloakResult = message.data.keycloak;\n                                        initOptions = {\n                                            onLoad: 'check-sso',\n                                            token: keycloakResult.token,\n                                            refreshToken: keycloakResult.refreshToken,\n                                            idToken: keycloakResult.idToken,\n                                            timeSkew: keycloakResult.timeSkew,\n                                            checkLoginIframe: false,\n                                        };\n                                        // Remove the login state from the URL when tokens are already present (the checkAuthenticated iframe already handled it)\n                                        Security.removeLoginState();\n                                        return [4 /*yield*/, Security.initKeycloak(Security.getConfig(clientId), initOptions)];\n                                    case 2:\n                                        loginResult = _a.sent();\n                                        resolve({\n                                            keycloak: loginResult.keycloak,\n                                            authenticated: loginResult.authenticated,\n                                            popupWindow: Security.popupWindow\n                                        });\n                                        return [3 /*break*/, 4];\n                                    case 3:\n                                        e_1 = _a.sent();\n                                        reject({ error: e_1 });\n                                        return [3 /*break*/, 4];\n                                    case 4: return [3 /*break*/, 6];\n                                    case 5:\n                                        resolve({ authenticated: false });\n                                        _a.label = 6;\n                                    case 6: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        window.addEventListener('message', Security.authenticatedListener);\n                    })];\n            });\n        });\n    };\n    Security.createLogoutListener = function (eventType, auth, resolve, reject) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, function (message) {\n                        if (message && message.origin === Utils_1.default.urls.connect && message.data && message.data.type === eventType) {\n                            if (auth.authenticated) {\n                                if (!message.data.authenticated) {\n                                    auth.onAuthLogout && auth.onAuthLogout();\n                                    resolve();\n                                }\n                                else {\n                                    reject();\n                                }\n                            }\n                            else {\n                                resolve();\n                            }\n                        }\n                    }];\n            });\n        });\n    };\n    return Security;\n}());\nexports.Security = Security;\n//# sourceMappingURL=Security.js.map"]},"metadata":{},"sourceType":"script"}