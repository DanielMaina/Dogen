{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/FarmPage/FarmsList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { ArrowUp, ArrowDown } from 'react-feather';\nimport { useStakingInfo, useOldStakingInfo, useDualStakingInfo } from 'state/stake/hooks';\nimport { FarmCard, ToggleSwitch, CustomMenu, SearchInput, CustomSwitch } from 'components';\nimport { GlobalConst } from 'constants/index';\nimport { getAPYWithFee, getExactTokenAmount, getOneYearFee, getPageItemsToLoad, returnFullWidthMobile } from 'utils';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { useInfiniteLoading } from 'utils/useInfiniteLoading';\nimport { useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from 'hooks';\nimport { ChainId } from '@uniswap/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOADFARM_COUNT = 10;\nconst POOL_COLUMN = 1;\nconst TVL_COLUMN = 2;\nconst REWARDS_COLUMN = 3;\nconst APY_COLUMN = 4;\nconst EARNED_COLUMN = 5;\n\nconst FarmsList = _ref => {\n  _s();\n\n  let {\n    bulkPairs,\n    farmIndex\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    breakpoints\n  } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [isEndedFarm, setIsEndedFarm] = useState(false);\n  const [sortBy, setSortBy] = useState(0);\n  const [sortDesc, setSortDesc] = useState(false);\n  const [stakedOnly, setStakeOnly] = useState(false);\n  const [farmSearch, setFarmSearch] = useState('');\n  const [farmSearchInput, setFarmSearchInput] = useDebouncedChangeHandler(farmSearch, setFarmSearch);\n  const chainIdOrDefault = chainId !== null && chainId !== void 0 ? chainId : ChainId.MAINNET;\n  const addedLPStakingInfos = useStakingInfo(chainIdOrDefault, null, farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || isEndedFarm ? 0 : undefined, farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || isEndedFarm ? 0 : undefined, {\n    search: farmSearch,\n    isStaked: stakedOnly\n  });\n  const addedLPStakingOldInfos = useOldStakingInfo(chainIdOrDefault, null, farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || !isEndedFarm ? 0 : undefined, farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || !isEndedFarm ? 0 : undefined, {\n    search: farmSearch,\n    isStaked: stakedOnly\n  });\n  const addedDualStakingInfos = useDualStakingInfo(chainIdOrDefault, null, farmIndex === GlobalConst.farmIndex.LPFARM_INDEX ? 0 : undefined, farmIndex === GlobalConst.farmIndex.LPFARM_INDEX ? 0 : undefined, {\n    search: farmSearch,\n    isStaked: stakedOnly,\n    isEndedFarm\n  });\n  const sortIndex = sortDesc ? 1 : -1;\n  const sortByToken = useCallback((a, b) => {\n    const tokenStrA = a.tokens[0].symbol + '/' + a.tokens[1].symbol;\n    const tokenStrB = b.tokens[0].symbol + '/' + b.tokens[1].symbol;\n    return (tokenStrA > tokenStrB ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByTVL = useCallback((a, b) => {\n    var _a$tvl, _b$tvl;\n\n    return (Number((_a$tvl = a.tvl) !== null && _a$tvl !== void 0 ? _a$tvl : 0) > Number((_b$tvl = b.tvl) !== null && _b$tvl !== void 0 ? _b$tvl : 0) ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByRewardLP = useCallback((a, b) => {\n    return (getExactTokenAmount(a.totalRewardRate) > getExactTokenAmount(b.totalRewardRate) ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByRewardDual = useCallback((a, b) => {\n    const aRewards = a.rateA * a.rewardTokenAPrice + a.rateB * a.rewardTokenBPrice;\n    const bRewards = b.rateA * b.rewardTokenAPrice + b.rateB * b.rewardTokenBPrice;\n    return (aRewards > bRewards ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByAPY = useCallback((a, b) => {\n    var _a$perMonthReturnInRe, _b$perMonthReturnInRe;\n\n    let aYearFee = 0;\n    let bYearFee = 0;\n\n    if (bulkPairs) {\n      var _bulkPairs$a$pair, _bulkPairs$a$pair2, _bulkPairs$b$pair, _bulkPairs$b$pair2;\n\n      const aDayVolume = (_bulkPairs$a$pair = bulkPairs[a.pair]) === null || _bulkPairs$a$pair === void 0 ? void 0 : _bulkPairs$a$pair.oneDayVolumeUSD;\n      const aReserveUSD = (_bulkPairs$a$pair2 = bulkPairs[a.pair]) === null || _bulkPairs$a$pair2 === void 0 ? void 0 : _bulkPairs$a$pair2.reserveUSD;\n      const bDayVolume = (_bulkPairs$b$pair = bulkPairs[b.pair]) === null || _bulkPairs$b$pair === void 0 ? void 0 : _bulkPairs$b$pair.oneDayVolumeUSD;\n      const bReserveUSD = (_bulkPairs$b$pair2 = bulkPairs[b.pair]) === null || _bulkPairs$b$pair2 === void 0 ? void 0 : _bulkPairs$b$pair2.reserveUSD;\n\n      if (aDayVolume && aReserveUSD) {\n        aYearFee = getOneYearFee(aDayVolume, aReserveUSD);\n      }\n\n      if (bDayVolume && bReserveUSD) {\n        bYearFee = getOneYearFee(bDayVolume, bReserveUSD);\n      }\n    }\n\n    const aAPYwithFee = getAPYWithFee((_a$perMonthReturnInRe = a.perMonthReturnInRewards) !== null && _a$perMonthReturnInRe !== void 0 ? _a$perMonthReturnInRe : 0, aYearFee);\n    const bAPYwithFee = getAPYWithFee((_b$perMonthReturnInRe = b.perMonthReturnInRewards) !== null && _b$perMonthReturnInRe !== void 0 ? _b$perMonthReturnInRe : 0, bYearFee);\n    return (aAPYwithFee > bAPYwithFee ? -1 : 1) * sortIndex;\n  }, [sortIndex, bulkPairs]);\n  const sortByEarnedLP = useCallback((a, b) => {\n    return (getExactTokenAmount(a.earnedAmount) > getExactTokenAmount(b.earnedAmount) ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortByEarnedDual = useCallback((a, b) => {\n    const earnedA = getExactTokenAmount(a.earnedAmountA) * a.rewardTokenAPrice + getExactTokenAmount(a.earnedAmountB) * a.rewardTokenBPrice;\n    const earnedB = getExactTokenAmount(b.earnedAmountA) * b.rewardTokenAPrice + getExactTokenAmount(b.earnedAmountB) * b.rewardTokenBPrice;\n    return (earnedA > earnedB ? -1 : 1) * sortIndex;\n  }, [sortIndex]);\n  const sortedLPStakingInfos = useMemo(() => {\n    const lpStakingInfos = isEndedFarm ? addedLPStakingOldInfos : addedLPStakingInfos;\n    return lpStakingInfos.sort((a, b) => {\n      if (sortBy === POOL_COLUMN) {\n        return sortByToken(a, b);\n      } else if (sortBy === TVL_COLUMN) {\n        return sortByTVL(a, b);\n      } else if (sortBy === REWARDS_COLUMN) {\n        return sortByRewardLP(a, b);\n      } else if (sortBy === APY_COLUMN) {\n        return sortByAPY(a, b);\n      } else if (sortBy === EARNED_COLUMN) {\n        return sortByEarnedLP(a, b);\n      }\n\n      return 1;\n    });\n  }, [sortBy, addedLPStakingOldInfos, addedLPStakingInfos, isEndedFarm, sortByToken, sortByTVL, sortByRewardLP, sortByAPY, sortByEarnedLP]);\n  const sortedStakingDualInfos = useMemo(() => {\n    const dualStakingInfos = addedDualStakingInfos.filter(info => info.ended === isEndedFarm);\n    return dualStakingInfos.sort((a, b) => {\n      if (sortBy === POOL_COLUMN) {\n        return sortByToken(a, b);\n      } else if (sortBy === TVL_COLUMN) {\n        return sortByTVL(a, b);\n      } else if (sortBy === REWARDS_COLUMN) {\n        return sortByRewardDual(a, b);\n      } else if (sortBy === APY_COLUMN) {\n        return sortByAPY(a, b);\n      } else if (sortBy === EARNED_COLUMN) {\n        return sortByEarnedDual(a, b);\n      }\n\n      return 1;\n    });\n  }, [addedDualStakingInfos, isEndedFarm, sortBy, sortByToken, sortByTVL, sortByRewardDual, sortByAPY, sortByEarnedDual]);\n  const addedStakingInfos = useMemo(() => farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX ? sortedStakingDualInfos : sortedLPStakingInfos, [farmIndex, sortedStakingDualInfos, sortedLPStakingInfos]);\n  const stakingRewardAddress = addedStakingInfos ? addedStakingInfos.map(stakingInfo => stakingInfo.stakingRewardAddress.toLowerCase()).reduce((totStr, str) => totStr + str, '') : null;\n  useEffect(() => {\n    setPageIndex(0);\n  }, [stakingRewardAddress, farmIndex]);\n  const stakingInfos = useMemo(() => {\n    return sortedLPStakingInfos ? sortedLPStakingInfos.slice(0, getPageItemsToLoad(pageIndex, LOADFARM_COUNT)) : null;\n  }, [sortedLPStakingInfos, pageIndex]);\n  const stakingDualInfos = useMemo(() => {\n    return sortedStakingDualInfos ? sortedStakingDualInfos.slice(0, getPageItemsToLoad(pageIndex, LOADFARM_COUNT)) : null;\n  }, [sortedStakingDualInfos, pageIndex]);\n\n  const getPoolApy = pairId => {\n    var _bulkPairs$pairId$toL, _bulkPairs$pairId$toL2;\n\n    if (!pairId || !bulkPairs) {\n      return 0;\n    }\n\n    const oneDayVolume = bulkPairs === null || bulkPairs === void 0 ? void 0 : (_bulkPairs$pairId$toL = bulkPairs[pairId.toLowerCase()]) === null || _bulkPairs$pairId$toL === void 0 ? void 0 : _bulkPairs$pairId$toL.oneDayVolumeUSD;\n    const reserveUSD = bulkPairs === null || bulkPairs === void 0 ? void 0 : (_bulkPairs$pairId$toL2 = bulkPairs[pairId.toLowerCase()]) === null || _bulkPairs$pairId$toL2 === void 0 ? void 0 : _bulkPairs$pairId$toL2.reserveUSD;\n    const oneYearFeeAPY = getOneYearFee(Number(oneDayVolume), Number(reserveUSD));\n    return oneYearFeeAPY;\n  };\n\n  const loadNext = () => {\n    setPageIndex(pageIndex + 1);\n  };\n\n  const {\n    loadMoreRef\n  } = useInfiniteLoading(loadNext);\n  const sortColumns = [{\n    text: t('pool'),\n    index: POOL_COLUMN,\n    width: 0.3,\n    justify: 'flex-start'\n  }, {\n    text: t('tvl'),\n    index: TVL_COLUMN,\n    width: 0.2,\n    justify: 'center'\n  }, {\n    text: t('rewards'),\n    index: REWARDS_COLUMN,\n    width: 0.25,\n    justify: 'center'\n  }, {\n    text: t('apy'),\n    index: APY_COLUMN,\n    width: 0.15,\n    justify: 'center'\n  }, {\n    text: t('earned'),\n    index: EARNED_COLUMN,\n    width: 0.2,\n    justify: 'flex-end'\n  }];\n  const sortByDesktopItems = sortColumns.map(item => {\n    return { ...item,\n      onClick: () => {\n        if (sortBy === item.index) {\n          setSortDesc(!sortDesc);\n        } else {\n          setSortBy(item.index);\n          setSortDesc(false);\n        }\n      }\n    };\n  });\n  const sortByMobileItems = sortColumns.map(item => {\n    return {\n      text: item.text,\n      onClick: () => setSortBy(item.index)\n    };\n  });\n\n  const renderStakedOnly = () => /*#__PURE__*/_jsxDEV(Box, {\n    className: \"flex items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-disabled\",\n      style: {\n        marginRight: 8\n      },\n      children: t('stakedOnly')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n      toggled: stakedOnly,\n      onToggle: () => setStakeOnly(!stakedOnly)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n\n  const farmStatusItems = [{\n    text: t('active'),\n    onClick: () => setIsEndedFarm(false),\n    condition: !isEndedFarm\n  }, {\n    text: t('ended'),\n    onClick: () => setIsEndedFarm(true),\n    condition: isEndedFarm\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"farmListHeader\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: t('earndQUICK')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: t(farmIndex === GlobalConst.farmIndex.LPFARM_INDEX ? 'stakeMessageLP' : 'stakeMessageDual')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-between\",\n          width: returnFullWidthMobile(isMobile),\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            width: isMobile ? 'calc(100% - 150px)' : 1,\n            mr: 2,\n            my: 2,\n            children: /*#__PURE__*/_jsxDEV(SearchInput, {\n              placeholder: isMobile ? t('search') : t('searchPlaceHolder'),\n              value: farmSearchInput,\n              setValue: setFarmSearchInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), isMobile && renderStakedOnly()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: returnFullWidthMobile(isMobile),\n          className: \"flex flex-wrap items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mr: 2,\n            children: /*#__PURE__*/_jsxDEV(CustomSwitch, {\n              width: 160,\n              height: 40,\n              items: farmStatusItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              height: 40,\n              flex: 1,\n              children: /*#__PURE__*/_jsxDEV(CustomMenu, {\n                title: t('sortBy'),\n                menuItems: sortByMobileItems\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              width: 1,\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-disabled\",\n                style: {\n                  marginRight: 8\n                },\n                children: sortDesc ? t('sortdesc') : t('sortasc')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n                toggled: sortDesc,\n                onToggle: () => setSortDesc(!sortDesc)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : renderStakedOnly()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), !isMobile && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2.5,\n      display: \"flex\",\n      paddingX: 2,\n      children: sortByDesktopItems.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        width: item.width,\n        className: `flex items-center cursor-pointer ${sortBy === item.index ? '' : 'text-secondary'}`,\n        justifyContent: item.justify,\n        onClick: item.onClick,\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          ml: 0.5,\n          children: sortBy === item.index && sortDesc ? /*#__PURE__*/_jsxDEV(ArrowDown, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(ArrowUp, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }, this)]\n      }, item.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this), farmIndex === GlobalConst.farmIndex.LPFARM_INDEX && !stakingInfos || farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX && !stakingDualInfos && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"100%\",\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), farmIndex === GlobalConst.farmIndex.LPFARM_INDEX && stakingInfos && stakingInfos.map((info, index) => /*#__PURE__*/_jsxDEV(FarmCard, {\n      stakingInfo: info,\n      stakingAPY: getPoolApy(info === null || info === void 0 ? void 0 : info.pair),\n      isLPFarm: true\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }, this)), farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX && stakingDualInfos && stakingDualInfos.map((info, index) => /*#__PURE__*/_jsxDEV(FarmCard, {\n      stakingInfo: info,\n      stakingAPY: getPoolApy(info === null || info === void 0 ? void 0 : info.pair)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loadMoreRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FarmsList, \"QGmCbK/tLc/sk559osgAjXqY3Fk=\", false, function () {\n  return [useTranslation, useTheme, useMediaQuery, useActiveWeb3React, useDebouncedChangeHandler, useStakingInfo, useOldStakingInfo, useDualStakingInfo, useInfiniteLoading];\n});\n\n_c = FarmsList;\nexport default FarmsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmsList\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/pages/FarmPage/FarmsList.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","useTheme","Box","Divider","useMediaQuery","Skeleton","ArrowUp","ArrowDown","useStakingInfo","useOldStakingInfo","useDualStakingInfo","FarmCard","ToggleSwitch","CustomMenu","SearchInput","CustomSwitch","GlobalConst","getAPYWithFee","getExactTokenAmount","getOneYearFee","getPageItemsToLoad","returnFullWidthMobile","useDebouncedChangeHandler","useInfiniteLoading","useTranslation","useActiveWeb3React","ChainId","LOADFARM_COUNT","POOL_COLUMN","TVL_COLUMN","REWARDS_COLUMN","APY_COLUMN","EARNED_COLUMN","FarmsList","bulkPairs","farmIndex","t","breakpoints","isMobile","down","chainId","pageIndex","setPageIndex","isEndedFarm","setIsEndedFarm","sortBy","setSortBy","sortDesc","setSortDesc","stakedOnly","setStakeOnly","farmSearch","setFarmSearch","farmSearchInput","setFarmSearchInput","chainIdOrDefault","MAINNET","addedLPStakingInfos","DUALFARM_INDEX","undefined","search","isStaked","addedLPStakingOldInfos","addedDualStakingInfos","LPFARM_INDEX","sortIndex","sortByToken","a","b","tokenStrA","tokens","symbol","tokenStrB","sortByTVL","Number","tvl","sortByRewardLP","totalRewardRate","sortByRewardDual","aRewards","rateA","rewardTokenAPrice","rateB","rewardTokenBPrice","bRewards","sortByAPY","aYearFee","bYearFee","aDayVolume","pair","oneDayVolumeUSD","aReserveUSD","reserveUSD","bDayVolume","bReserveUSD","aAPYwithFee","perMonthReturnInRewards","bAPYwithFee","sortByEarnedLP","earnedAmount","sortByEarnedDual","earnedA","earnedAmountA","earnedAmountB","earnedB","sortedLPStakingInfos","lpStakingInfos","sort","sortedStakingDualInfos","dualStakingInfos","filter","info","ended","addedStakingInfos","stakingRewardAddress","map","stakingInfo","toLowerCase","reduce","totStr","str","stakingInfos","slice","stakingDualInfos","getPoolApy","pairId","oneDayVolume","oneYearFeeAPY","loadNext","loadMoreRef","sortColumns","text","index","width","justify","sortByDesktopItems","item","onClick","sortByMobileItems","renderStakedOnly","marginRight","farmStatusItems","condition"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { ArrowUp, ArrowDown } from 'react-feather';\nimport {\n  useStakingInfo,\n  useOldStakingInfo,\n  useDualStakingInfo,\n} from 'state/stake/hooks';\nimport { StakingInfo, DualStakingInfo, CommonStakingInfo } from 'types';\nimport {\n  FarmCard,\n  ToggleSwitch,\n  CustomMenu,\n  SearchInput,\n  CustomSwitch,\n} from 'components';\nimport { GlobalConst } from 'constants/index';\nimport {\n  getAPYWithFee,\n  getExactTokenAmount,\n  getOneYearFee,\n  getPageItemsToLoad,\n  returnFullWidthMobile,\n} from 'utils';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { useInfiniteLoading } from 'utils/useInfiniteLoading';\nimport { useTranslation } from 'react-i18next';\nimport { useActiveWeb3React } from 'hooks';\nimport { ChainId } from '@uniswap/sdk';\n\nconst LOADFARM_COUNT = 10;\nconst POOL_COLUMN = 1;\nconst TVL_COLUMN = 2;\nconst REWARDS_COLUMN = 3;\nconst APY_COLUMN = 4;\nconst EARNED_COLUMN = 5;\n\ninterface FarmsListProps {\n  bulkPairs: any;\n  farmIndex: number;\n}\n\nconst FarmsList: React.FC<FarmsListProps> = ({ bulkPairs, farmIndex }) => {\n  const { t } = useTranslation();\n  const { breakpoints } = useTheme();\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\n  const { chainId } = useActiveWeb3React();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [isEndedFarm, setIsEndedFarm] = useState(false);\n  const [sortBy, setSortBy] = useState(0);\n  const [sortDesc, setSortDesc] = useState(false);\n  const [stakedOnly, setStakeOnly] = useState(false);\n  const [farmSearch, setFarmSearch] = useState('');\n  const [farmSearchInput, setFarmSearchInput] = useDebouncedChangeHandler(\n    farmSearch,\n    setFarmSearch,\n  );\n\n  const chainIdOrDefault = chainId ?? ChainId.MAINNET;\n\n  const addedLPStakingInfos = useStakingInfo(\n    chainIdOrDefault,\n    null,\n    farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || isEndedFarm\n      ? 0\n      : undefined,\n    farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || isEndedFarm\n      ? 0\n      : undefined,\n    { search: farmSearch, isStaked: stakedOnly },\n  );\n  const addedLPStakingOldInfos = useOldStakingInfo(\n    chainIdOrDefault,\n    null,\n    farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || !isEndedFarm\n      ? 0\n      : undefined,\n    farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX || !isEndedFarm\n      ? 0\n      : undefined,\n    { search: farmSearch, isStaked: stakedOnly },\n  );\n  const addedDualStakingInfos = useDualStakingInfo(\n    chainIdOrDefault,\n    null,\n    farmIndex === GlobalConst.farmIndex.LPFARM_INDEX ? 0 : undefined,\n    farmIndex === GlobalConst.farmIndex.LPFARM_INDEX ? 0 : undefined,\n    { search: farmSearch, isStaked: stakedOnly, isEndedFarm },\n  );\n\n  const sortIndex = sortDesc ? 1 : -1;\n\n  const sortByToken = useCallback(\n    (a: CommonStakingInfo, b: CommonStakingInfo) => {\n      const tokenStrA = a.tokens[0].symbol + '/' + a.tokens[1].symbol;\n      const tokenStrB = b.tokens[0].symbol + '/' + b.tokens[1].symbol;\n      return (tokenStrA > tokenStrB ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortByTVL = useCallback(\n    (a: CommonStakingInfo, b: CommonStakingInfo) => {\n      return (Number(a.tvl ?? 0) > Number(b.tvl ?? 0) ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortByRewardLP = useCallback(\n    (a: StakingInfo, b: StakingInfo) => {\n      return (\n        (getExactTokenAmount(a.totalRewardRate) >\n        getExactTokenAmount(b.totalRewardRate)\n          ? -1\n          : 1) * sortIndex\n      );\n    },\n    [sortIndex],\n  );\n\n  const sortByRewardDual = useCallback(\n    (a: DualStakingInfo, b: DualStakingInfo) => {\n      const aRewards =\n        a.rateA * a.rewardTokenAPrice + a.rateB * a.rewardTokenBPrice;\n      const bRewards =\n        b.rateA * b.rewardTokenAPrice + b.rateB * b.rewardTokenBPrice;\n      return (aRewards > bRewards ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortByAPY = useCallback(\n    (a: CommonStakingInfo, b: CommonStakingInfo) => {\n      let aYearFee = 0;\n      let bYearFee = 0;\n      if (bulkPairs) {\n        const aDayVolume = bulkPairs[a.pair]?.oneDayVolumeUSD;\n        const aReserveUSD = bulkPairs[a.pair]?.reserveUSD;\n        const bDayVolume = bulkPairs[b.pair]?.oneDayVolumeUSD;\n        const bReserveUSD = bulkPairs[b.pair]?.reserveUSD;\n        if (aDayVolume && aReserveUSD) {\n          aYearFee = getOneYearFee(aDayVolume, aReserveUSD);\n        }\n        if (bDayVolume && bReserveUSD) {\n          bYearFee = getOneYearFee(bDayVolume, bReserveUSD);\n        }\n      }\n      const aAPYwithFee = getAPYWithFee(\n        a.perMonthReturnInRewards ?? 0,\n        aYearFee,\n      );\n      const bAPYwithFee = getAPYWithFee(\n        b.perMonthReturnInRewards ?? 0,\n        bYearFee,\n      );\n      return (aAPYwithFee > bAPYwithFee ? -1 : 1) * sortIndex;\n    },\n    [sortIndex, bulkPairs],\n  );\n\n  const sortByEarnedLP = useCallback(\n    (a: StakingInfo, b: StakingInfo) => {\n      return (\n        (getExactTokenAmount(a.earnedAmount) >\n        getExactTokenAmount(b.earnedAmount)\n          ? -1\n          : 1) * sortIndex\n      );\n    },\n    [sortIndex],\n  );\n\n  const sortByEarnedDual = useCallback(\n    (a: DualStakingInfo, b: DualStakingInfo) => {\n      const earnedA =\n        getExactTokenAmount(a.earnedAmountA) * a.rewardTokenAPrice +\n        getExactTokenAmount(a.earnedAmountB) * a.rewardTokenBPrice;\n      const earnedB =\n        getExactTokenAmount(b.earnedAmountA) * b.rewardTokenAPrice +\n        getExactTokenAmount(b.earnedAmountB) * b.rewardTokenBPrice;\n      return (earnedA > earnedB ? -1 : 1) * sortIndex;\n    },\n    [sortIndex],\n  );\n\n  const sortedLPStakingInfos = useMemo(() => {\n    const lpStakingInfos = isEndedFarm\n      ? addedLPStakingOldInfos\n      : addedLPStakingInfos;\n    return lpStakingInfos.sort((a, b) => {\n      if (sortBy === POOL_COLUMN) {\n        return sortByToken(a, b);\n      } else if (sortBy === TVL_COLUMN) {\n        return sortByTVL(a, b);\n      } else if (sortBy === REWARDS_COLUMN) {\n        return sortByRewardLP(a, b);\n      } else if (sortBy === APY_COLUMN) {\n        return sortByAPY(a, b);\n      } else if (sortBy === EARNED_COLUMN) {\n        return sortByEarnedLP(a, b);\n      }\n      return 1;\n    });\n  }, [\n    sortBy,\n    addedLPStakingOldInfos,\n    addedLPStakingInfos,\n    isEndedFarm,\n    sortByToken,\n    sortByTVL,\n    sortByRewardLP,\n    sortByAPY,\n    sortByEarnedLP,\n  ]);\n\n  const sortedStakingDualInfos = useMemo(() => {\n    const dualStakingInfos = addedDualStakingInfos.filter(\n      (info) => info.ended === isEndedFarm,\n    );\n    return dualStakingInfos.sort((a, b) => {\n      if (sortBy === POOL_COLUMN) {\n        return sortByToken(a, b);\n      } else if (sortBy === TVL_COLUMN) {\n        return sortByTVL(a, b);\n      } else if (sortBy === REWARDS_COLUMN) {\n        return sortByRewardDual(a, b);\n      } else if (sortBy === APY_COLUMN) {\n        return sortByAPY(a, b);\n      } else if (sortBy === EARNED_COLUMN) {\n        return sortByEarnedDual(a, b);\n      }\n      return 1;\n    });\n  }, [\n    addedDualStakingInfos,\n    isEndedFarm,\n    sortBy,\n    sortByToken,\n    sortByTVL,\n    sortByRewardDual,\n    sortByAPY,\n    sortByEarnedDual,\n  ]);\n\n  const addedStakingInfos = useMemo(\n    () =>\n      farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX\n        ? sortedStakingDualInfos\n        : sortedLPStakingInfos,\n    [farmIndex, sortedStakingDualInfos, sortedLPStakingInfos],\n  );\n\n  const stakingRewardAddress = addedStakingInfos\n    ? addedStakingInfos\n        .map((stakingInfo) => stakingInfo.stakingRewardAddress.toLowerCase())\n        .reduce((totStr, str) => totStr + str, '')\n    : null;\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [stakingRewardAddress, farmIndex]);\n\n  const stakingInfos = useMemo(() => {\n    return sortedLPStakingInfos\n      ? sortedLPStakingInfos.slice(\n          0,\n          getPageItemsToLoad(pageIndex, LOADFARM_COUNT),\n        )\n      : null;\n  }, [sortedLPStakingInfos, pageIndex]);\n\n  const stakingDualInfos = useMemo(() => {\n    return sortedStakingDualInfos\n      ? sortedStakingDualInfos.slice(\n          0,\n          getPageItemsToLoad(pageIndex, LOADFARM_COUNT),\n        )\n      : null;\n  }, [sortedStakingDualInfos, pageIndex]);\n\n  const getPoolApy = (pairId: string) => {\n    if (!pairId || !bulkPairs) {\n      return 0;\n    }\n\n    const oneDayVolume = bulkPairs?.[pairId.toLowerCase()]?.oneDayVolumeUSD;\n    const reserveUSD = bulkPairs?.[pairId.toLowerCase()]?.reserveUSD;\n    const oneYearFeeAPY = getOneYearFee(\n      Number(oneDayVolume),\n      Number(reserveUSD),\n    );\n    return oneYearFeeAPY;\n  };\n\n  const loadNext = () => {\n    setPageIndex(pageIndex + 1);\n  };\n\n  const { loadMoreRef } = useInfiniteLoading(loadNext);\n\n  const sortColumns = [\n    { text: t('pool'), index: POOL_COLUMN, width: 0.3, justify: 'flex-start' },\n    { text: t('tvl'), index: TVL_COLUMN, width: 0.2, justify: 'center' },\n    {\n      text: t('rewards'),\n      index: REWARDS_COLUMN,\n      width: 0.25,\n      justify: 'center',\n    },\n    { text: t('apy'), index: APY_COLUMN, width: 0.15, justify: 'center' },\n    {\n      text: t('earned'),\n      index: EARNED_COLUMN,\n      width: 0.2,\n      justify: 'flex-end',\n    },\n  ];\n\n  const sortByDesktopItems = sortColumns.map((item) => {\n    return {\n      ...item,\n      onClick: () => {\n        if (sortBy === item.index) {\n          setSortDesc(!sortDesc);\n        } else {\n          setSortBy(item.index);\n          setSortDesc(false);\n        }\n      },\n    };\n  });\n\n  const sortByMobileItems = sortColumns.map((item) => {\n    return { text: item.text, onClick: () => setSortBy(item.index) };\n  });\n\n  const renderStakedOnly = () => (\n    <Box className='flex items-center'>\n      <small className='text-disabled' style={{ marginRight: 8 }}>\n        {t('stakedOnly')}\n      </small>\n      <ToggleSwitch\n        toggled={stakedOnly}\n        onToggle={() => setStakeOnly(!stakedOnly)}\n      />\n    </Box>\n  );\n\n  const farmStatusItems = [\n    {\n      text: t('active'),\n      onClick: () => setIsEndedFarm(false),\n      condition: !isEndedFarm,\n    },\n    {\n      text: t('ended'),\n      onClick: () => setIsEndedFarm(true),\n      condition: isEndedFarm,\n    },\n  ];\n\n  return (\n    <>\n      <Box className='farmListHeader'>\n        <Box>\n          <h5>{t('earndQUICK')}</h5>\n          <small>\n            {t(\n              farmIndex === GlobalConst.farmIndex.LPFARM_INDEX\n                ? 'stakeMessageLP'\n                : 'stakeMessageDual',\n            )}\n          </small>\n        </Box>\n        <Box className='flex flex-wrap'>\n          <Box\n            className='flex justify-between'\n            width={returnFullWidthMobile(isMobile)}\n          >\n            <Box width={isMobile ? 'calc(100% - 150px)' : 1} mr={2} my={2}>\n              <SearchInput\n                placeholder={isMobile ? t('search') : t('searchPlaceHolder')}\n                value={farmSearchInput}\n                setValue={setFarmSearchInput}\n              />\n            </Box>\n            {isMobile && renderStakedOnly()}\n          </Box>\n          <Box\n            width={returnFullWidthMobile(isMobile)}\n            className='flex flex-wrap items-center'\n          >\n            <Box mr={2}>\n              <CustomSwitch width={160} height={40} items={farmStatusItems} />\n            </Box>\n            {isMobile ? (\n              <>\n                <Box height={40} flex={1}>\n                  <CustomMenu\n                    title={t('sortBy')}\n                    menuItems={sortByMobileItems}\n                  />\n                </Box>\n                <Box mt={2} width={1} className='flex items-center'>\n                  <small className='text-disabled' style={{ marginRight: 8 }}>\n                    {sortDesc ? t('sortdesc') : t('sortasc')}\n                  </small>\n                  <ToggleSwitch\n                    toggled={sortDesc}\n                    onToggle={() => setSortDesc(!sortDesc)}\n                  />\n                </Box>\n              </>\n            ) : (\n              renderStakedOnly()\n            )}\n          </Box>\n        </Box>\n      </Box>\n      <Divider />\n      {!isMobile && (\n        <Box mt={2.5} display='flex' paddingX={2}>\n          {sortByDesktopItems.map((item) => (\n            <Box\n              key={item.index}\n              width={item.width}\n              className={`flex items-center cursor-pointer ${\n                sortBy === item.index ? '' : 'text-secondary'\n              }`}\n              justifyContent={item.justify}\n              onClick={item.onClick}\n            >\n              <small>{item.text}</small>\n              <Box display='flex' ml={0.5}>\n                {sortBy === item.index && sortDesc ? (\n                  <ArrowDown size={20} />\n                ) : (\n                  <ArrowUp size={20} />\n                )}\n              </Box>\n            </Box>\n          ))}\n        </Box>\n      )}\n      {(farmIndex === GlobalConst.farmIndex.LPFARM_INDEX && !stakingInfos) ||\n        (farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX &&\n          !stakingDualInfos && (\n            <>\n              <Skeleton width='100%' height={100} />\n              <Skeleton width='100%' height={100} />\n              <Skeleton width='100%' height={100} />\n              <Skeleton width='100%' height={100} />\n              <Skeleton width='100%' height={100} />\n            </>\n          ))}\n      {farmIndex === GlobalConst.farmIndex.LPFARM_INDEX &&\n        stakingInfos &&\n        stakingInfos.map((info: StakingInfo, index) => (\n          <FarmCard\n            key={index}\n            stakingInfo={info}\n            stakingAPY={getPoolApy(info?.pair)}\n            isLPFarm={true}\n          />\n        ))}\n      {farmIndex === GlobalConst.farmIndex.DUALFARM_INDEX &&\n        stakingDualInfos &&\n        stakingDualInfos.map((info: DualStakingInfo, index) => (\n          <FarmCard\n            key={index}\n            stakingInfo={info}\n            stakingAPY={getPoolApy(info?.pair)}\n          />\n        ))}\n      <div ref={loadMoreRef} />\n    </>\n  );\n};\n\nexport default FarmsList;\n"]},"metadata":{},"sourceType":"module"}