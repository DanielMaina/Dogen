{"ast":null,"code":"var _jsxFileName = \"/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/SettingsModal/SettingsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { KeyboardArrowDown } from '@material-ui/icons';\nimport { AlertTriangle } from 'react-feather';\nimport { CustomModal, NumericalInput, QuestionHelper, ToggleSwitch } from 'components';\nimport { useSwapActionHandlers } from 'state/swap/hooks';\nimport { useExpertModeManager, useUserTransactionTTL, useUserSlippageTolerance } from 'state/user/hooks';\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/images/CloseIcon.svg\";\nimport 'components/styles/SettingsModal.scss';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SlippageError;\n\n(function (SlippageError) {\n  SlippageError[\"InvalidInput\"] = \"InvalidInput\";\n  SlippageError[\"RiskyLow\"] = \"RiskyLow\";\n  SlippageError[\"RiskyHigh\"] = \"RiskyHigh\";\n})(SlippageError || (SlippageError = {}));\n\nvar DeadlineError;\n\n(function (DeadlineError) {\n  DeadlineError[\"InvalidInput\"] = \"InvalidInput\";\n})(DeadlineError || (DeadlineError = {}));\n\nconst SettingsModal = _ref => {\n  _s();\n\n  let {\n    open,\n    onClose\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  const [ttl, setTtl] = useUserTransactionTTL();\n  const {\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const [expertMode, toggleExpertMode] = useExpertModeManager();\n  const [slippageInput, setSlippageInput] = useState('');\n  const [deadlineInput, setDeadlineInput] = useState('');\n  const [expertConfirm, setExpertConfirm] = useState(false);\n  const [expertConfirmText, setExpertConfirmText] = useState('');\n  const slippageInputIsValid = slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2);\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput;\n  const slippageError = useMemo(() => {\n    if (slippageInput !== '' && !slippageInputIsValid) {\n      return SlippageError.InvalidInput;\n    } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n      return SlippageError.RiskyLow;\n    } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n      return SlippageError.RiskyHigh;\n    } else {\n      return undefined;\n    }\n  }, [slippageInput, userSlippageTolerance, slippageInputIsValid]);\n  const slippageAlert = !!slippageInput && (slippageError === SlippageError.RiskyLow || slippageError === SlippageError.RiskyHigh);\n  const deadlineError = useMemo(() => {\n    if (deadlineInput !== '' && !deadlineInputIsValid) {\n      return DeadlineError.InvalidInput;\n    } else {\n      return undefined;\n    }\n  }, [deadlineInput, deadlineInputIsValid]);\n\n  const parseCustomSlippage = value => {\n    setSlippageInput(value);\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString());\n\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserslippageTolerance(valueAsIntFromRoundedFloat);\n      }\n    } catch {}\n  };\n\n  const parseCustomDeadline = value => {\n    setDeadlineInput(value);\n\n    try {\n      const valueAsInt = Number.parseInt(value) * 60;\n\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt);\n      }\n    } catch {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomModal, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(CustomModal, {\n      open: expertConfirm,\n      onClose: () => setExpertConfirm(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        paddingX: 3,\n        paddingY: 4,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: t('areyousure')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n            className: \"cursor-pointer\",\n            onClick: () => setExpertConfirm(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2.5,\n          mb: 1.5,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: t('expertModeDesc')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 3,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-bold text-uppercase\",\n              children: t('expertModeUse')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 3,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-bold\",\n              children: t('typeConfirmExpertMode')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"expertConfirmInput\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: expertConfirmText,\n            onChange: e => setExpertConfirmText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: `expertButtonWrapper${expertConfirmText === 'confirm' ? '' : ' opacity-disabled'}`,\n          onClick: () => {\n            if (expertConfirmText === 'confirm') {\n              toggleExpertMode();\n              setExpertConfirm(false);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weight-600\",\n            children: t('turnonExpert')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      paddingX: 3,\n      paddingY: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 3,\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: t('settings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2.5,\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mr: \"6px\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t('slippageTolerance')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          size: 20,\n          text: t('slippageHelper')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2.5,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: `slippageButton${userSlippageTolerance === 10 ? ' activeSlippageButton' : ''}`,\n            onClick: () => {\n              setSlippageInput('');\n              setUserslippageTolerance(10);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"0.1%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `slippageButton${userSlippageTolerance === 50 ? ' activeSlippageButton' : ''}`,\n            onClick: () => {\n              setSlippageInput('');\n              setUserslippageTolerance(50);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"0.5%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `slippageButton${userSlippageTolerance === 100 ? ' activeSlippageButton' : ''}`,\n            onClick: () => {\n              setSlippageInput('');\n              setUserslippageTolerance(100);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"1%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: `settingsInputWrapper ${slippageAlert ? 'border-primary' : 'border-secondary1'}`,\n            children: [slippageAlert && /*#__PURE__*/_jsxDEV(AlertTriangle, {\n              color: \"#ffa000\",\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(NumericalInput, {\n              placeholder: (userSlippageTolerance / 100).toFixed(2),\n              value: slippageInput,\n              fontSize: 14,\n              fontWeight: 500,\n              align: \"right\",\n              onBlur: () => {\n                parseCustomSlippage((userSlippageTolerance / 100).toFixed(2));\n              },\n              onUserInput: value => parseCustomSlippage(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), slippageError && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 1.5,\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-yellow3\",\n            children: slippageError === SlippageError.InvalidInput ? t('enterValidSlippage') : slippageError === SlippageError.RiskyLow ? t('txMayFail') : t('txMayFrontrun')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2.5,\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mr: \"6px\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t('txDeadline')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          size: 20,\n          text: t('txDeadlineHelper')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2.5,\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"settingsInputWrapper\",\n          maxWidth: 168,\n          children: /*#__PURE__*/_jsxDEV(NumericalInput, {\n            placeholder: (ttl / 60).toString(),\n            value: deadlineInput,\n            fontSize: 14,\n            fontWeight: 500,\n            onBlur: () => {\n              parseCustomDeadline((ttl / 60).toString());\n            },\n            onUserInput: value => parseCustomDeadline(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: 1,\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: t('minutes')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), deadlineError && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 1.5,\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-yellow3\",\n          children: t('enterValidDeadline')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 2.5,\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginRight: 6\n            },\n            children: t('expertMode')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            size: 20,\n            text: t('expertModeHelper')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          toggled: expertMode,\n          onToggle: () => {\n            if (expertMode) {\n              toggleExpertMode();\n              onChangeRecipient(null);\n            } else {\n              setExpertConfirm(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2.5,\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('language')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [t('english'), \" (\", t('default'), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsModal, \"Ymeu+aG8OTI4uOM3mizfY0uA/l8=\", false, function () {\n  return [useTranslation, useUserSlippageTolerance, useUserTransactionTTL, useSwapActionHandlers, useExpertModeManager];\n});\n\n_c = SettingsModal;\nexport default SettingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsModal\");","map":{"version":3,"sources":["/Users/danielmaina/Downloads/_newCrptProj/clientBase/DEX/interface-v2-master/src/components/SettingsModal/SettingsModal.tsx"],"names":["React","useState","useMemo","Box","Divider","KeyboardArrowDown","AlertTriangle","CustomModal","NumericalInput","QuestionHelper","ToggleSwitch","useSwapActionHandlers","useExpertModeManager","useUserTransactionTTL","useUserSlippageTolerance","useTranslation","SlippageError","DeadlineError","SettingsModal","open","onClose","t","userSlippageTolerance","setUserslippageTolerance","ttl","setTtl","onChangeRecipient","expertMode","toggleExpertMode","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","expertConfirm","setExpertConfirm","expertConfirmText","setExpertConfirmText","slippageInputIsValid","toFixed","Number","parseFloat","deadlineInputIsValid","toString","slippageError","InvalidInput","RiskyLow","RiskyHigh","undefined","slippageAlert","deadlineError","parseCustomSlippage","value","valueAsIntFromRoundedFloat","parseInt","isNaN","parseCustomDeadline","valueAsInt","e","target","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { KeyboardArrowDown } from '@material-ui/icons';\nimport { AlertTriangle } from 'react-feather';\nimport {\n  CustomModal,\n  NumericalInput,\n  QuestionHelper,\n  ToggleSwitch,\n} from 'components';\nimport { useSwapActionHandlers } from 'state/swap/hooks';\nimport {\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n} from 'state/user/hooks';\nimport { ReactComponent as CloseIcon } from 'assets/images/CloseIcon.svg';\nimport 'components/styles/SettingsModal.scss';\nimport { useTranslation } from 'react-i18next';\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\ninterface SettingsModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst SettingsModal: React.FC<SettingsModalProps> = ({ open, onClose }) => {\n  const { t } = useTranslation();\n  const [\n    userSlippageTolerance,\n    setUserslippageTolerance,\n  ] = useUserSlippageTolerance();\n  const [ttl, setTtl] = useUserTransactionTTL();\n  const { onChangeRecipient } = useSwapActionHandlers();\n  const [expertMode, toggleExpertMode] = useExpertModeManager();\n  const [slippageInput, setSlippageInput] = useState('');\n  const [deadlineInput, setDeadlineInput] = useState('');\n  const [expertConfirm, setExpertConfirm] = useState(false);\n  const [expertConfirmText, setExpertConfirmText] = useState('');\n\n  const slippageInputIsValid =\n    slippageInput === '' ||\n    (userSlippageTolerance / 100).toFixed(2) ===\n      Number.parseFloat(slippageInput).toFixed(2);\n  const deadlineInputIsValid =\n    deadlineInput === '' || (ttl / 60).toString() === deadlineInput;\n\n  const slippageError = useMemo(() => {\n    if (slippageInput !== '' && !slippageInputIsValid) {\n      return SlippageError.InvalidInput;\n    } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n      return SlippageError.RiskyLow;\n    } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n      return SlippageError.RiskyHigh;\n    } else {\n      return undefined;\n    }\n  }, [slippageInput, userSlippageTolerance, slippageInputIsValid]);\n\n  const slippageAlert =\n    !!slippageInput &&\n    (slippageError === SlippageError.RiskyLow ||\n      slippageError === SlippageError.RiskyHigh);\n\n  const deadlineError = useMemo(() => {\n    if (deadlineInput !== '' && !deadlineInputIsValid) {\n      return DeadlineError.InvalidInput;\n    } else {\n      return undefined;\n    }\n  }, [deadlineInput, deadlineInputIsValid]);\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value);\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt(\n        (Number.parseFloat(value) * 100).toString(),\n      );\n      if (\n        !Number.isNaN(valueAsIntFromRoundedFloat) &&\n        valueAsIntFromRoundedFloat < 5000\n      ) {\n        setUserslippageTolerance(valueAsIntFromRoundedFloat);\n      }\n    } catch {}\n  };\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value);\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60;\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt);\n      }\n    } catch {}\n  };\n\n  return (\n    <CustomModal open={open} onClose={onClose}>\n      <CustomModal open={expertConfirm} onClose={() => setExpertConfirm(false)}>\n        <Box paddingX={3} paddingY={4}>\n          <Box mb={3} className='flex justify-between items-center'>\n            <h5>{t('areyousure')}</h5>\n            <CloseIcon\n              className='cursor-pointer'\n              onClick={() => setExpertConfirm(false)}\n            />\n          </Box>\n          <Divider />\n          <Box mt={2.5} mb={1.5}>\n            <p>{t('expertModeDesc')}</p>\n            <Box mt={3}>\n              <p className='text-bold text-uppercase'>{t('expertModeUse')}</p>\n            </Box>\n            <Box mt={3}>\n              <p className='text-bold'>{t('typeConfirmExpertMode')}</p>\n            </Box>\n          </Box>\n          <Box className='expertConfirmInput'>\n            <input\n              value={expertConfirmText}\n              onChange={(e: any) => setExpertConfirmText(e.target.value)}\n            />\n          </Box>\n          <Box\n            className={`expertButtonWrapper${\n              expertConfirmText === 'confirm' ? '' : ' opacity-disabled'\n            }`}\n            onClick={() => {\n              if (expertConfirmText === 'confirm') {\n                toggleExpertMode();\n                setExpertConfirm(false);\n              }\n            }}\n          >\n            <p className='weight-600'>{t('turnonExpert')}</p>\n          </Box>\n        </Box>\n      </CustomModal>\n      <Box paddingX={3} paddingY={4}>\n        <Box mb={3} className='flex justify-between items-center'>\n          <h5>{t('settings')}</h5>\n          <CloseIcon onClick={onClose} />\n        </Box>\n        <Divider />\n        <Box my={2.5} className='flex items-center'>\n          <Box mr='6px'>\n            <p>{t('slippageTolerance')}</p>\n          </Box>\n          <QuestionHelper size={20} text={t('slippageHelper')} />\n        </Box>\n        <Box mb={2.5}>\n          <Box className='flex items-center'>\n            <Box\n              className={`slippageButton${\n                userSlippageTolerance === 10 ? ' activeSlippageButton' : ''\n              }`}\n              onClick={() => {\n                setSlippageInput('');\n                setUserslippageTolerance(10);\n              }}\n            >\n              <small>0.1%</small>\n            </Box>\n            <Box\n              className={`slippageButton${\n                userSlippageTolerance === 50 ? ' activeSlippageButton' : ''\n              }`}\n              onClick={() => {\n                setSlippageInput('');\n                setUserslippageTolerance(50);\n              }}\n            >\n              <small>0.5%</small>\n            </Box>\n            <Box\n              className={`slippageButton${\n                userSlippageTolerance === 100 ? ' activeSlippageButton' : ''\n              }`}\n              onClick={() => {\n                setSlippageInput('');\n                setUserslippageTolerance(100);\n              }}\n            >\n              <small>1%</small>\n            </Box>\n            <Box\n              className={`settingsInputWrapper ${\n                slippageAlert ? 'border-primary' : 'border-secondary1'\n              }`}\n            >\n              {slippageAlert && <AlertTriangle color='#ffa000' size={16} />}\n              <NumericalInput\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                fontSize={14}\n                fontWeight={500}\n                align='right'\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2));\n                }}\n                onUserInput={(value) => parseCustomSlippage(value)}\n              />\n              <small>%</small>\n            </Box>\n          </Box>\n          {slippageError && (\n            <Box mt={1.5}>\n              <small className='text-yellow3'>\n                {slippageError === SlippageError.InvalidInput\n                  ? t('enterValidSlippage')\n                  : slippageError === SlippageError.RiskyLow\n                  ? t('txMayFail')\n                  : t('txMayFrontrun')}\n              </small>\n            </Box>\n          )}\n        </Box>\n        <Divider />\n        <Box my={2.5} className='flex items-center'>\n          <Box mr='6px'>\n            <p>{t('txDeadline')}</p>\n          </Box>\n          <QuestionHelper size={20} text={t('txDeadlineHelper')} />\n        </Box>\n        <Box mb={2.5} className='flex items-center'>\n          <Box className='settingsInputWrapper' maxWidth={168}>\n            <NumericalInput\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              fontSize={14}\n              fontWeight={500}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString());\n              }}\n              onUserInput={(value) => parseCustomDeadline(value)}\n            />\n          </Box>\n          <Box ml={1}>\n            <small>{t('minutes')}</small>\n          </Box>\n        </Box>\n        {deadlineError && (\n          <Box mt={1.5}>\n            <small className='text-yellow3'>{t('enterValidDeadline')}</small>\n          </Box>\n        )}\n        <Divider />\n        <Box my={2.5} className='flex justify-between items-center'>\n          <Box className='flex items-center'>\n            <p style={{ marginRight: 6 }}>{t('expertMode')}</p>\n            <QuestionHelper size={20} text={t('expertModeHelper')} />\n          </Box>\n          <ToggleSwitch\n            toggled={expertMode}\n            onToggle={() => {\n              if (expertMode) {\n                toggleExpertMode();\n                onChangeRecipient(null);\n              } else {\n                setExpertConfirm(true);\n              }\n            }}\n          />\n        </Box>\n        <Divider />\n        <Box mt={2.5} className='flex justify-between items-center'>\n          <p>{t('language')}</p>\n          <Box className='flex items-center'>\n            <p>\n              {t('english')} ({t('default')})\n            </p>\n            <KeyboardArrowDown />\n          </Box>\n        </Box>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default SettingsModal;\n"]},"metadata":{},"sourceType":"module"}